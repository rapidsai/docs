{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": [
     "library/optuna",
     "library/dask",
     "workflow/hpo",
     "library/cuml",
     "library/numpy",
     "dataset/bnp-claims"
    ]
   },
   "source": [
    "# Getting Started with Optuna and RAPIDS for HPO\n",
    "Hyperparameter optimization (HPO) automates the process of picking values for the hyperparameters of a machine learning algorithm to improve model performance. This can help boost the model accuracy, but can be resource-intensive, as it may require training the model for hundreds of hyperparameter combinations. Let's take a look at how we can use Optuna and RAPIDS to make HPO less time-consuming.\n",
    "\n",
    "## RAPIDS\n",
    "The RAPIDS framework provides a suite of libraries to execute end-to-end data science pipelines entirely on GPUs. One of the libraries in this framework is cuML, which implements common machine learning models with a scikit-learn-compatible API and a GPU-accelerated backend. You can learn more about RAPIDS [here](https://rapids.ai/about.html).\n",
    "\n",
    "## Optuna\n",
    "[Optuna](https://optuna.readthedocs.io/en/stable/) is a lightweight framework for automatic hyperparameter optimization. It provides a define-by-run API, which makes it easy to adapt to any already existing code that we have and enables high modularity along with the flexibility to construct hyperparameter spaces dynamically. By simply wrapping the objective function with Optuna, we can perform a parallel-distributed HPO search over a search space as we'll see in this notebook.\n",
    "\n",
    "\n",
    "In this notebook, we'll use BNP Paribas Cardif Claims Management dataset from Kaggle to predict if a claim will receive accelerated approval or not. We'll explore how to use Optuna with RAPIDS in combination with Dask to run multi-GPU HPO experiments that can yield results faster than CPU."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Run this cell to install optuna\n",
    "# !pip install optuna"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cudf\n",
    "import cuml\n",
    "import dask_cudf\n",
    "import numpy as np\n",
    "import optuna\n",
    "import os\n",
    "import dask\n",
    "\n",
    "from cuml import LogisticRegression\n",
    "from cuml.model_selection import train_test_split\n",
    "from cuml.metrics import log_loss\n",
    "\n",
    "from dask_cuda import LocalCUDACluster\n",
    "from dask.distributed import Client, wait, performance_report"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Set up CUDA Cluster\n",
    "\n",
    "We start a local cluster and keep it ready for running distributed tasks with dask. The dask scheduler can help leverage multiple nodes available on the cluster.\n",
    "\n",
    "[LocalCUDACluster](https://github.com/rapidsai/dask-cuda) launches one Dask worker for each GPU in the current systems. It's developed as a part of the RAPIDS project. Learn More:\n",
    "- [Setting up Dask](https://docs.dask.org/en/latest/setup.html)\n",
    "- [Dask Client](https://distributed.dask.org/en/latest/client.html)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-02-17 10:37:50,019 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,019 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,042 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,043 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,169 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,169 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,169 - distributed.preloading - INFO - Creating preload: dask_cuda.initialize\n",
      "2023-02-17 10:37:50,169 - distributed.preloading - INFO - Import preload module: dask_cuda.initialize\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n",
       "    <div style=\"margin-left: 48px;\">\n",
       "        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n",
       "        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-208a573f-aeaf-11ed-838c-98039b8174ae</p>\n",
       "        <table style=\"width: 100%; text-align: left;\">\n",
       "\n",
       "        <tr>\n",
       "        \n",
       "            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n",
       "            <td style=\"text-align: left;\"><strong>Cluster type:</strong> dask_cuda.LocalCUDACluster</td>\n",
       "        \n",
       "        </tr>\n",
       "\n",
       "        \n",
       "            <tr>\n",
       "                <td style=\"text-align: left;\">\n",
       "                    <strong>Dashboard: </strong> <a href=\"http://10.136.7.105:8081/status\" target=\"_blank\">http://10.136.7.105:8081/status</a>\n",
       "                </td>\n",
       "                <td style=\"text-align: left;\"></td>\n",
       "            </tr>\n",
       "        \n",
       "\n",
       "        </table>\n",
       "\n",
       "        \n",
       "\n",
       "        \n",
       "            <details>\n",
       "            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n",
       "            <div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n",
       "    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n",
       "    </div>\n",
       "    <div style=\"margin-left: 48px;\">\n",
       "        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCUDACluster</h3>\n",
       "        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">3295963d</p>\n",
       "        <table style=\"width: 100%; text-align: left;\">\n",
       "            <tr>\n",
       "                <td style=\"text-align: left;\">\n",
       "                    <strong>Dashboard:</strong> <a href=\"http://10.136.7.105:8081/status\" target=\"_blank\">http://10.136.7.105:8081/status</a>\n",
       "                </td>\n",
       "                <td style=\"text-align: left;\">\n",
       "                    <strong>Workers:</strong> 4\n",
       "                </td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td style=\"text-align: left;\">\n",
       "                    <strong>Total threads:</strong> 4\n",
       "                </td>\n",
       "                <td style=\"text-align: left;\">\n",
       "                    <strong>Total memory:</strong> 376.54 GiB\n",
       "                </td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n",
       "    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n",
       "</tr>\n",
       "\n",
       "            \n",
       "        </table>\n",
       "\n",
       "        <details>\n",
       "            <summary style=\"margin-bottom: 20px;\">\n",
       "                <h3 style=\"display: inline;\">Scheduler Info</h3>\n",
       "            </summary>\n",
       "\n",
       "            <div style=\"\">\n",
       "    <div>\n",
       "        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n",
       "        <div style=\"margin-left: 48px;\">\n",
       "            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n",
       "            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-251b634e-1d2a-452c-82e6-ca8e9685c065</p>\n",
       "            <table style=\"width: 100%; text-align: left;\">\n",
       "                <tr>\n",
       "                    <td style=\"text-align: left;\">\n",
       "                        <strong>Comm:</strong> tcp://10.136.7.105:32955\n",
       "                    </td>\n",
       "                    <td style=\"text-align: left;\">\n",
       "                        <strong>Workers:</strong> 4\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td style=\"text-align: left;\">\n",
       "                        <strong>Dashboard:</strong> <a href=\"http://10.136.7.105:8081/status\" target=\"_blank\">http://10.136.7.105:8081/status</a>\n",
       "                    </td>\n",
       "                    <td style=\"text-align: left;\">\n",
       "                        <strong>Total threads:</strong> 4\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td style=\"text-align: left;\">\n",
       "                        <strong>Started:</strong> Just now\n",
       "                    </td>\n",
       "                    <td style=\"text-align: left;\">\n",
       "                        <strong>Total memory:</strong> 376.54 GiB\n",
       "                    </td>\n",
       "                </tr>\n",
       "            </table>\n",
       "        </div>\n",
       "    </div>\n",
       "\n",
       "    <details style=\"margin-left: 48px;\">\n",
       "        <summary style=\"margin-bottom: 20px;\">\n",
       "            <h3 style=\"display: inline;\">Workers</h3>\n",
       "        </summary>\n",
       "\n",
       "        \n",
       "        <div style=\"margin-bottom: 20px;\">\n",
       "            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n",
       "            <div style=\"margin-left: 48px;\">\n",
       "            <details>\n",
       "                <summary>\n",
       "                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n",
       "                </summary>\n",
       "                <table style=\"width: 100%; text-align: left;\">\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Comm: </strong> tcp://10.136.7.105:43509\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Total threads: </strong> 1\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Dashboard: </strong> <a href=\"http://10.136.7.105:39899/status\" target=\"_blank\">http://10.136.7.105:39899/status</a>\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Memory: </strong> 94.13 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Nanny: </strong> tcp://10.136.7.105:39141\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\"></td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td colspan=\"2\" style=\"text-align: left;\">\n",
       "                            <strong>Local directory: </strong> /tmp/dask-worker-space/worker-x_wwwz34\n",
       "                        </td>\n",
       "                    </tr>\n",
       "\n",
       "                    \n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU: </strong>Tesla T4\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU memory: </strong> 14.76 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    \n",
       "\n",
       "                    \n",
       "\n",
       "                </table>\n",
       "            </details>\n",
       "            </div>\n",
       "        </div>\n",
       "        \n",
       "        <div style=\"margin-bottom: 20px;\">\n",
       "            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n",
       "            <div style=\"margin-left: 48px;\">\n",
       "            <details>\n",
       "                <summary>\n",
       "                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n",
       "                </summary>\n",
       "                <table style=\"width: 100%; text-align: left;\">\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Comm: </strong> tcp://10.136.7.105:37595\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Total threads: </strong> 1\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Dashboard: </strong> <a href=\"http://10.136.7.105:32887/status\" target=\"_blank\">http://10.136.7.105:32887/status</a>\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Memory: </strong> 94.13 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Nanny: </strong> tcp://10.136.7.105:39781\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\"></td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td colspan=\"2\" style=\"text-align: left;\">\n",
       "                            <strong>Local directory: </strong> /tmp/dask-worker-space/worker-m8xv2btv\n",
       "                        </td>\n",
       "                    </tr>\n",
       "\n",
       "                    \n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU: </strong>Tesla T4\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU memory: </strong> 14.76 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    \n",
       "\n",
       "                    \n",
       "\n",
       "                </table>\n",
       "            </details>\n",
       "            </div>\n",
       "        </div>\n",
       "        \n",
       "        <div style=\"margin-bottom: 20px;\">\n",
       "            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n",
       "            <div style=\"margin-left: 48px;\">\n",
       "            <details>\n",
       "                <summary>\n",
       "                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n",
       "                </summary>\n",
       "                <table style=\"width: 100%; text-align: left;\">\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Comm: </strong> tcp://10.136.7.105:36879\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Total threads: </strong> 1\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Dashboard: </strong> <a href=\"http://10.136.7.105:33629/status\" target=\"_blank\">http://10.136.7.105:33629/status</a>\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Memory: </strong> 94.13 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Nanny: </strong> tcp://10.136.7.105:44079\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\"></td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td colspan=\"2\" style=\"text-align: left;\">\n",
       "                            <strong>Local directory: </strong> /tmp/dask-worker-space/worker-h5js3ipb\n",
       "                        </td>\n",
       "                    </tr>\n",
       "\n",
       "                    \n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU: </strong>Tesla T4\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU memory: </strong> 14.76 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    \n",
       "\n",
       "                    \n",
       "\n",
       "                </table>\n",
       "            </details>\n",
       "            </div>\n",
       "        </div>\n",
       "        \n",
       "        <div style=\"margin-bottom: 20px;\">\n",
       "            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n",
       "            <div style=\"margin-left: 48px;\">\n",
       "            <details>\n",
       "                <summary>\n",
       "                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n",
       "                </summary>\n",
       "                <table style=\"width: 100%; text-align: left;\">\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Comm: </strong> tcp://10.136.7.105:36985\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Total threads: </strong> 1\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Dashboard: </strong> <a href=\"http://10.136.7.105:45625/status\" target=\"_blank\">http://10.136.7.105:45625/status</a>\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Memory: </strong> 94.13 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>Nanny: </strong> tcp://10.136.7.105:40643\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\"></td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <td colspan=\"2\" style=\"text-align: left;\">\n",
       "                            <strong>Local directory: </strong> /tmp/dask-worker-space/worker-ql9e3i4f\n",
       "                        </td>\n",
       "                    </tr>\n",
       "\n",
       "                    \n",
       "                    <tr>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU: </strong>Tesla T4\n",
       "                        </td>\n",
       "                        <td style=\"text-align: left;\">\n",
       "                            <strong>GPU memory: </strong> 14.76 GiB\n",
       "                        </td>\n",
       "                    </tr>\n",
       "                    \n",
       "\n",
       "                    \n",
       "\n",
       "                </table>\n",
       "            </details>\n",
       "            </div>\n",
       "        </div>\n",
       "        \n",
       "\n",
       "    </details>\n",
       "</div>\n",
       "\n",
       "        </details>\n",
       "    </div>\n",
       "</div>\n",
       "            </details>\n",
       "        \n",
       "\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "<Client: 'tcp://10.136.7.105:32955' processes=4 threads=4, memory=376.54 GiB>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This will use all GPUs on the local host by default\n",
    "cluster = LocalCUDACluster(threads_per_worker=1, ip=\"\", dashboard_address=\"8081\")\n",
    "c = Client(cluster)\n",
    "\n",
    "# Query the client for all connected workers\n",
    "workers = c.has_what().keys()\n",
    "n_workers = len(workers)\n",
    "c"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Loading the data\n",
    "## Data Acquisition\n",
    "Dataset can be acquired from Kaggle: [BNP Paribas Cardif Claims Management](https://www.kaggle.com/c/bnp-paribas-cardif-claims-management/data). To download the dataset:\n",
    " \n",
    "1. Create a `data` folder in the current directory. If you're downloading it elsewhere, be sure to change `data_dir` to point to the approproate location.\n",
    " \n",
    "2. Follow the instructions here to: [Set-up the Kaggle API](https://github.com/Kaggle/kaggle-api)\n",
    " \n",
    "3. Run the following command in the command line in the `data` folder.\n",
    " \n",
    "    `kaggle competitions download -c bnp-paribas-cardif-claims-management`\n",
    " \n",
    " \n",
    "This is an anonymized dataset containing categorical and numerical values for claims received by BNP Paribas Cardif.  The \"target\" column in the train set is the variable to predict. It is equal to 1 for claims suitable for an accelerated approval. The task is to predict whether a claim will be suitable for accelerated approval or not. We'll only use the `train.csv` file as `test.csv` does not have a target column.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "file_name = \"train.csv\"\n",
    "\n",
    "data_dir = \"data/\"\n",
    "INPUT_FILE = os.path.join(data_dir, file_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Select the `N_TRIALS` for the number of runs of HPO trials."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "N_TRIALS = 150\n",
    "\n",
    "df = cudf.read_csv(INPUT_FILE)\n",
    "\n",
    "# Drop ID column\n",
    "df = df.drop(\"ID\", axis=1)\n",
    "\n",
    "# Drop non-numerical data and fill NaNs before passing to cuML RF\n",
    "CAT_COLS = list(df.select_dtypes(\"object\").columns)\n",
    "df = df.drop(CAT_COLS, axis=1)\n",
    "df = df.fillna(0)\n",
    "\n",
    "df = df.astype(\"float32\")\n",
    "X, y = df.drop([\"target\"], axis=1), df[\"target\"].astype(\"int32\")\n",
    "\n",
    "study_name = \"dask_optuna_lr_log_loss_tpe\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Training and Evaluation\n",
    "\n",
    "The `train_and_eval` function accepts the different parameters to try out. This function should look very similar to any ML workflow. We'll use this function within the Optuna `objective` function to show how easily we can fit an existing workflow into the Optuna work. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def train_and_eval(\n",
    "    X_param, y_param, penalty=\"l2\", C=1.0, l1_ratio=None, fit_intercept=True\n",
    "):\n",
    "    \"\"\"\n",
    "    Splits the given data into train and test split to train and evaluate the model\n",
    "    for the params parameters.\n",
    "\n",
    "    Params\n",
    "    ______\n",
    "\n",
    "    X_param:  DataFrame.\n",
    "              The data to use for training and testing.\n",
    "    y_param:  Series.\n",
    "              The label for training\n",
    "    penalty, C, l1_ratio, fit_intercept: The parameter values for Logistic Regression.\n",
    "\n",
    "    Returns\n",
    "    score: log loss of the fitted model\n",
    "    \"\"\"\n",
    "    X_train, X_valid, y_train, y_valid = train_test_split(\n",
    "        X_param, y_param, random_state=42\n",
    "    )\n",
    "    classifier = LogisticRegression(\n",
    "        penalty=penalty,\n",
    "        C=C,\n",
    "        l1_ratio=l1_ratio,\n",
    "        fit_intercept=fit_intercept,\n",
    "        max_iter=10000,\n",
    "    )\n",
    "    classifier.fit(X_train, y_train)\n",
    "    y_pred = classifier.predict(X_valid)\n",
    "    score = log_loss(y_valid, y_pred)\n",
    "    return score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For a baseline number, let's see what the default performance of the model is."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Score with default parameters :  8.206788138572605\n"
     ]
    }
   ],
   "source": [
    "print(\"Score with default parameters : \", train_and_eval(X, y))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Objective Function\n",
    " \n",
    "We will optimize the objective function using [Optuna Study](https://optuna.readthedocs.io/en/stable/reference/study.html). The objective function tries out specified values for the parameters that we are tuning and returns the score obtained with those parameters. These results will be aggregated in `study.trials_dataframes()`. \n",
    " \n",
    "Let's define the objective function for this HPO task by making use of the `train_and_eval()`. You can see that we simply choose a value for the parameters and call the `train_and_eval` method, making Optuna very easy to use in an existing workflow.\n",
    " \n",
    "The objective function does not need to be changed when switching to different [samplers](https://optuna.readthedocs.io/en/stable/reference/samplers.html), which are built-in options in Optuna to enable the selection of different sampling algorithms that optuna provides. Some of the available ones include - GridSampler, RandomSampler, TPESampler, etc. We'll use TPESampler for this demo, but feel free to try different samplers to notice the changes in performance. \n",
    " \n",
    "\n",
    "[Tree-Structured Parzen Estimators](https://optuna.readthedocs.io/en/stable/reference/generated/optuna.samplers.TPESampler.html#optuna.samplers.TPESampler) or TPE works by fitting two  Gaussian Mixture Model during each trial - one to the set of parameter values associated with the best objective values,\n",
    "and another to the remaining parameter values. It chooses the parameter value that maximizes the ratio between the two GMMs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def objective(trial, X_param, y_param):\n",
    "    C = trial.suggest_float(\"C\", 0.01, 100.0, log=True)\n",
    "    penalty = trial.suggest_categorical(\"penalty\", [\"none\", \"l1\", \"l2\"])\n",
    "    fit_intercept = trial.suggest_categorical(\"fit_intercept\", [True, False])\n",
    "\n",
    "    score = train_and_eval(\n",
    "        X_param, y_param, penalty=penalty, C=C, fit_intercept=fit_intercept\n",
    "    )\n",
    "    return score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## HPO Trials and Study\n",
    " \n",
    "Optuna uses [studies](https://optuna.readthedocs.io/en/stable/reference/study.html) and [trials](https://optuna.readthedocs.io/en/stable/reference/trial.html) to keep track of the HPO experiments. Put simply, a trial is a single call of the objective function while a set of trials make up a study. We will pick the best observed trial from a study to get the best parameters that were used in that run.\n",
    "\n",
    "Here, `DaskStorage` class is used to set up a storage shared by all workers in the cluster. Learn more about what storages can be used [here](https://optuna.readthedocs.io/en/stable/tutorial/distributed.html)\n",
    "\n",
    "`optuna.create_study` is used to set up the study. As you can see, it specifies the study name, sampler to be used, the direction of the study, and the storage.\n",
    "With just a few lines of code, we have set up a distributed HPO experiment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_1049484/2672349610.py:1: ExperimentalWarning: DaskStorage is experimental (supported from v3.1.0). The interface can change in the future.\n",
      "  storage = optuna.integration.DaskStorage()\n",
      "\u001b[32m[I 2023-02-17 10:37:57,870]\u001b[0m A new study created in memory with name: dask_optuna_lr_log_loss_tpe\u001b[0m\n",
      "/nvme/0/thead/miniconda/envs/cloud-ml-deploy-optuna/lib/python3.10/site-packages/distributed/worker.py:2990: UserWarning: Large object of size 49.31 MiB detected in task graph: \n",
      "  [<function <listcomp>.<lambda> at 0x7fad203a3d90>]\n",
      "Consider scattering large objects ahead of time\n",
      "with client.scatter to reduce scheduler burden and \n",
      "keep data on workers\n",
      "\n",
      "    future = client.submit(func, big_data)    # bad\n",
      "\n",
      "    big_future = client.scatter(big_data)     # good\n",
      "    future = client.submit(func, big_future)  # good\n",
      "  warnings.warn(\n",
      "/nvme/0/thead/miniconda/envs/cloud-ml-deploy-optuna/lib/python3.10/site-packages/distributed/protocol/pickle.py:73: ExperimentalWarning: DaskStorage is experimental (supported from v3.1.0). The interface can change in the future.\n",
      "  return pickle.loads(x)\n",
      "/nvme/0/thead/miniconda/envs/cloud-ml-deploy-optuna/lib/python3.10/site-packages/distributed/protocol/pickle.py:73: ExperimentalWarning: DaskStorage is experimental (supported from v3.1.0). The interface can change in the future.\n",
      "  return pickle.loads(x)\n",
      "/nvme/0/thead/miniconda/envs/cloud-ml-deploy-optuna/lib/python3.10/site-packages/distributed/protocol/pickle.py:73: ExperimentalWarning: DaskStorage is experimental (supported from v3.1.0). The interface can change in the future.\n",
      "  return pickle.loads(x)\n",
      "/nvme/0/thead/miniconda/envs/cloud-ml-deploy-optuna/lib/python3.10/site-packages/distributed/protocol/pickle.py:73: ExperimentalWarning: DaskStorage is experimental (supported from v3.1.0). The interface can change in the future.\n",
      "  return pickle.loads(x)\n",
      "\u001b[32m[I 2023-02-17 10:38:07,033]\u001b[0m Trial 0 finished with value: 8.247875378327683 and parameters: {'C': 40.573838784392514, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 0 with value: 8.247875378327683.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:07,953]\u001b[0m Trial 3 finished with value: 8.221289538703516 and parameters: {'C': 12.183061292316713, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:08,041]\u001b[0m Trial 2 finished with value: 8.253917695992195 and parameters: {'C': 40.573838784392514, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:08,169]\u001b[0m Trial 1 finished with value: 8.228540336686851 and parameters: {'C': 40.573838784392514, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:08,605]\u001b[0m Trial 6 finished with value: 8.250292310988796 and parameters: {'C': 12.183061292316713, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:08,664]\u001b[0m Trial 5 finished with value: 8.241833396381626 and parameters: {'C': 0.028870434982716877, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,044]\u001b[0m Trial 4 finished with value: 8.245458781385024 and parameters: {'C': 40.573838784392514, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,099]\u001b[0m Trial 8 finished with value: 8.25029236694187 and parameters: {'C': 0.028870434982716877, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,251]\u001b[0m Trial 9 finished with value: 8.247875294398069 and parameters: {'C': 67.82426496348721, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,455]\u001b[0m Trial 11 finished with value: 8.251500763331082 and parameters: {'C': 67.82426496348721, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,566]\u001b[0m Trial 12 finished with value: 8.24304134514623 and parameters: {'C': 6.682974952480256, 'penalty': 'l2', 'fit_intercept': False}. Best is trial 3 with value: 8.221289538703516.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,619]\u001b[0m Trial 7 finished with value: 8.21403885262633 and parameters: {'C': 12.183061292316713, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,722]\u001b[0m Trial 10 finished with value: 8.25029236694187 and parameters: {'C': 12.183061292316713, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,818]\u001b[0m Trial 13 finished with value: 8.253917612062581 and parameters: {'C': 2.0030868464433764, 'penalty': 'none', 'fit_intercept': False}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:09,872]\u001b[0m Trial 14 finished with value: 8.251500679401468 and parameters: {'C': 2.0030868464433764, 'penalty': 'none', 'fit_intercept': False}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:10,092]\u001b[0m Trial 16 finished with value: 8.24787526642153 and parameters: {'C': 2.0030868464433764, 'penalty': 'none', 'fit_intercept': False}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:10,099]\u001b[0m Trial 15 finished with value: 8.252709243649907 and parameters: {'C': 2.0030868464433764, 'penalty': 'none', 'fit_intercept': False}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:10,557]\u001b[0m Trial 17 finished with value: 8.249084278294575 and parameters: {'C': 0.9459046834713561, 'penalty': 'l1', 'fit_intercept': False}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:10,581]\u001b[0m Trial 18 finished with value: 8.247875769999213 and parameters: {'C': 0.4428829638044645, 'penalty': 'l1', 'fit_intercept': False}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:11,477]\u001b[0m Trial 19 finished with value: 8.21524817224129 and parameters: {'C': 0.34118772696334027, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:11,684]\u001b[0m Trial 20 finished with value: 8.214039719899006 and parameters: {'C': 0.34118772696334027, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:12,541]\u001b[0m Trial 22 finished with value: 8.215248116288217 and parameters: {'C': 7.20323151375873, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:12,603]\u001b[0m Trial 21 finished with value: 8.21524817224129 and parameters: {'C': 7.20323151375873, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:12,780]\u001b[0m Trial 23 finished with value: 8.214039775852083 and parameters: {'C': 0.15587899286863757, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:13,189]\u001b[0m Trial 24 finished with value: 8.214039775852083 and parameters: {'C': 0.15587899286863757, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:13,946]\u001b[0m Trial 25 finished with value: 8.220082205422743 and parameters: {'C': 0.13331995152410292, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:14,425]\u001b[0m Trial 26 finished with value: 8.218873697127382 and parameters: {'C': 0.13331995152410292, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 7 with value: 8.21403885262633.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:14,506]\u001b[0m Trial 27 finished with value: 8.211622731284818 and parameters: {'C': 0.13317405504008187, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 27 with value: 8.211622731284818.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:14,754]\u001b[0m Trial 28 finished with value: 8.218873753080457 and parameters: {'C': 0.09161974779967816, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 27 with value: 8.211622731284818.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:14,932]\u001b[0m Trial 30 finished with value: 8.217665356691247 and parameters: {'C': 0.01161870199450424, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 27 with value: 8.211622731284818.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:15,511]\u001b[0m Trial 29 finished with value: 8.218873781056995 and parameters: {'C': 0.0834294717814003, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 27 with value: 8.211622731284818.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:15,538]\u001b[0m Trial 31 finished with value: 8.217665496573938 and parameters: {'C': 0.01161870199450424, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 27 with value: 8.211622731284818.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:15,802]\u001b[0m Trial 32 finished with value: 8.21645704423165 and parameters: {'C': 0.01161870199450424, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 27 with value: 8.211622731284818.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:16,028]\u001b[0m Trial 33 finished with value: 8.210414362872145 and parameters: {'C': 0.5889161850687648, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:16,593]\u001b[0m Trial 34 finished with value: 8.211622787237895 and parameters: {'C': 0.29039065153275884, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:17,556]\u001b[0m Trial 36 finished with value: 8.214039635969392 and parameters: {'C': 0.29039065153275884, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:17,762]\u001b[0m Trial 38 finished with value: 8.214039747875544 and parameters: {'C': 0.6356655062780381, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:17,906]\u001b[0m Trial 37 finished with value: 8.214039719899006 and parameters: {'C': 0.40506074358435035, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:17,938]\u001b[0m Trial 35 finished with value: 8.215248200217829 and parameters: {'C': 0.29039065153275884, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:18,033]\u001b[0m Trial 39 finished with value: 8.247875574163448 and parameters: {'C': 0.7211398436523727, 'penalty': 'none', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:18,215]\u001b[0m Trial 40 finished with value: 8.250292338965332 and parameters: {'C': 0.8988603430698667, 'penalty': 'none', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:18,357]\u001b[0m Trial 42 finished with value: 8.252709215673368 and parameters: {'C': 0.8562976914659627, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:18,521]\u001b[0m Trial 43 finished with value: 8.246667177774237 and parameters: {'C': 1.1735421529699095, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 33 with value: 8.210414362872145.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:18,759]\u001b[0m Trial 41 finished with value: 8.203162697616131 and parameters: {'C': 1.0180328243030141, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:18,875]\u001b[0m Trial 45 finished with value: 8.249083998529198 and parameters: {'C': 1.470107035818969, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,078]\u001b[0m Trial 44 finished with value: 8.209204903374491 and parameters: {'C': 1.215885094202452, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,122]\u001b[0m Trial 47 finished with value: 8.244249853441593 and parameters: {'C': 3.1251012068006196, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,212]\u001b[0m Trial 48 finished with value: 8.241832892803943 and parameters: {'C': 3.1251012068006196, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,607]\u001b[0m Trial 49 finished with value: 8.249083802693432 and parameters: {'C': 0.5247083049626469, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,787]\u001b[0m Trial 51 finished with value: 8.250292283012255 and parameters: {'C': 0.594672049508206, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,883]\u001b[0m Trial 50 finished with value: 8.215246941273623 and parameters: {'C': 0.594672049508206, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:19,924]\u001b[0m Trial 52 finished with value: 8.245458417690031 and parameters: {'C': 0.6982022429771052, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:20,141]\u001b[0m Trial 53 finished with value: 8.247875322374606 and parameters: {'C': 0.6982022429771052, 'penalty': 'l2', 'fit_intercept': False}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:20,364]\u001b[0m Trial 55 finished with value: 8.252709187696832 and parameters: {'C': 23.88860256720992, 'penalty': 'l2', 'fit_intercept': False}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:20,631]\u001b[0m Trial 46 finished with value: 8.220082093516593 and parameters: {'C': 0.18943289702535804, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:20,707]\u001b[0m Trial 56 finished with value: 8.243041568958532 and parameters: {'C': 23.88860256720992, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:21,054]\u001b[0m Trial 59 finished with value: 8.249083886623046 and parameters: {'C': 0.2304567118696556, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:21,190]\u001b[0m Trial 54 finished with value: 8.217664153700117 and parameters: {'C': 28.94484897140112, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:21,320]\u001b[0m Trial 57 finished with value: 8.209205099210257 and parameters: {'C': 0.2304567118696556, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:21,667]\u001b[0m Trial 61 finished with value: 8.247875602139985 and parameters: {'C': 1.3083983229057563, 'penalty': 'none', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:21,697]\u001b[0m Trial 60 finished with value: 8.217664041793965 and parameters: {'C': 1.3350093383986137, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:22,213]\u001b[0m Trial 64 finished with value: 8.25150079130762 and parameters: {'C': 0.44802419204313526, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 41 with value: 8.203162697616131.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:22,283]\u001b[0m Trial 62 finished with value: 8.198328832293907 and parameters: {'C': 0.46570264632805103, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:22,632]\u001b[0m Trial 65 finished with value: 8.24908397055266 and parameters: {'C': 0.24456030311795268, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:22,636]\u001b[0m Trial 58 finished with value: 8.205579714206857 and parameters: {'C': 0.22786149466321445, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:22,719]\u001b[0m Trial 66 finished with value: 8.245458277807343 and parameters: {'C': 0.2562139315011522, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:22,864]\u001b[0m Trial 63 finished with value: 8.210413383693316 and parameters: {'C': 0.42963908148132157, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,059]\u001b[0m Trial 68 finished with value: 8.255126148334481 and parameters: {'C': 0.4325592525072435, 'penalty': 'none', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,092]\u001b[0m Trial 67 finished with value: 8.251500763331082 and parameters: {'C': 0.400363407043762, 'penalty': 'none', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,111]\u001b[0m Trial 69 finished with value: 8.250292283012257 and parameters: {'C': 0.45811082432017874, 'penalty': 'none', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,202]\u001b[0m Trial 70 finished with value: 8.252709215673368 and parameters: {'C': 0.3366950282604448, 'penalty': 'none', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,447]\u001b[0m Trial 73 finished with value: 8.24666687003232 and parameters: {'C': 1.001276433559266, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,497]\u001b[0m Trial 72 finished with value: 8.249083830669969 and parameters: {'C': 0.9465587879326931, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,539]\u001b[0m Trial 74 finished with value: 8.244249881418131 and parameters: {'C': 0.17498501865193736, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,762]\u001b[0m Trial 75 finished with value: 8.234582010890993 and parameters: {'C': 0.09676716520222205, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,875]\u001b[0m Trial 76 finished with value: 8.251500875237234 and parameters: {'C': 0.11796046210672348, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:23,882]\u001b[0m Trial 71 finished with value: 8.252709243649907 and parameters: {'C': 0.35804471299010093, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:24,158]\u001b[0m Trial 78 finished with value: 8.247875602139986 and parameters: {'C': 0.5360163523983655, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:24,554]\u001b[0m Trial 77 finished with value: 8.214038628814027 and parameters: {'C': 0.11385001891151933, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:24,605]\u001b[0m Trial 81 finished with value: 8.252709383532595 and parameters: {'C': 0.19199360495534568, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:24,616]\u001b[0m Trial 80 finished with value: 8.247875378327683 and parameters: {'C': 0.2180889828523076, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:25,238]\u001b[0m Trial 79 finished with value: 8.215247640687073 and parameters: {'C': 0.19199360495534568, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:25,394]\u001b[0m Trial 82 finished with value: 8.222498746412327 and parameters: {'C': 0.20307546518876748, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:26,112]\u001b[0m Trial 84 finished with value: 8.206788865962592 and parameters: {'C': 0.32564474352266887, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:26,431]\u001b[0m Trial 83 finished with value: 8.215248116288217 and parameters: {'C': 0.2765570042119916, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:26,634]\u001b[0m Trial 85 finished with value: 8.215248200217832 and parameters: {'C': 0.3226259801946211, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:26,877]\u001b[0m Trial 86 finished with value: 8.214039719899006 and parameters: {'C': 0.2819874675157722, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:27,817]\u001b[0m Trial 88 finished with value: 8.214039775852081 and parameters: {'C': 0.31458836735455475, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:27,949]\u001b[0m Trial 87 finished with value: 8.217665104902405 and parameters: {'C': 0.3065189818970442, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:28,018]\u001b[0m Trial 89 finished with value: 8.220082149469668 and parameters: {'C': 0.15565170050074784, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:28,294]\u001b[0m Trial 90 finished with value: 8.215248228194367 and parameters: {'C': 0.7506376168835345, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:28,558]\u001b[0m Trial 92 finished with value: 8.249083774716894 and parameters: {'C': 0.5051732837836762, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:28,952]\u001b[0m Trial 91 finished with value: 8.21041427894253 and parameters: {'C': 0.8065457520463032, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:29,007]\u001b[0m Trial 94 finished with value: 8.246667709328458 and parameters: {'C': 0.560374893711422, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:29,057]\u001b[0m Trial 93 finished with value: 8.204371205911494 and parameters: {'C': 0.8065457520463032, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:29,665]\u001b[0m Trial 98 finished with value: 8.250292338965332 and parameters: {'C': 0.7337233638654149, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:30,198]\u001b[0m Trial 97 finished with value: 8.21283126755672 and parameters: {'C': 0.8412756142236871, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:30,235]\u001b[0m Trial 96 finished with value: 8.211622815214431 and parameters: {'C': 0.562054482682929, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:30,414]\u001b[0m Trial 95 finished with value: 8.216456652560117 and parameters: {'C': 0.5851560435116105, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:30,716]\u001b[0m Trial 99 finished with value: 8.21283031635443 and parameters: {'C': 1.0461855157044002, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:30,837]\u001b[0m Trial 102 finished with value: 8.244249853441593 and parameters: {'C': 1.1835595334965499, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:30,837]\u001b[0m Trial 101 finished with value: 8.216455617428215 and parameters: {'C': 1.0461855157044002, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:31,278]\u001b[0m Trial 103 finished with value: 8.222497655327349 and parameters: {'C': 1.4806853519511822, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:31,285]\u001b[0m Trial 100 finished with value: 8.212830260401352 and parameters: {'C': 1.0867788142619192, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:31,549]\u001b[0m Trial 105 finished with value: 8.22733194029764 and parameters: {'C': 0.3745168254537794, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:31,652]\u001b[0m Trial 106 finished with value: 8.250292338965332 and parameters: {'C': 0.4276855478215523, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:32,137]\u001b[0m Trial 107 finished with value: 8.207996590914894 and parameters: {'C': 0.385747857973403, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:32,157]\u001b[0m Trial 104 finished with value: 8.216455701357829 and parameters: {'C': 1.4996076633665074, 'penalty': 'none', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:32,288]\u001b[0m Trial 108 finished with value: 8.23216533001872 and parameters: {'C': 0.43235250787942997, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:32,990]\u001b[0m Trial 109 finished with value: 8.215248256170906 and parameters: {'C': 0.7633220953391018, 'penalty': 'l1', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,010]\u001b[0m Trial 112 finished with value: 8.233373950220235 and parameters: {'C': 0.6895329552551867, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,280]\u001b[0m Trial 110 finished with value: 8.214038656790564 and parameters: {'C': 0.7956169312610232, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,317]\u001b[0m Trial 113 finished with value: 8.238207507800542 and parameters: {'C': 0.6334264079574883, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,560]\u001b[0m Trial 111 finished with value: 8.210413439646391 and parameters: {'C': 0.8065508826459779, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,755]\u001b[0m Trial 116 finished with value: 8.255126232264095 and parameters: {'C': 0.2513108574682647, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,837]\u001b[0m Trial 115 finished with value: 8.26237680643513 and parameters: {'C': 0.22712407979701488, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:33,850]\u001b[0m Trial 114 finished with value: 8.215247249015542 and parameters: {'C': 0.2585858272339558, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:34,373]\u001b[0m Trial 117 finished with value: 8.210413187857553 and parameters: {'C': 0.4718385150774379, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:34,413]\u001b[0m Trial 120 finished with value: 8.246666786102704 and parameters: {'C': 0.37448244554979354, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:34,548]\u001b[0m Trial 119 finished with value: 8.230956905652974 and parameters: {'C': 0.4900985680950606, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:34,730]\u001b[0m Trial 122 finished with value: 8.246666786102704 and parameters: {'C': 0.49870893747744915, 'penalty': 'l2', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:34,824]\u001b[0m Trial 121 finished with value: 8.255126092381406 and parameters: {'C': 0.49284965645764406, 'penalty': 'l2', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:34,895]\u001b[0m Trial 118 finished with value: 8.21524727699208 and parameters: {'C': 0.4832324710781941, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,010]\u001b[0m Trial 123 finished with value: 8.252709131743755 and parameters: {'C': 0.49547914281942596, 'penalty': 'l2', 'fit_intercept': False}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,307]\u001b[0m Trial 124 finished with value: 8.249083942576123 and parameters: {'C': 0.8573213288225163, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,358]\u001b[0m Trial 125 finished with value: 8.25029236694187 and parameters: {'C': 0.9150325602275309, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,399]\u001b[0m Trial 126 finished with value: 8.251500875237234 and parameters: {'C': 0.8573213288225163, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,892]\u001b[0m Trial 129 finished with value: 8.247875518210373 and parameters: {'C': 0.6422634169492649, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,906]\u001b[0m Trial 127 finished with value: 8.211621696152916 and parameters: {'C': 0.9044711611615769, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:35,921]\u001b[0m Trial 128 finished with value: 8.252709243649907 and parameters: {'C': 0.35612096813530547, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:36,336]\u001b[0m Trial 131 finished with value: 8.247875518210373 and parameters: {'C': 0.6348982306281373, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:37,029]\u001b[0m Trial 132 finished with value: 8.216455645404753 and parameters: {'C': 0.3879975753305631, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:37,137]\u001b[0m Trial 130 finished with value: 8.205579658253782 and parameters: {'C': 1.7492428217117773, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:37,497]\u001b[0m Trial 133 finished with value: 8.209205155163334 and parameters: {'C': 0.38584940993610345, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:37,966]\u001b[0m Trial 134 finished with value: 8.216455393615911 and parameters: {'C': 1.270310588632334, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:38,063]\u001b[0m Trial 136 finished with value: 8.244249993324283 and parameters: {'C': 1.6903129048405776, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:38,308]\u001b[0m Trial 135 finished with value: 8.210413355716778 and parameters: {'C': 1.743501860802611, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:38,530]\u001b[0m Trial 138 finished with value: 8.251500903213772 and parameters: {'C': 1.7228365993625243, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:39,186]\u001b[0m Trial 139 finished with value: 8.244250049277358 and parameters: {'C': 2.004047082657374, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:39,847]\u001b[0m Trial 137 finished with value: 8.211622003894833 and parameters: {'C': 1.6881329891557173, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:41,105]\u001b[0m Trial 140 finished with value: 8.209204903374491 and parameters: {'C': 0.32273955285610206, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:41,614]\u001b[0m Trial 141 finished with value: 8.247875574163448 and parameters: {'C': 0.32068692350825667, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:42,102]\u001b[0m Trial 142 finished with value: 8.238207479824005 and parameters: {'C': 0.22677737647344867, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:42,744]\u001b[0m Trial 143 finished with value: 8.221289175008522 and parameters: {'C': 0.33183468485179807, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:43,434]\u001b[0m Trial 144 finished with value: 8.246666953961933 and parameters: {'C': 0.1648049730677063, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:44,646]\u001b[0m Trial 145 finished with value: 8.216455393615913 and parameters: {'C': 0.3859354935049987, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n",
      "\u001b[32m[I 2023-02-17 10:38:45,849]\u001b[0m Trial 146 finished with value: 8.207996451032203 and parameters: {'C': 0.2871110323573213, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best params: {'C': 0.46570264632805103, 'penalty': 'none', 'fit_intercept': True}\n",
      "Number of finished trials:  148\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[32m[I 2023-02-17 10:38:46,575]\u001b[0m Trial 147 finished with value: 8.249083886623046 and parameters: {'C': 0.2843200519404071, 'penalty': 'l2', 'fit_intercept': True}. Best is trial 62 with value: 8.198328832293907.\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "storage = optuna.integration.DaskStorage()\n",
    "study = optuna.create_study(\n",
    "    sampler=optuna.samplers.TPESampler(seed=142),\n",
    "    study_name=study_name,\n",
    "    direction=\"minimize\",\n",
    "    storage=storage,\n",
    ")\n",
    "# Optimize in parallel on your Dask cluster\n",
    "#\n",
    "# Submit `n_workers` optimization tasks, where each task runs about 40 optimization trials\n",
    "# for a total of about N_TRIALS trials in all\n",
    "futures = [\n",
    "    c.submit(\n",
    "        study.optimize,\n",
    "        lambda trial: objective(trial, X, y),\n",
    "        n_trials=N_TRIALS // n_workers,\n",
    "        pure=False,\n",
    "    )\n",
    "    for _ in range(n_workers)\n",
    "]\n",
    "wait(futures)\n",
    "print(f\"Best params: {study.best_params}\")\n",
    "\n",
    "print(\"Number of finished trials: \", len(study.trials))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualization\n",
    "\n",
    "Optuna provides an easy way to visualize the trials via builtin graphs. Read more about visualizations [here](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/005_visualization.html)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conluding Remarks\n",
    " \n",
    "This notebook shows how RAPIDS and Optuna can be used along with dask to run multi-GPU HPO jobs, and can be used as a starting point for anyone wanting to get started with the framework. We have seen how by just adding a few lines of code we were able to integrate the libraries for a muli-GPU HPO runs. This can also be scaled to multiple nodes.\n",
    " \n",
    "## Next Steps\n",
    " \n",
    "This is done on a small dataset, you are encouraged to test out on larger data with more range for the parameters too. These experiments can yield performance improvements. Refer to other examples in the [rapidsai/cloud-ml-examples](https://github.com/rapidsai/cloud-ml-examples) repository.\n",
    " \n",
    "## Resources\n",
    "[Hyperparameter Tuning in Python](https://towardsdatascience.com/hyperparameter-tuning-c5619e7e6624)\n",
    "\n",
    "[Overview of Hyperparameter tuning](https://cloud.google.com/ai-platform/training/docs/hyperparameter-tuning-overview)\n",
    "\n",
    "[How to make your model awesome with Optuna](https://towardsdatascience.com/how-to-make-your-model-awesome-with-optuna-b56d490368af)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
