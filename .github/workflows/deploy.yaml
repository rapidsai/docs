name: Deploy site
on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build (and deploy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # this step uses the `.ruby-version` file
      - uses: ruby/setup-ruby@v1

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Build Jekyll Site
        run: |
          bundle install
          bundle exec jekyll build

      - uses: aws-actions/configure-aws-credentials@4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 7200 # 2h

      - name: Fetch doc files from S3
        run: ci/download_from_s3.sh

      - name: Post-process docs
        run: ci/post-process.sh

      - name: Deploy site to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_API_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DOCS_SITE_ID }}
          # TODO: use official netlify-cli pkg after https://github.com/netlify/cli/issues/1809
          # is resolved and deployed.
        run: |
          npm install --global --force @aschmidt8/netlify-cli

          ARGS=""
          if [ "$GITHUB_REF_NAME" = "main" ]; then
            ARGS="--prod"
          fi
          netlify deploy "$ARGS" \
            --dir=_site

      - name: Deploy site to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm install
          npm install --global --force vercel

          ARGS=""
          if [ "$GITHUB_REF_NAME" = "main" ]; then
            ARGS="--prod"
          fi
          ./vercel.sh mk-dist
          vercel deploy --prebuilt "${ARGS}" --token="${VERCEL_TOKEN}"
