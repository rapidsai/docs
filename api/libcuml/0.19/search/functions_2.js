var searchData=
[
  ['cachingdeviceallocator_1651',['cachingDeviceAllocator',['../classML_1_1cachingDeviceAllocator.html#aa2dcc46803d9ddf429082ad661e962c9',1,'ML::cachingDeviceAllocator']]],
  ['callbacksink_1652',['CallbackSink',['../classspdlog_1_1sinks_1_1CallbackSink.html#a9e4b7f907d6eb411c8f78765ecbb0fe1',1,'spdlog::sinks::CallbackSink']]],
  ['callearningrate_1653',['calLearningRate',['../namespaceML_1_1Solver.html#ab5500998630802767459f16c6d0722b9',1,'ML::Solver']]],
  ['caloptimalinit_1654',['calOptimalInit',['../namespaceML_1_1Solver.html#ae3db6fcf6100c10bc59e5f2d16f87f5a',1,'ML::Solver']]],
  ['cdfit_1655',['cdFit',['../namespaceML_1_1Solver.html#a2c64860f109f7445bed562f707da5656',1,'ML::Solver::cdFit(raft::handle_t &amp;handle, float *input, int n_rows, int n_cols, float *labels, float *coef, float *intercept, bool fit_intercept, bool normalize, int epochs, int loss, float alpha, float l1_ratio, bool shuffle, float tol)'],['../namespaceML_1_1Solver.html#ad17f727df40c3e06f32442a2fc6e42d3',1,'ML::Solver::cdFit(raft::handle_t &amp;handle, double *input, int n_rows, int n_cols, double *labels, double *coef, double *intercept, bool fit_intercept, bool normalize, int epochs, int loss, double alpha, double l1_ratio, bool shuffle, double tol)']]],
  ['cdpredict_1656',['cdPredict',['../namespaceML_1_1Solver.html#a199a99b44a946b00f97219298ebe3f5f',1,'ML::Solver::cdPredict(raft::handle_t &amp;handle, const float *input, int n_rows, int n_cols, const float *coef, float intercept, float *preds, int loss)'],['../namespaceML_1_1Solver.html#a65da4a021eb12d4d5ee676689f2c3817',1,'ML::Solver::cdPredict(raft::handle_t &amp;handle, const double *input, int n_rows, int n_cols, const double *coef, double intercept, double *preds, int loss)']]],
  ['compare_5fconcat_5fforest_5fto_5fsubforests_1657',['compare_concat_forest_to_subforests',['../namespaceML.html#af142813513ee46988a79fd3dc4ab52a6',1,'ML']]],
  ['completeness_5fscore_1658',['completeness_score',['../namespaceML_1_1Metrics.html#a6e2942d02844f29ab454ac2e5a5b0e57',1,'ML::Metrics']]],
  ['complexity_1659',['complexity',['../structML_1_1ARIMAOrder.html#a7e9dfacf3d169a28e7d10304242d7289',1,'ML::ARIMAOrder']]],
  ['computequantiles_1660',['computeQuantiles',['../namespaceML_1_1DecisionTree.html#a8419b9399a1d28a94205964de0cad86e',1,'ML::DecisionTree']]],
  ['concatenate_5ftrees_1661',['concatenate_trees',['../namespaceML.html#ab85e3eaa2c4e4de0a0a6aa9b6d68e5ee',1,'ML']]],
  ['construct_1662',['construct',['../classML_1_1stdAllocatorAdapter.html#aae373dbb797193410d86c7fb288c9ee4',1,'ML::stdAllocatorAdapter']]],
  ['convert_5flevel_5fto_5fspdlog_1663',['convert_level_to_spdlog',['../namespaceML.html#a9d769926cc27c80a2daa3779c606c133',1,'ML']]],
  ['createandinserthandle_1664',['createAndInsertHandle',['../classML_1_1HandleMap.html#a88bb3c146dad1ab126f714d10161a124',1,'ML::HandleMap']]],
  ['cumlcreate_1665',['cumlCreate',['../cuml__api_8h.html#a83d1cee666f4f3b88c5c5db490ba292e',1,'cumlCreate(cumlHandle_t *handle):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#a83d1cee666f4f3b88c5c5db490ba292e',1,'cumlCreate(cumlHandle_t *handle):&#160;cuml_api.cpp']]],
  ['cumldestroy_1666',['cumlDestroy',['../cuml__api_8h.html#a47d38972ea51ae390abe4d9f481cd698',1,'cumlDestroy(cumlHandle_t handle):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#a47d38972ea51ae390abe4d9f481cd698',1,'cumlDestroy(cumlHandle_t handle):&#160;cuml_api.cpp']]],
  ['cumldpdbscanfit_1667',['cumlDpDbscanFit',['../group__DbscanC.html#ga7c45fd728d018f5f5c5bbc21671df52b',1,'cumlDpDbscanFit(cumlHandle_t handle, double *input, int n_rows, int n_cols, double eps, int min_pts, int *labels, int *core_sample_indices, size_t max_bytes_per_batch, int verbosity):&#160;dbscan_api.cpp'],['../group__DbscanC.html#ga7c45fd728d018f5f5c5bbc21671df52b',1,'cumlDpDbscanFit(cumlHandle_t handle, double *input, int n_rows, int n_cols, double eps, int min_pts, int *labels, int *core_sample_indices, size_t max_bytes_per_batch, int verbosity):&#160;dbscan_api.cpp']]],
  ['cumldpqnfit_1668',['cumlDpQnFit',['../glm__api_8h.html#a3f7efdb503dc74413898971003ee3107',1,'cumlDpQnFit(cumlHandle_t cuml_handle, double *X, double *y, int N, int D, int C, bool fit_intercept, double l1, double l2, int max_iter, double grad_tol, int linesearch_max_iter, int lbfgs_memory, int verbosity, double *w0, double *f, int *num_iters, bool X_col_major, int loss_type):&#160;glm_api.cpp'],['../glm__api_8cpp.html#a3f7efdb503dc74413898971003ee3107',1,'cumlDpQnFit(cumlHandle_t cuml_handle, double *X, double *y, int N, int D, int C, bool fit_intercept, double l1, double l2, int max_iter, double grad_tol, int linesearch_max_iter, int lbfgs_memory, int verbosity, double *w0, double *f, int *num_iters, bool X_col_major, int loss_type):&#160;glm_api.cpp']]],
  ['cumldpsvcfit_1669',['cumlDpSvcFit',['../group__SVM.html#gacb11b83590768db472e1018ba0380605',1,'cumlDpSvcFit(cumlHandle_t handle, double *input, int n_rows, int n_cols, double *labels, double C, double cache_size, int max_iter, int nochange_steps, double tol, int verbosity, cumlSvmKernelType kernel, int degree, double gamma, double coef0, int *n_support, double *b, double **dual_coefs, double **x_support, int **support_idx, int *n_classes, double **unique_labels):&#160;svm_api.cpp'],['../group__SVM.html#gacb11b83590768db472e1018ba0380605',1,'cumlDpSvcFit(cumlHandle_t handle, double *input, int n_rows, int n_cols, double *labels, double C, double cache_size, int max_iter, int nochange_steps, double tol, int verbosity, cumlSvmKernelType kernel, int degree, double gamma, double coef0, int *n_support, double *b, double **dual_coefs, double **x_support, int **support_idx, int *n_classes, double **unique_labels):&#160;svm_api.cpp']]],
  ['cumldpsvcpredict_1670',['cumlDpSvcPredict',['../group__SVM.html#ga757746eb995364624b62a2e192d559c5',1,'cumlDpSvcPredict(cumlHandle_t handle, double *input, int n_rows, int n_cols, cumlSvmKernelType kernel, int degree, double gamma, double coef0, int n_support, double b, double *dual_coefs, double *x_support, int n_classes, double *unique_labels, double *preds, double buffer_size, int predict_class):&#160;svm_api.cpp'],['../group__SVM.html#ga757746eb995364624b62a2e192d559c5',1,'cumlDpSvcPredict(cumlHandle_t handle, double *input, int n_rows, int n_cols, cumlSvmKernelType kernel, int degree, double gamma, double coef0, int n_support, double b, double *dual_coefs, double *x_support, int n_classes, double *unique_labels, double *preds, double buffer_size, int predict_class):&#160;svm_api.cpp']]],
  ['cumlgeterrorstring_1671',['cumlGetErrorString',['../cuml__api_8h.html#a357b0ea4a354ad0c808b8ed5143828bc',1,'cumlGetErrorString(cumlError_t error):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#a357b0ea4a354ad0c808b8ed5143828bc',1,'cumlGetErrorString(cumlError_t error):&#160;cuml_api.cpp']]],
  ['cumlgetstream_1672',['cumlGetStream',['../cuml__api_8h.html#a7fb2d4b81f4227b0a743a2e1f6679106',1,'cumlGetStream(cumlHandle_t handle, cudaStream_t *stream):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#a7fb2d4b81f4227b0a743a2e1f6679106',1,'cumlGetStream(cumlHandle_t handle, cudaStream_t *stream):&#160;cuml_api.cpp']]],
  ['cumlholtwinters_5fbuffer_5fsize_1673',['cumlHoltWinters_buffer_size',['../holtwinters__api_8h.html#ae85f57bac643d9bd1014c087c1262a6a',1,'cumlHoltWinters_buffer_size(int n, int batch_size, int frequency, int *start_leveltrend_len, int *start_season_len, int *components_len, int *error_len, int *leveltrend_coef_shift, int *season_coef_shift):&#160;holtwinters_api.cpp'],['../holtwinters__api_8cpp.html#ae85f57bac643d9bd1014c087c1262a6a',1,'cumlHoltWinters_buffer_size(int n, int batch_size, int frequency, int *start_leveltrend_len, int *start_season_len, int *components_len, int *error_len, int *leveltrend_coef_shift, int *season_coef_shift):&#160;holtwinters_api.cpp']]],
  ['cumlholtwintersdp_5ffit_1674',['cumlHoltWintersDp_fit',['../group__HoltWinterFit.html#ga15f6ede8e2a0b6f28cf6e8623e61d217',1,'cumlHoltWintersDp_fit(cumlHandle_t handle, int n, int batch_size, int frequency, int start_periods, cumlHoltWintersSeasonal_t seasonal, double epsilon, double *data, double *level_ptr, double *trend_ptr, double *season_ptr, double *SSE_error_ptr):&#160;holtwinters_api.cpp'],['../group__HoltWinterFit.html#ga15f6ede8e2a0b6f28cf6e8623e61d217',1,'cumlHoltWintersDp_fit(cumlHandle_t handle, int n, int batch_size, int frequency, int start_periods, cumlHoltWintersSeasonal_t seasonal, double epsilon, double *data, double *level_d, double *trend_d, double *season_d, double *error_d):&#160;holtwinters_api.cpp']]],
  ['cumlholtwintersdp_5fforecast_1675',['cumlHoltWintersDp_forecast',['../group__HoltWinterForecast.html#gaf89901782ac89d47261ac35756287707',1,'cumlHoltWintersDp_forecast(cumlHandle_t handle, int n, int batch_size, int frequency, int h, cumlHoltWintersSeasonal_t seasonal, double *level_ptr, double *trend_ptr, double *season_ptr, double *forecast_ptr):&#160;holtwinters_api.cpp'],['../group__HoltWinterForecast.html#gaf89901782ac89d47261ac35756287707',1,'cumlHoltWintersDp_forecast(cumlHandle_t handle, int n, int batch_size, int frequency, int h, cumlHoltWintersSeasonal_t seasonal, double *level_d, double *trend_d, double *season_d, double *forecast_d):&#160;holtwinters_api.cpp']]],
  ['cumlholtwinterssp_5ffit_1676',['cumlHoltWintersSp_fit',['../group__HoltWinterFit.html#gaa8e1748604acd2fc45a255b401d39c30',1,'cumlHoltWintersSp_fit(cumlHandle_t handle, int n, int batch_size, int frequency, int start_periods, cumlHoltWintersSeasonal_t seasonal, float epsilon, float *data, float *level_ptr, float *trend_ptr, float *season_ptr, float *SSE_error_ptr):&#160;holtwinters_api.cpp'],['../group__HoltWinterFit.html#gaa8e1748604acd2fc45a255b401d39c30',1,'cumlHoltWintersSp_fit(cumlHandle_t handle, int n, int batch_size, int frequency, int start_periods, cumlHoltWintersSeasonal_t seasonal, float epsilon, float *data, float *level_d, float *trend_d, float *season_d, float *error_d):&#160;holtwinters_api.cpp']]],
  ['cumlholtwinterssp_5fforecast_1677',['cumlHoltWintersSp_forecast',['../group__HoltWinterForecast.html#ga8c85621b443efd8063db0f2eb23ab4dd',1,'cumlHoltWintersSp_forecast(cumlHandle_t handle, int n, int batch_size, int frequency, int h, cumlHoltWintersSeasonal_t seasonal, float *level_ptr, float *trend_ptr, float *season_ptr, float *forecast_ptr):&#160;holtwinters_api.cpp'],['../group__HoltWinterForecast.html#ga8c85621b443efd8063db0f2eb23ab4dd',1,'cumlHoltWintersSp_forecast(cumlHandle_t handle, int n, int batch_size, int frequency, int h, cumlHoltWintersSeasonal_t seasonal, float *level_d, float *trend_d, float *season_d, float *forecast_d):&#160;holtwinters_api.cpp']]],
  ['cumlsetdeviceallocator_1678',['cumlSetDeviceAllocator',['../cuml__api_8h.html#a5665f2fa68581657bb2160aca2c21d59',1,'cumlSetDeviceAllocator(cumlHandle_t handle, cuml_allocate allocate_fn, cuml_deallocate deallocate_fn):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#a5665f2fa68581657bb2160aca2c21d59',1,'cumlSetDeviceAllocator(cumlHandle_t handle, cuml_allocate allocate_fn, cuml_deallocate deallocate_fn):&#160;cuml_api.cpp']]],
  ['cumlsethostallocator_1679',['cumlSetHostAllocator',['../cuml__api_8h.html#ad747d6a95e06db877156363d5f367bd2',1,'cumlSetHostAllocator(cumlHandle_t handle, cuml_allocate allocate_fn, cuml_deallocate deallocate_fn):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#ad747d6a95e06db877156363d5f367bd2',1,'cumlSetHostAllocator(cumlHandle_t handle, cuml_allocate allocate_fn, cuml_deallocate deallocate_fn):&#160;cuml_api.cpp']]],
  ['cumlsetstream_1680',['cumlSetStream',['../cuml__api_8h.html#a2106e396181071984f3d9fae89a8559d',1,'cumlSetStream(cumlHandle_t handle, cudaStream_t stream):&#160;cuml_api.cpp'],['../cuml__api_8cpp.html#a2106e396181071984f3d9fae89a8559d',1,'cumlSetStream(cumlHandle_t handle, cudaStream_t stream):&#160;cuml_api.cpp']]],
  ['cumlspdbscanfit_1681',['cumlSpDbscanFit',['../group__DbscanC.html#gaa6f27e1a3e781804031d9ef027cd7e76',1,'cumlSpDbscanFit(cumlHandle_t handle, float *input, int n_rows, int n_cols, float eps, int min_pts, int *labels, int *core_sample_indices, size_t max_bytes_per_batch, int verbosity):&#160;dbscan_api.cpp'],['../group__DbscanC.html#gaa6f27e1a3e781804031d9ef027cd7e76',1,'cumlSpDbscanFit(cumlHandle_t handle, float *input, int n_rows, int n_cols, float eps, int min_pts, int *labels, int *core_sample_indices, size_t max_bytes_per_batch, int verbosity):&#160;dbscan_api.cpp']]],
  ['cumlspqnfit_1682',['cumlSpQnFit',['../glm__api_8h.html#acb5d23b7d8dd1d1ded5fb9c9d0014e7f',1,'cumlSpQnFit(cumlHandle_t cuml_handle, float *X, float *y, int N, int D, int C, bool fit_intercept, float l1, float l2, int max_iter, float grad_tol, int linesearch_max_iter, int lbfgs_memory, int verbosity, float *w0, float *f, int *num_iters, bool X_col_major, int loss_type):&#160;glm_api.cpp'],['../glm__api_8cpp.html#acb5d23b7d8dd1d1ded5fb9c9d0014e7f',1,'cumlSpQnFit(cumlHandle_t cuml_handle, float *X, float *y, int N, int D, int C, bool fit_intercept, float l1, float l2, int max_iter, float grad_tol, int linesearch_max_iter, int lbfgs_memory, int verbosity, float *w0, float *f, int *num_iters, bool X_col_major, int loss_type):&#160;glm_api.cpp']]],
  ['cumlspsvcfit_1683',['cumlSpSvcFit',['../group__SVM.html#gaab19d8e3167d19a4ff9185b941345a01',1,'cumlSpSvcFit(cumlHandle_t handle, float *input, int n_rows, int n_cols, float *labels, float C, float cache_size, int max_iter, int nochange_steps, float tol, int verbosity, cumlSvmKernelType kernel, int degree, float gamma, float coef0, int *n_support, float *b, float **dual_coefs, float **x_support, int **support_idx, int *n_classes, float **unique_labels):&#160;svm_api.cpp'],['../group__SVM.html#gaab19d8e3167d19a4ff9185b941345a01',1,'cumlSpSvcFit(cumlHandle_t handle, float *input, int n_rows, int n_cols, float *labels, float C, float cache_size, int max_iter, int nochange_steps, float tol, int verbosity, cumlSvmKernelType kernel, int degree, float gamma, float coef0, int *n_support, float *b, float **dual_coefs, float **x_support, int **support_idx, int *n_classes, float **unique_labels):&#160;svm_api.cpp']]],
  ['cumlspsvcpredict_1684',['cumlSpSvcPredict',['../group__SVM.html#ga0d068629081f2f8ac6f7997ad963dba9',1,'cumlSpSvcPredict(cumlHandle_t handle, float *input, int n_rows, int n_cols, cumlSvmKernelType kernel, int degree, float gamma, float coef0, int n_support, float b, float *dual_coefs, float *x_support, int n_classes, float *unique_labels, float *preds, float buffer_size, int predict_class):&#160;svm_api.cpp'],['../group__SVM.html#ga0d068629081f2f8ac6f7997ad963dba9',1,'cumlSpSvcPredict(cumlHandle_t handle, float *input, int n_rows, int n_cols, cumlSvmKernelType kernel, int degree, float gamma, float coef0, int n_support, float b, float *dual_coefs, float *x_support, int n_classes, float *unique_labels, float *preds, float buffer_size, int predict_class):&#160;svm_api.cpp']]],
  ['curandgeneratenormal_1685',['curandGenerateNormal',['../group__normal.html#ga2900f8d4eb9c714139b8214e03984c7d',1,'MLCommon::Random::curandGenerateNormal(curandGenerator_t generator, T *outputPtr, size_t n, T mean, T stddev)'],['../group__normal.html#ga949c0305330c8aca901390d1968502be',1,'MLCommon::Random::curandGenerateNormal(curandGenerator_t generator, float *outputPtr, size_t n, float mean, float stddev)'],['../group__normal.html#ga5924bfa6763f10fa91c9be061caefc8f',1,'MLCommon::Random::curandGenerateNormal(curandGenerator_t generator, double *outputPtr, size_t n, double mean, double stddev)']]]
];
