var searchData=
[
  ['fast_5fint_5fdiv_2ecuh_307',['fast_int_div.cuh',['../fast__int__div_8cuh.html',1,'']]],
  ['fdim_308',['fdim',['../structcuml_1_1genetic_1_1node.html#a6c31af9f9ecb13165e25632908e94d77a3bf98602158acacef0ad2463662aa495',1,'cuml::genetic::node']]],
  ['feature_5fnames_309',['feature_names',['../structcuml_1_1genetic_1_1param.html#a73bbe374c55a29096bc528c61b1d935f',1,'cuml::genetic::param']]],
  ['fft_310',['FFT',['../namespaceML.html#aacbc7e98d26a8d5e8b51055651d423e2a4d99b41e47ccb1820e1b593afbc1e561',1,'ML']]],
  ['fft_5fkernels_2ecuh_311',['fft_kernels.cuh',['../fft__kernels_8cuh.html',1,'']]],
  ['fft_5ftsne_2ecuh_312',['fft_tsne.cuh',['../fft__tsne_8cuh.html',1,'']]],
  ['fid_313',['fid',['../structcuml_1_1genetic_1_1node.html#a071e3226c1ecbdac806bc2263789b855',1,'cuml::genetic::node']]],
  ['fil_2ecu_314',['fil.cu',['../fil_8cu.html',1,'']]],
  ['fil_2eh_315',['fil.h',['../fil_8h.html',1,'']]],
  ['fill_316',['fill',['../structML_1_1SimpleDenseMat.html#a01feeb1163c723b741703c6c68ce91ec',1,'ML::SimpleDenseMat']]],
  ['fillna_2ecuh_317',['fillna.cuh',['../fillna_8cuh.html',1,'']]],
  ['find_5fab_318',['find_ab',['../namespaceML_1_1UMAP.html#acd6108f88e8d4091e97649117e95ff48',1,'ML::UMAP']]],
  ['find_5fbatched_5ffitness_319',['find_batched_fitness',['../namespacecuml_1_1genetic.html#a85a9dcb05a334d30308c1561c7f60a40',1,'cuml::genetic']]],
  ['find_5ffitness_320',['find_fitness',['../namespacecuml_1_1genetic.html#a7c4c9721bc83e5ad6afaa01f416bf5b1',1,'cuml::genetic']]],
  ['fit_321',['fit',['../structML_1_1SVM_1_1LinearSVMModel.html#a7691dd1512625be4d850b01fdb532bae',1,'ML::SVM::LinearSVMModel::fit()'],['../classML_1_1SVM_1_1SVC.html#ab0f9ac5b2cd46f03b4274c7b195295a0',1,'ML::SVM::SVC::fit()'],['../group__DbscanCpp.html#ga367728631f872d669592f5566892f06d',1,'ML::Dbscan::fit(const raft::handle_t &amp;handle, float *input, int n_rows, int n_cols, float eps, int min_pts, raft::distance::DistanceType metric, int *labels, int *core_sample_indices=nullptr, size_t max_bytes_per_batch=0, int verbosity=CUML_LEVEL_INFO, bool opg=false)'],['../group__DbscanCpp.html#ga9ea49fdfc71899b4d3a8b07e4a50f2cc',1,'ML::Dbscan::fit(const raft::handle_t &amp;handle, double *input, int n_rows, int n_cols, double eps, int min_pts, raft::distance::DistanceType metric, int *labels, int *core_sample_indices=nullptr, size_t max_bytes_per_batch=0, int verbosity=CUML_LEVEL_INFO, bool opg=false)'],['../group__DbscanCpp.html#gaa2200c6fbcd6c53c5c62662d61f6f20c',1,'ML::Dbscan::fit(const raft::handle_t &amp;handle, float *input, int64_t n_rows, int64_t n_cols, float eps, int min_pts, raft::distance::DistanceType metric, int64_t *labels, int64_t *core_sample_indices=nullptr, size_t max_bytes_per_batch=0, int verbosity=CUML_LEVEL_INFO, bool opg=false)'],['../group__DbscanCpp.html#ga69a0537b45a524983cb9c2367bc0828a',1,'ML::Dbscan::fit(const raft::handle_t &amp;handle, double *input, int64_t n_rows, int64_t n_cols, double eps, int min_pts, raft::distance::DistanceType metric, int64_t *labels, int64_t *core_sample_indices=nullptr, size_t max_bytes_per_batch=0, int verbosity=CUML_LEVEL_INFO, bool opg=false)'],['../namespaceML_1_1kmeans.html#abc8b525efb237207f92927e89c23bcf5',1,'ML::kmeans::fit(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const float *X, int n_samples, int n_features, const float *sample_weight, float *centroids, float &amp;inertia, int &amp;n_iter)'],['../namespaceML_1_1kmeans.html#a665110ade17ac0849fa0fd018b20ab78',1,'ML::kmeans::fit(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const double *X, int n_samples, int n_features, const double *sample_weight, double *centroids, double &amp;inertia, int &amp;n_iter)'],['../namespaceML_1_1kmeans_1_1opg.html#a379710eae082464c140aff4c1885d8ff',1,'ML::kmeans::opg::fit(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const float *X, int n_samples, int n_features, const float *sample_weight, float *centroids, float &amp;inertia, int &amp;n_iter)'],['../namespaceML_1_1kmeans_1_1opg.html#a19968a1c3e848e672007829bf074c225',1,'ML::kmeans::opg::fit(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const double *X, int n_samples, int n_features, const double *sample_weight, double *centroids, double &amp;inertia, int &amp;n_iter)'],['../namespaceML_1_1PCA_1_1opg.html#adb1d432082f9e7a4c142eac5a79befdf',1,'ML::PCA::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, float *components, float *explained_var, float *explained_var_ratio, float *singular_vals, float *mu, float *noise_vars, paramsPCAMG prms, bool verbose=false)'],['../namespaceML_1_1PCA_1_1opg.html#a1cb15abadebe9259acfa53250c9a2c62',1,'ML::PCA::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, double *components, double *explained_var, double *explained_var_ratio, double *singular_vals, double *mu, double *noise_vars, paramsPCAMG prms, bool verbose=false)'],['../namespaceML_1_1TSVD_1_1opg.html#a678b789443e6098d44cc2c0c5644a4c4',1,'ML::TSVD::opg::fit(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, std::uint32_t n_parts, MLCommon::Matrix::floatData_t **input, float *components, float *singular_vals, paramsTSVDMG &amp;prms, bool verbose=false)'],['../namespaceML_1_1TSVD_1_1opg.html#a6311ef5dd22f67b938392891dfa7611d',1,'ML::TSVD::opg::fit(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, std::uint32_t n_parts, MLCommon::Matrix::doubleData_t **input, double *components, double *singular_vals, paramsTSVDMG &amp;prms, bool verbose=false)'],['../namespaceML.html#a2e62adbaee80935246fc0ff937575b59',1,'ML::fit(const raft::handle_t &amp;user_handle, RandomForestClassifierF *&amp;forest, float *input, int n_rows, int n_cols, int *labels, int n_unique_labels, RF_params rf_params, int verbosity=CUML_LEVEL_INFO)'],['../namespaceML.html#a38cfdf38af3291baa8b4a5f3a33b74a9',1,'ML::fit(const raft::handle_t &amp;user_handle, RandomForestClassifierD *&amp;forest, double *input, int n_rows, int n_cols, int *labels, int n_unique_labels, RF_params rf_params, int verbosity=CUML_LEVEL_INFO)'],['../namespaceML.html#a970c9a51cb7fb36680c2f2e3ad88dca4',1,'ML::fit(const raft::handle_t &amp;user_handle, RandomForestRegressorF *&amp;forest, float *input, int n_rows, int n_cols, float *labels, RF_params rf_params, int verbosity=CUML_LEVEL_INFO)'],['../namespaceML.html#a4dfca11198fa7304d1568c6c7ff09469',1,'ML::fit(const raft::handle_t &amp;user_handle, RandomForestRegressorD *&amp;forest, double *input, int n_rows, int n_cols, double *labels, RF_params rf_params, int verbosity=CUML_LEVEL_INFO)'],['../namespaceML_1_1OLS_1_1opg.html#af2f6600e074a64b39674c82c437b4097',1,'ML::OLS::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;labels, float *coef, float *intercept, bool fit_intercept, bool normalize, int algo, bool verbose)'],['../namespaceML_1_1OLS_1_1opg.html#a733ad222278f2b387f4254700c01901c',1,'ML::OLS::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;labels, double *coef, double *intercept, bool fit_intercept, bool normalize, int algo, bool verbose)'],['../namespaceML_1_1Ridge_1_1opg.html#a1ce45f7d2f635e47f3b9b5bfaf3d54bf',1,'ML::Ridge::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;labels, float *alpha, int n_alpha, float *coef, float *intercept, bool fit_intercept, bool normalize, int algo, bool verbose)'],['../namespaceML_1_1Ridge_1_1opg.html#af6332ae5d617ac8576f4d1c99f90ad26',1,'ML::Ridge::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;labels, double *alpha, int n_alpha, double *coef, double *intercept, bool fit_intercept, bool normalize, int algo, bool verbose)'],['../namespaceML_1_1UMAP.html#aa6e5f21b4f517e341635f80af2df4ed9',1,'ML::UMAP::fit()'],['../namespaceML_1_1CD_1_1opg.html#a8ba7317055bc796cc5e5ddb0ed74990a',1,'ML::CD::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;labels, float *coef, float *intercept, bool fit_intercept, bool normalize, int epochs, float alpha, float l1_ratio, bool shuffle, float tol, bool verbose)'],['../namespaceML_1_1CD_1_1opg.html#a9b622b4762d3da0dc5dff91c073ddf72',1,'ML::CD::opg::fit(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;labels, double *coef, double *intercept, bool fit_intercept, bool normalize, int epochs, double alpha, double l1_ratio, bool shuffle, double tol, bool verbose)'],['../namespaceML_1_1HoltWinters.html#a02552e29211d5430c86176b9f6c31ba3',1,'ML::HoltWinters::fit(const raft::handle_t &amp;handle, int n, int batch_size, int frequency, int start_periods, ML::SeasonalType seasonal, float epsilon, float *data, float *level_d, float *trend_d, float *season_d, float *error_d)'],['../namespaceML_1_1HoltWinters.html#a6c272303853312adb1d428c7727f4a55',1,'ML::HoltWinters::fit(const raft::handle_t &amp;handle, int n, int batch_size, int frequency, int start_periods, ML::SeasonalType seasonal, double epsilon, double *data, double *level_d, double *trend_d, double *season_d, double *error_d)']]],
  ['fit_5fembedding_322',['fit_embedding',['../namespaceML_1_1Spectral.html#a37ab0bc2e57e13218d56af67d0cd9d36',1,'ML::Spectral']]],
  ['fit_5fintercept_323',['fit_intercept',['../structqn__params.html#a3894a1caf2865353a092309b8e324681',1,'qn_params::fit_intercept()'],['../structML_1_1SVM_1_1LinearSVMParams.html#a23ad063f3307582bbe27abe6bfc3e4ab',1,'ML::SVM::LinearSVMParams::fit_intercept()']]],
  ['fit_5fpredict_324',['fit_predict',['../namespaceML_1_1kmeans.html#a1edd7cbacc9e623416c561009150ef08',1,'ML::kmeans::fit_predict(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const float *X, int n_samples, int n_features, const float *sample_weight, float *centroids, int *labels, float &amp;inertia, int &amp;n_iter)'],['../namespaceML_1_1kmeans.html#ae72175ba2151e94711fd547da4871910',1,'ML::kmeans::fit_predict(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const double *X, int n_samples, int n_features, const double *sample_weight, double *centroids, int *labels, double &amp;inertia, int &amp;n_iter)']]],
  ['fit_5fsparse_325',['fit_sparse',['../namespaceML_1_1UMAP.html#a89f765eb6db6023e227a30c850ca4f21',1,'ML::UMAP']]],
  ['fit_5ftransform_326',['fit_transform',['../namespaceML_1_1PCA_1_1opg.html#a3171036b94718a1da01e15f5a96e2d5e',1,'ML::PCA::opg::fit_transform(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, std::uint32_t n_parts, MLCommon::Matrix::floatData_t **input, MLCommon::Matrix::floatData_t **trans_input, float *components, float *explained_var, float *explained_var_ratio, float *singular_vals, float *mu, float *noise_vars, paramsPCAMG prms, bool verbose)'],['../namespaceML_1_1PCA_1_1opg.html#a2670cfa4f71a952368e63461d8d976e6',1,'ML::PCA::opg::fit_transform(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, std::uint32_t n_parts, MLCommon::Matrix::doubleData_t **input, MLCommon::Matrix::doubleData_t **trans_input, double *components, double *explained_var, double *explained_var_ratio, double *singular_vals, double *mu, double *noise_vars, paramsPCAMG prms, bool verbose)'],['../namespaceML_1_1TSVD_1_1opg.html#ad0f9b06e9cdc45ed73caaa05cf0d4302',1,'ML::TSVD::opg::fit_transform(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; float &gt; * &gt; &amp;trans_data, MLCommon::Matrix::PartDescriptor &amp;trans_desc, float *components, float *explained_var, float *explained_var_ratio, float *singular_vals, paramsTSVDMG &amp;prms, bool verbose)'],['../namespaceML_1_1TSVD_1_1opg.html#ac30ca444bf1a1515e1999b51498f1d90',1,'ML::TSVD::opg::fit_transform(raft::handle_t &amp;handle, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;input_data, MLCommon::Matrix::PartDescriptor &amp;input_desc, std::vector&lt; MLCommon::Matrix::Data&lt; double &gt; * &gt; &amp;trans_data, MLCommon::Matrix::PartDescriptor &amp;trans_desc, double *components, double *explained_var, double *explained_var_ratio, double *singular_vals, paramsTSVDMG &amp;prms, bool verbose)']]],
  ['fitness_2ecuh_327',['fitness.cuh',['../fitness_8cuh.html',1,'']]],
  ['fixconnectivitiesredop_328',['FixConnectivitiesRedOp',['../structML_1_1HDBSCAN_1_1FixConnectivitiesRedOp.html',1,'ML::HDBSCAN::FixConnectivitiesRedOp&lt; value_idx, value_t &gt;'],['../structML_1_1HDBSCAN_1_1FixConnectivitiesRedOp.html#a2500404fc650eaf5384934e58594813e',1,'ML::HDBSCAN::FixConnectivitiesRedOp::FixConnectivitiesRedOp()']]],
  ['flatnode_2eh_329',['flatnode.h',['../flatnode_8h.html',1,'']]],
  ['flatnode_5fhd_330',['FLATNODE_HD',['../flatnode_8h.html#a47f15a714cff5c1151291a5ad44aae7d',1,'flatnode.h']]],
  ['floatpointer_331',['FloatPointer',['../namespaceML_1_1Explainer.html#ac9f6a50f143629269f13f0872b6e05c7',1,'ML::Explainer']]],
  ['flush_332',['flush',['../classML_1_1Logger.html#af76f7bc85d07f2c1a3453fab8cd993d5',1,'ML::Logger']]],
  ['flush_5f_333',['flush_',['../classspdlog_1_1sinks_1_1CallbackSink.html#ae89177362eebd7d1d6e1e1a817c44ba5',1,'spdlog::sinks::CallbackSink']]],
  ['fnv_5fhash_2eh_334',['fnv_hash.h',['../fnv__hash_8h.html',1,'']]],
  ['forecast_335',['forecast',['../namespaceML_1_1HoltWinters.html#a9f6b9703695a80f3ffc2583b89007846',1,'ML::HoltWinters::forecast(const raft::handle_t &amp;handle, int n, int batch_size, int frequency, int h, ML::SeasonalType seasonal, float *level_d, float *trend_d, float *season_d, float *forecast_d)'],['../namespaceML_1_1HoltWinters.html#ad521224e76a8ec89406eaad13e8159c9',1,'ML::HoltWinters::forecast(const raft::handle_t &amp;handle, int n, int batch_size, int frequency, int h, ML::SeasonalType seasonal, double *level_d, double *trend_d, double *season_d, double *forecast_d)']]],
  ['forest_336',['forest',['../structML_1_1fil_1_1forest.html',1,'ML::fil']]],
  ['forest32_5ft_337',['forest32_t',['../namespaceML_1_1fil.html#ab902ee8f1eb9048bc84e3db2b379f68d',1,'ML::fil']]],
  ['forest64_5ft_338',['forest64_t',['../namespaceML_1_1fil.html#af55ed2548249908ddb3c11b2ecb276a9',1,'ML::fil']]],
  ['forest_5ft_339',['forest_t',['../namespaceML_1_1fil.html#aa3a074eb424be89ab69c968e4f540d4c',1,'ML::fil']]],
  ['forest_5fvariant_340',['forest_variant',['../namespaceML_1_1fil.html#ae637a1d8a1338933a94a22395a82e166',1,'ML::fil']]],
  ['format_341',['format',['../group__CStringFormat.html#gabb9694969393f0288a606c9184435ef9',1,'ML::format(const char *fmt, va_list &amp;vl)'],['../group__CStringFormat.html#gad55df9da3c66646eee88f92620cef30a',1,'ML::format(const char *fmt,...)']]],
  ['fowler_5fnoll_5fvo_5ffingerprint64_342',['fowler_noll_vo_fingerprint64',['../fnv__hash_8h.html#ae801efb95a1312c072e074ba941102c7',1,'fnv_hash.h']]],
  ['fowler_5fnoll_5fvo_5ffingerprint64_5f32_343',['fowler_noll_vo_fingerprint64_32',['../fnv__hash_8h.html#ad65c28794b35760999586c916c1c0a78',1,'fnv_hash.h']]],
  ['fragmenta_344',['FragmentA',['../structMLCommon_1_1LinAlg_1_1ThreadDiffSquaredAdd.html#af352fe5e0476bd7b85a991dc5944fb22',1,'MLCommon::LinAlg::ThreadDiffSquaredAdd::FragmentA()'],['../structMLCommon_1_1LinAlg_1_1ThreadL1NormAdd.html#a0a3a86fde537db8245b1e04b24130800',1,'MLCommon::LinAlg::ThreadL1NormAdd::FragmentA()']]],
  ['fragmentb_345',['FragmentB',['../structMLCommon_1_1LinAlg_1_1ThreadDiffSquaredAdd.html#a4876355754f7be69de55693f6e898920',1,'MLCommon::LinAlg::ThreadDiffSquaredAdd::FragmentB()'],['../structMLCommon_1_1LinAlg_1_1ThreadL1NormAdd.html#a529f28e1e35fc231617c572707c54c03',1,'MLCommon::LinAlg::ThreadL1NormAdd::FragmentB()']]],
  ['free_346',['free',['../structML_1_1SVM_1_1LinearSVMModel.html#a9fa08efbed48a4be88abc13dca30ef49',1,'ML::SVM::LinearSVMModel::free()'],['../namespaceML_1_1fil.html#a0b7e38dec86e85c5065868634614b352',1,'ML::fil::free()']]],
  ['from_5fstr_347',['from_str',['../structcuml_1_1genetic_1_1node.html#ab367e4adbd8461ac695aacba1de2541b',1,'cuml::genetic::node']]],
  ['from_5ftreelite_348',['from_treelite',['../namespaceML_1_1fil.html#abcbbfa1b3a23f70e8580598c6101b3f6',1,'ML::fil']]],
  ['full_349',['full',['../namespacecuml_1_1genetic.html#abf70754d771748ccedc1b92708658ba6ae9dc924f238fa6cc29465942875fe8f0',1,'cuml::genetic']]],
  ['function_5fset_350',['function_set',['../structcuml_1_1genetic_1_1param.html#aff59e206ad2df7cb1a1374fbdc30dbf2',1,'cuml::genetic::param']]],
  ['functions_5fbegin_351',['functions_begin',['../structcuml_1_1genetic_1_1node.html#a6c31af9f9ecb13165e25632908e94d77a8d858ecb8a53addb24b3187e6771aacc',1,'cuml::genetic::node']]],
  ['functions_5fend_352',['functions_end',['../structcuml_1_1genetic_1_1node.html#a6c31af9f9ecb13165e25632908e94d77a9422cd0bd5b8a4aa4c1b9ad6b707146e',1,'cuml::genetic::node']]],
  ['forecast_20methods_353',['Forecast methods',['../group__HoltWinterForecast.html',1,'']]],
  ['fit_20an_20ordinary_20least_20squares_20model_354',['fit an ordinary least squares model',['../group__olsFit.html',1,'']]],
  ['fit_20a_20ridge_20regression_20model_20_28l2_20regularized_20least_20squares_29_355',['fit a ridge regression model (l2 regularized least squares)',['../group__ridgeFit.html',1,'']]]
];
