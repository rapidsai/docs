Search.setIndex({"docnames": ["api_docs/api/cugraph.BiPartiteGraph", "api_docs/api/cugraph.Graph", "api_docs/api/cugraph.Graph.add_internal_vertex_id", "api_docs/api/cugraph.Graph.add_nodes_from", "api_docs/api/cugraph.Graph.clear", "api_docs/api/cugraph.Graph.from_cudf_adjlist", "api_docs/api/cugraph.Graph.from_cudf_edgelist", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist", "api_docs/api/cugraph.Graph.from_numpy_array", "api_docs/api/cugraph.Graph.from_numpy_matrix", "api_docs/api/cugraph.Graph.from_pandas_adjacency", "api_docs/api/cugraph.Graph.from_pandas_edgelist", "api_docs/api/cugraph.Graph.has_isolated_vertices", "api_docs/api/cugraph.Graph.is_bipartite", "api_docs/api/cugraph.Graph.is_directed", "api_docs/api/cugraph.Graph.is_multigraph", "api_docs/api/cugraph.Graph.is_multipartite", "api_docs/api/cugraph.Graph.is_renumbered", "api_docs/api/cugraph.Graph.is_weighted", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id", "api_docs/api/cugraph.Graph.to_directed", "api_docs/api/cugraph.Graph.to_undirected", "api_docs/api/cugraph.Graph.unrenumber", "api_docs/api/cugraph.MultiGraph", "api_docs/api/cugraph.analyzeClustering_edge_cut", "api_docs/api/cugraph.analyzeClustering_modularity", "api_docs/api/cugraph.analyzeClustering_ratio_cut", "api_docs/api/cugraph.batched_ego_graphs", "api_docs/api/cugraph.betweenness_centrality", "api_docs/api/cugraph.bfs", "api_docs/api/cugraph.bfs_edges", "api_docs/api/cugraph.centrality.eigenvector_centrality", "api_docs/api/cugraph.connected_components", "api_docs/api/cugraph.core_number", "api_docs/api/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "api_docs/api/cugraph.dask.centrality.katz_centrality.katz_centrality", "api_docs/api/cugraph.dask.common.read_utils.get_chunksize", "api_docs/api/cugraph.dask.comms.comms.destroy", "api_docs/api/cugraph.dask.comms.comms.get_2D_partition", "api_docs/api/cugraph.dask.comms.comms.get_comms", "api_docs/api/cugraph.dask.comms.comms.get_default_handle", "api_docs/api/cugraph.dask.comms.comms.get_handle", "api_docs/api/cugraph.dask.comms.comms.get_session_id", "api_docs/api/cugraph.dask.comms.comms.get_worker_id", "api_docs/api/cugraph.dask.comms.comms.get_workers", "api_docs/api/cugraph.dask.comms.comms.initialize", "api_docs/api/cugraph.dask.comms.comms.is_initialized", "api_docs/api/cugraph.dask.community.louvain.louvain", "api_docs/api/cugraph.dask.components.connectivity.weakly_connected_components", "api_docs/api/cugraph.dask.link_analysis.hits.hits", "api_docs/api/cugraph.dask.link_analysis.pagerank.pagerank", "api_docs/api/cugraph.dask.traversal.bfs.bfs", "api_docs/api/cugraph.dask.traversal.sssp.sssp", "api_docs/api/cugraph.degree_centrality", "api_docs/api/cugraph.dense_hungarian", "api_docs/api/cugraph.ecg", "api_docs/api/cugraph.edge_betweenness_centrality", "api_docs/api/cugraph.ego_graph", "api_docs/api/cugraph.experimental.PropertyGraph", "api_docs/api/cugraph.experimental.PropertyGraph.add_edge_data", "api_docs/api/cugraph.experimental.PropertyGraph.add_vertex_data", "api_docs/api/cugraph.experimental.PropertyGraph.annotate_dataframe", "api_docs/api/cugraph.experimental.PropertyGraph.edge_props_to_graph", "api_docs/api/cugraph.experimental.PropertyGraph.extract_subgraph", "api_docs/api/cugraph.experimental.PropertyGraph.get_edge_data", "api_docs/api/cugraph.experimental.PropertyGraph.get_num_edges", "api_docs/api/cugraph.experimental.PropertyGraph.get_num_vertices", "api_docs/api/cugraph.experimental.PropertyGraph.get_vertex_data", "api_docs/api/cugraph.experimental.PropertyGraph.get_vertices", "api_docs/api/cugraph.experimental.PropertyGraph.has_duplicate_edges", "api_docs/api/cugraph.experimental.PropertyGraph.is_multigraph", "api_docs/api/cugraph.experimental.PropertyGraph.renumber_edges_by_type", "api_docs/api/cugraph.experimental.PropertyGraph.renumber_vertices_by_type", "api_docs/api/cugraph.experimental.PropertyGraph.select_edges", "api_docs/api/cugraph.experimental.PropertyGraph.select_vertices", "api_docs/api/cugraph.experimental.PropertySelection", "api_docs/api/cugraph.filter_unreachable", "api_docs/api/cugraph.force_atlas2", "api_docs/api/cugraph.from_adjlist", "api_docs/api/cugraph.from_cudf_edgelist", "api_docs/api/cugraph.from_edgelist", "api_docs/api/cugraph.from_numpy_array", "api_docs/api/cugraph.from_numpy_matrix", "api_docs/api/cugraph.from_pandas_adjacency", "api_docs/api/cugraph.from_pandas_edgelist", "api_docs/api/cugraph.generators.rmat", "api_docs/api/cugraph.hits", "api_docs/api/cugraph.hungarian", "api_docs/api/cugraph.hypergraph", "api_docs/api/cugraph.jaccard", "api_docs/api/cugraph.jaccard_coefficient", "api_docs/api/cugraph.jaccard_w", "api_docs/api/cugraph.k_core", "api_docs/api/cugraph.k_truss", "api_docs/api/cugraph.katz_centrality", "api_docs/api/cugraph.ktruss_subgraph", "api_docs/api/cugraph.leiden", "api_docs/api/cugraph.louvain", "api_docs/api/cugraph.node2vec", "api_docs/api/cugraph.overlap", "api_docs/api/cugraph.overlap_coefficient", "api_docs/api/cugraph.overlap_w", "api_docs/api/cugraph.pagerank", "api_docs/api/cugraph.random_walks", "api_docs/api/cugraph.shortest_path", "api_docs/api/cugraph.shortest_path_length", "api_docs/api/cugraph.sorensen", "api_docs/api/cugraph.sorensen_coefficient", "api_docs/api/cugraph.sorensen_w", "api_docs/api/cugraph.spectralBalancedCutClustering", "api_docs/api/cugraph.spectralModularityMaximizationClustering", "api_docs/api/cugraph.sssp", "api_docs/api/cugraph.strongly_connected_components", "api_docs/api/cugraph.structure.NumberMap", "api_docs/api/cugraph.structure.NumberMap.MultiGPU", "api_docs/api/cugraph.structure.NumberMap.SingleGPU", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.compute_vals", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name", "api_docs/api/cugraph.structure.NumberMap.renumber", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.unrenumber", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.edges", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "api_docs/api/cugraph.structure.shuffle", "api_docs/api/cugraph.subgraph", "api_docs/api/cugraph.symmetrize", "api_docs/api/cugraph.symmetrize_ddf", "api_docs/api/cugraph.symmetrize_df", "api_docs/api/cugraph.to_numpy_array", "api_docs/api/cugraph.to_numpy_matrix", "api_docs/api/cugraph.to_pandas_adjacency", "api_docs/api/cugraph.to_pandas_edgelist", "api_docs/api/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "api_docs/api/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "api_docs/api/cugraph.triangle_count", "api_docs/api/cugraph.uniform_neighbor_sample", "api_docs/api/cugraph.weakly_connected_components", "api_docs/api/cugraph_dgl.cugraph_storage.CuGraphStorage", "api_docs/api/cugraph_dgl.cugraph_storage_from_heterograph", "api_docs/api/cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore", "api_docs/api/cugraph_pyg.loader.dispatch.call_cugraph_algorithm", "api_docs/api/cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler", "api_docs/api/cugraph_service_client.client.CugraphServiceClient", "api_docs/api/cugraph_service_client.client.DeviceArrayAllocator", "api_docs/api/cugraph_service_client.client.RunAsyncioThread", "api_docs/api/cugraph_service_client.client.run_async", "api_docs/api/cugraph_service_client.remote_graph.RemoteGraph", "api_docs/api/cugraph_service_client.remote_graph_utils", "api_docs/api/cugraph_service_client.types.GraphVertexEdgeIDWrapper", "api_docs/api/cugraph_service_client.types.UnionWrapper", "api_docs/api/cugraph_service_client.types.ValueWrapper", "api_docs/api/cugraph_service_server.cugraph_handler.CugraphHandler", "api_docs/api/cugraph_service_server.cugraph_handler.ExtensionServerFacade", "api_docs/api/cugraph_service_server.cugraph_handler.call_algo", "api_docs/api/pylibcugraph.bfs", "api_docs/api/pylibcugraph.eigenvector_centrality", "api_docs/api/pylibcugraph.hits", "api_docs/api/pylibcugraph.katz_centrality", "api_docs/api/pylibcugraph.node2vec", "api_docs/api/pylibcugraph.pagerank", "api_docs/api/pylibcugraph.sssp", "api_docs/api/pylibcugraph.strongly_connected_components", "api_docs/api/pylibcugraph.weakly_connected_components", "api_docs/c_and_cpp", "api_docs/centrality", "api_docs/community", "api_docs/components", "api_docs/cores", "api_docs/cugraph_dgl", "api_docs/cugraph_pyg", "api_docs/cugraph_service_client", "api_docs/cugraph_service_server", "api_docs/cugraph_top", "api_docs/dask-cugraph", "api_docs/generator", "api_docs/graph_implementation", "api_docs/helper_functions", "api_docs/index", "api_docs/layout", "api_docs/linear_assignment", "api_docs/link_analysis", "api_docs/link_prediction", "api_docs/property_graph", "api_docs/pylibcugraph", "api_docs/sampling", "api_docs/structure", "api_docs/traversal", "api_docs/tree", "basics/coming_soon", "basics/cugraph_blogs", "basics/cugraph_cascading", "basics/cugraph_intro", "basics/cugraph_ref", "basics/cugraph_toc", "basics/index", "basics/nx_transition", "index"], "filenames": ["api_docs/api/cugraph.BiPartiteGraph.rst", "api_docs/api/cugraph.Graph.rst", "api_docs/api/cugraph.Graph.add_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.add_nodes_from.rst", "api_docs/api/cugraph.Graph.clear.rst", "api_docs/api/cugraph.Graph.from_cudf_adjlist.rst", "api_docs/api/cugraph.Graph.from_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_numpy_array.rst", "api_docs/api/cugraph.Graph.from_numpy_matrix.rst", "api_docs/api/cugraph.Graph.from_pandas_adjacency.rst", "api_docs/api/cugraph.Graph.from_pandas_edgelist.rst", "api_docs/api/cugraph.Graph.has_isolated_vertices.rst", "api_docs/api/cugraph.Graph.is_bipartite.rst", "api_docs/api/cugraph.Graph.is_directed.rst", "api_docs/api/cugraph.Graph.is_multigraph.rst", "api_docs/api/cugraph.Graph.is_multipartite.rst", "api_docs/api/cugraph.Graph.is_renumbered.rst", "api_docs/api/cugraph.Graph.is_weighted.rst", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.to_directed.rst", "api_docs/api/cugraph.Graph.to_undirected.rst", "api_docs/api/cugraph.Graph.unrenumber.rst", "api_docs/api/cugraph.MultiGraph.rst", "api_docs/api/cugraph.analyzeClustering_edge_cut.rst", "api_docs/api/cugraph.analyzeClustering_modularity.rst", "api_docs/api/cugraph.analyzeClustering_ratio_cut.rst", "api_docs/api/cugraph.batched_ego_graphs.rst", "api_docs/api/cugraph.betweenness_centrality.rst", "api_docs/api/cugraph.bfs.rst", "api_docs/api/cugraph.bfs_edges.rst", "api_docs/api/cugraph.centrality.eigenvector_centrality.rst", "api_docs/api/cugraph.connected_components.rst", "api_docs/api/cugraph.core_number.rst", "api_docs/api/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality.rst", "api_docs/api/cugraph.dask.centrality.katz_centrality.katz_centrality.rst", "api_docs/api/cugraph.dask.common.read_utils.get_chunksize.rst", "api_docs/api/cugraph.dask.comms.comms.destroy.rst", "api_docs/api/cugraph.dask.comms.comms.get_2D_partition.rst", "api_docs/api/cugraph.dask.comms.comms.get_comms.rst", "api_docs/api/cugraph.dask.comms.comms.get_default_handle.rst", "api_docs/api/cugraph.dask.comms.comms.get_handle.rst", "api_docs/api/cugraph.dask.comms.comms.get_session_id.rst", "api_docs/api/cugraph.dask.comms.comms.get_worker_id.rst", "api_docs/api/cugraph.dask.comms.comms.get_workers.rst", "api_docs/api/cugraph.dask.comms.comms.initialize.rst", "api_docs/api/cugraph.dask.comms.comms.is_initialized.rst", "api_docs/api/cugraph.dask.community.louvain.louvain.rst", "api_docs/api/cugraph.dask.components.connectivity.weakly_connected_components.rst", "api_docs/api/cugraph.dask.link_analysis.hits.hits.rst", "api_docs/api/cugraph.dask.link_analysis.pagerank.pagerank.rst", "api_docs/api/cugraph.dask.traversal.bfs.bfs.rst", "api_docs/api/cugraph.dask.traversal.sssp.sssp.rst", "api_docs/api/cugraph.degree_centrality.rst", "api_docs/api/cugraph.dense_hungarian.rst", "api_docs/api/cugraph.ecg.rst", "api_docs/api/cugraph.edge_betweenness_centrality.rst", "api_docs/api/cugraph.ego_graph.rst", "api_docs/api/cugraph.experimental.PropertyGraph.rst", "api_docs/api/cugraph.experimental.PropertyGraph.add_edge_data.rst", "api_docs/api/cugraph.experimental.PropertyGraph.add_vertex_data.rst", "api_docs/api/cugraph.experimental.PropertyGraph.annotate_dataframe.rst", "api_docs/api/cugraph.experimental.PropertyGraph.edge_props_to_graph.rst", "api_docs/api/cugraph.experimental.PropertyGraph.extract_subgraph.rst", "api_docs/api/cugraph.experimental.PropertyGraph.get_edge_data.rst", "api_docs/api/cugraph.experimental.PropertyGraph.get_num_edges.rst", "api_docs/api/cugraph.experimental.PropertyGraph.get_num_vertices.rst", "api_docs/api/cugraph.experimental.PropertyGraph.get_vertex_data.rst", "api_docs/api/cugraph.experimental.PropertyGraph.get_vertices.rst", "api_docs/api/cugraph.experimental.PropertyGraph.has_duplicate_edges.rst", "api_docs/api/cugraph.experimental.PropertyGraph.is_multigraph.rst", "api_docs/api/cugraph.experimental.PropertyGraph.renumber_edges_by_type.rst", "api_docs/api/cugraph.experimental.PropertyGraph.renumber_vertices_by_type.rst", "api_docs/api/cugraph.experimental.PropertyGraph.select_edges.rst", "api_docs/api/cugraph.experimental.PropertyGraph.select_vertices.rst", "api_docs/api/cugraph.experimental.PropertySelection.rst", "api_docs/api/cugraph.filter_unreachable.rst", "api_docs/api/cugraph.force_atlas2.rst", "api_docs/api/cugraph.from_adjlist.rst", "api_docs/api/cugraph.from_cudf_edgelist.rst", "api_docs/api/cugraph.from_edgelist.rst", "api_docs/api/cugraph.from_numpy_array.rst", "api_docs/api/cugraph.from_numpy_matrix.rst", "api_docs/api/cugraph.from_pandas_adjacency.rst", "api_docs/api/cugraph.from_pandas_edgelist.rst", "api_docs/api/cugraph.generators.rmat.rst", "api_docs/api/cugraph.hits.rst", "api_docs/api/cugraph.hungarian.rst", "api_docs/api/cugraph.hypergraph.rst", "api_docs/api/cugraph.jaccard.rst", "api_docs/api/cugraph.jaccard_coefficient.rst", "api_docs/api/cugraph.jaccard_w.rst", "api_docs/api/cugraph.k_core.rst", "api_docs/api/cugraph.k_truss.rst", "api_docs/api/cugraph.katz_centrality.rst", "api_docs/api/cugraph.ktruss_subgraph.rst", "api_docs/api/cugraph.leiden.rst", "api_docs/api/cugraph.louvain.rst", "api_docs/api/cugraph.node2vec.rst", "api_docs/api/cugraph.overlap.rst", "api_docs/api/cugraph.overlap_coefficient.rst", "api_docs/api/cugraph.overlap_w.rst", "api_docs/api/cugraph.pagerank.rst", "api_docs/api/cugraph.random_walks.rst", "api_docs/api/cugraph.shortest_path.rst", "api_docs/api/cugraph.shortest_path_length.rst", "api_docs/api/cugraph.sorensen.rst", "api_docs/api/cugraph.sorensen_coefficient.rst", "api_docs/api/cugraph.sorensen_w.rst", "api_docs/api/cugraph.spectralBalancedCutClustering.rst", "api_docs/api/cugraph.spectralModularityMaximizationClustering.rst", "api_docs/api/cugraph.sssp.rst", "api_docs/api/cugraph.strongly_connected_components.rst", "api_docs/api/cugraph.structure.NumberMap.rst", "api_docs/api/cugraph.structure.NumberMap.MultiGPU.rst", "api_docs/api/cugraph.structure.NumberMap.SingleGPU.rst", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types.rst", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name.rst", "api_docs/api/cugraph.structure.NumberMap.renumber.rst", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment.rst", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names.rst", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.unrenumber.rst", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degrees.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.edges.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_node.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.nodes.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list.rst", "api_docs/api/cugraph.structure.shuffle.rst", "api_docs/api/cugraph.subgraph.rst", "api_docs/api/cugraph.symmetrize.rst", "api_docs/api/cugraph.symmetrize_ddf.rst", "api_docs/api/cugraph.symmetrize_df.rst", "api_docs/api/cugraph.to_numpy_array.rst", "api_docs/api/cugraph.to_numpy_matrix.rst", "api_docs/api/cugraph.to_pandas_adjacency.rst", "api_docs/api/cugraph.to_pandas_edgelist.rst", "api_docs/api/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree.rst", "api_docs/api/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree.rst", "api_docs/api/cugraph.triangle_count.rst", "api_docs/api/cugraph.uniform_neighbor_sample.rst", "api_docs/api/cugraph.weakly_connected_components.rst", "api_docs/api/cugraph_dgl.cugraph_storage.CuGraphStorage.rst", "api_docs/api/cugraph_dgl.cugraph_storage_from_heterograph.rst", "api_docs/api/cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore.rst", "api_docs/api/cugraph_pyg.loader.dispatch.call_cugraph_algorithm.rst", "api_docs/api/cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler.rst", "api_docs/api/cugraph_service_client.client.CugraphServiceClient.rst", "api_docs/api/cugraph_service_client.client.DeviceArrayAllocator.rst", "api_docs/api/cugraph_service_client.client.RunAsyncioThread.rst", "api_docs/api/cugraph_service_client.client.run_async.rst", "api_docs/api/cugraph_service_client.remote_graph.RemoteGraph.rst", "api_docs/api/cugraph_service_client.remote_graph_utils.rst", "api_docs/api/cugraph_service_client.types.GraphVertexEdgeIDWrapper.rst", "api_docs/api/cugraph_service_client.types.UnionWrapper.rst", "api_docs/api/cugraph_service_client.types.ValueWrapper.rst", "api_docs/api/cugraph_service_server.cugraph_handler.CugraphHandler.rst", "api_docs/api/cugraph_service_server.cugraph_handler.ExtensionServerFacade.rst", "api_docs/api/cugraph_service_server.cugraph_handler.call_algo.rst", "api_docs/api/pylibcugraph.bfs.rst", "api_docs/api/pylibcugraph.eigenvector_centrality.rst", "api_docs/api/pylibcugraph.hits.rst", "api_docs/api/pylibcugraph.katz_centrality.rst", "api_docs/api/pylibcugraph.node2vec.rst", "api_docs/api/pylibcugraph.pagerank.rst", "api_docs/api/pylibcugraph.sssp.rst", "api_docs/api/pylibcugraph.strongly_connected_components.rst", "api_docs/api/pylibcugraph.weakly_connected_components.rst", "api_docs/c_and_cpp.rst", "api_docs/centrality.rst", "api_docs/community.rst", "api_docs/components.rst", "api_docs/cores.rst", "api_docs/cugraph_dgl.rst", "api_docs/cugraph_pyg.rst", "api_docs/cugraph_service_client.rst", "api_docs/cugraph_service_server.rst", "api_docs/cugraph_top.rst", "api_docs/dask-cugraph.rst", "api_docs/generator.rst", "api_docs/graph_implementation.rst", "api_docs/helper_functions.rst", "api_docs/index.rst", "api_docs/layout.rst", "api_docs/linear_assignment.rst", "api_docs/link_analysis.rst", "api_docs/link_prediction.rst", "api_docs/property_graph.rst", "api_docs/pylibcugraph.rst", "api_docs/sampling.rst", "api_docs/structure.rst", "api_docs/traversal.rst", "api_docs/tree.rst", "basics/coming_soon.md", "basics/cugraph_blogs.rst", "basics/cugraph_cascading.md", "basics/cugraph_intro.md", "basics/cugraph_ref.rst", "basics/cugraph_toc.md", "basics/index.rst", "basics/nx_transition.rst", "index.rst"], "titles": ["cugraph.BiPartiteGraph", "cugraph.Graph", "cugraph.Graph.add_internal_vertex_id", "cugraph.Graph.add_nodes_from", "cugraph.Graph.clear", "cugraph.Graph.from_cudf_adjlist", "cugraph.Graph.from_cudf_edgelist", "cugraph.Graph.from_dask_cudf_edgelist", "cugraph.Graph.from_numpy_array", "cugraph.Graph.from_numpy_matrix", "cugraph.Graph.from_pandas_adjacency", "cugraph.Graph.from_pandas_edgelist", "cugraph.Graph.has_isolated_vertices", "cugraph.Graph.is_bipartite", "cugraph.Graph.is_directed", "cugraph.Graph.is_multigraph", "cugraph.Graph.is_multipartite", "cugraph.Graph.is_renumbered", "cugraph.Graph.is_weighted", "cugraph.Graph.lookup_internal_vertex_id", "cugraph.Graph.to_directed", "cugraph.Graph.to_undirected", "cugraph.Graph.unrenumber", "cugraph.MultiGraph", "cugraph.analyzeClustering_edge_cut", "cugraph.analyzeClustering_modularity", "cugraph.analyzeClustering_ratio_cut", "cugraph.batched_ego_graphs", "cugraph.betweenness_centrality", "cugraph.bfs", "cugraph.bfs_edges", "cugraph.centrality.eigenvector_centrality", "cugraph.connected_components", "cugraph.core_number", "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "cugraph.dask.centrality.katz_centrality.katz_centrality", "cugraph.dask.common.read_utils.get_chunksize", "cugraph.dask.comms.comms.destroy", "cugraph.dask.comms.comms.get_2D_partition", "cugraph.dask.comms.comms.get_comms", "cugraph.dask.comms.comms.get_default_handle", "cugraph.dask.comms.comms.get_handle", "cugraph.dask.comms.comms.get_session_id", "cugraph.dask.comms.comms.get_worker_id", "cugraph.dask.comms.comms.get_workers", "cugraph.dask.comms.comms.initialize", "cugraph.dask.comms.comms.is_initialized", "cugraph.dask.community.louvain.louvain", "cugraph.dask.components.connectivity.weakly_connected_components", "cugraph.dask.link_analysis.hits.hits", "cugraph.dask.link_analysis.pagerank.pagerank", "cugraph.dask.traversal.bfs.bfs", "cugraph.dask.traversal.sssp.sssp", "cugraph.degree_centrality", "cugraph.dense_hungarian", "cugraph.ecg", "cugraph.edge_betweenness_centrality", "cugraph.ego_graph", "cugraph.experimental.PropertyGraph", "cugraph.experimental.PropertyGraph.add_edge_data", "cugraph.experimental.PropertyGraph.add_vertex_data", "cugraph.experimental.PropertyGraph.annotate_dataframe", "cugraph.experimental.PropertyGraph.edge_props_to_graph", "cugraph.experimental.PropertyGraph.extract_subgraph", "cugraph.experimental.PropertyGraph.get_edge_data", "cugraph.experimental.PropertyGraph.get_num_edges", "cugraph.experimental.PropertyGraph.get_num_vertices", "cugraph.experimental.PropertyGraph.get_vertex_data", "cugraph.experimental.PropertyGraph.get_vertices", "cugraph.experimental.PropertyGraph.has_duplicate_edges", "cugraph.experimental.PropertyGraph.is_multigraph", "cugraph.experimental.PropertyGraph.renumber_edges_by_type", "cugraph.experimental.PropertyGraph.renumber_vertices_by_type", "cugraph.experimental.PropertyGraph.select_edges", "cugraph.experimental.PropertyGraph.select_vertices", "cugraph.experimental.PropertySelection", "cugraph.filter_unreachable", "cugraph.force_atlas2", "cugraph.from_adjlist", "cugraph.from_cudf_edgelist", "cugraph.from_edgelist", "cugraph.from_numpy_array", "cugraph.from_numpy_matrix", "cugraph.from_pandas_adjacency", "cugraph.from_pandas_edgelist", "cugraph.generators.rmat", "cugraph.hits", "cugraph.hungarian", "cugraph.hypergraph", "cugraph.jaccard", "cugraph.jaccard_coefficient", "cugraph.jaccard_w", "cugraph.k_core", "cugraph.k_truss", "cugraph.katz_centrality", "cugraph.ktruss_subgraph", "cugraph.leiden", "cugraph.louvain", "cugraph.node2vec", "cugraph.overlap", "cugraph.overlap_coefficient", "cugraph.overlap_w", "cugraph.pagerank", "cugraph.random_walks", "cugraph.shortest_path", "cugraph.shortest_path_length", "cugraph.sorensen", "cugraph.sorensen_coefficient", "cugraph.sorensen_w", "cugraph.spectralBalancedCutClustering", "cugraph.spectralModularityMaximizationClustering", "cugraph.sssp", "cugraph.strongly_connected_components", "cugraph.structure.NumberMap", "cugraph.structure.NumberMap.MultiGPU", "cugraph.structure.NumberMap.SingleGPU", "cugraph.structure.NumberMap.add_internal_vertex_id", "cugraph.structure.NumberMap.compute_vals", "cugraph.structure.NumberMap.compute_vals_types", "cugraph.structure.NumberMap.from_internal_vertex_id", "cugraph.structure.NumberMap.generate_unused_column_name", "cugraph.structure.NumberMap.renumber", "cugraph.structure.NumberMap.renumber_and_segment", "cugraph.structure.NumberMap.set_renumbered_col_names", "cugraph.structure.NumberMap.to_internal_vertex_id", "cugraph.structure.NumberMap.unrenumber", "cugraph.structure.NumberMap.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.degree", "cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.edges", "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "cugraph.structure.shuffle", "cugraph.subgraph", "cugraph.symmetrize", "cugraph.symmetrize_ddf", "cugraph.symmetrize_df", "cugraph.to_numpy_array", "cugraph.to_numpy_matrix", "cugraph.to_pandas_adjacency", "cugraph.to_pandas_edgelist", "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "cugraph.triangle_count", "cugraph.uniform_neighbor_sample", "cugraph.weakly_connected_components", "cugraph_dgl.cugraph_storage.CuGraphStorage", "cugraph_dgl.cugraph_storage_from_heterograph", "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore", "cugraph_pyg.loader.dispatch.call_cugraph_algorithm", "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler", "cugraph_service_client.client.CugraphServiceClient", "cugraph_service_client.client.DeviceArrayAllocator", "cugraph_service_client.client.RunAsyncioThread", "cugraph_service_client.client.run_async", "cugraph_service_client.remote_graph.RemoteGraph", "cugraph_service_client.remote_graph_utils", "cugraph_service_client.types.GraphVertexEdgeIDWrapper", "cugraph_service_client.types.UnionWrapper", "cugraph_service_client.types.ValueWrapper", "cugraph_service_server.cugraph_handler.CugraphHandler", "cugraph_service_server.cugraph_handler.ExtensionServerFacade", "cugraph_service_server.cugraph_handler.call_algo", "pylibcugraph.bfs", "pylibcugraph.eigenvector_centrality", "pylibcugraph.hits", "pylibcugraph.katz_centrality", "pylibcugraph.node2vec", "pylibcugraph.pagerank", "pylibcugraph.sssp", "pylibcugraph.strongly_connected_components", "pylibcugraph.weakly_connected_components", "CuGraph C and C++ API Links", "Centrality", "Community", "Components", "Cores", "cugraph-dgl API Refrerence", "cugraph-pyg API Reference", "cugraph-service-client API Reference", "cugraph-service-server API Reference", "cugraph API Reference", "Multi-GPU with cuGraph", "Generator", "Graph Implementation", "DASK MG Helper functions", "Python API reference", "Layout", "Linear Assignment", "Link Analysis", "Link Prediction", "Property Graph", "pylibcugraph API reference", "Sampling", "Graph Classes", "Traversal", "Tree", "&lt;no title&gt;", "cuGraph Blogs and Presentations", "Method Cascading and cuGraph", "cuGraph Introduction", "References", "&lt;no title&gt;", "Basics", "NetworkX Compatibility and Transition", "Welcome to cugraph\u2019s documentation!"], "terms": {"class": [0, 1, 23, 28, 56, 58, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 113, 162, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 197, 202, 215], "direct": [0, 1, 5, 14, 20, 21, 23, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 56, 61, 63, 73, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 92, 94, 98, 103, 104, 106, 107, 111, 112, 146, 149, 150, 151, 152, 161, 177], "fals": [0, 1, 2, 5, 6, 7, 11, 13, 14, 15, 16, 22, 23, 27, 28, 30, 32, 45, 46, 48, 50, 57, 62, 63, 66, 69, 73, 77, 84, 85, 88, 102, 103, 112, 116, 119, 121, 122, 125, 140, 148, 150, 151, 152, 157, 158, 160, 161, 162, 164, 179, 180, 183, 184, 185, 187, 198], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 198, 220], "A": [0, 1, 2, 6, 8, 9, 10, 11, 19, 20, 21, 22, 23, 28, 33, 45, 49, 54, 57, 59, 60, 61, 62, 63, 68, 73, 74, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103, 106, 107, 108, 116, 119, 125, 128, 137, 143, 149, 157, 158, 179, 180, 181, 182, 183, 184, 185, 187, 214, 216, 217], "bipartit": [0, 13, 54, 87, 220], "graph": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 125, 127, 128, 131, 134, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 197, 202, 214, 216, 217, 221], "method": [0, 1, 5, 6, 11, 23, 47, 50, 58, 59, 75, 84, 96, 97, 102, 104, 109, 110, 111, 113, 127, 128, 137, 143, 162, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 184, 197, 202], "__init__": [0, 1, 23, 58, 75, 113, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177], "m_graph": 1, "none": [1, 5, 6, 7, 8, 11, 19, 20, 21, 27, 28, 29, 30, 32, 35, 42, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 116, 119, 124, 125, 127, 128, 133, 137, 143, 145, 147, 150, 151, 152, 157, 158, 159, 161, 162, 164, 179, 181, 182, 184, 186, 187, 198, 215, 220], "gpu": [1, 19, 22, 27, 28, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 77, 85, 86, 89, 90, 91, 94, 95, 96, 97, 99, 101, 102, 106, 107, 108, 109, 110, 112, 125, 127, 128, 137, 143, 148, 150, 159, 160, 161, 162, 164, 176, 180, 181, 182, 184, 185, 197, 202, 214, 216, 217, 220, 221], "object": [1, 5, 6, 7, 11, 27, 29, 30, 32, 51, 57, 73, 74, 75, 78, 84, 85, 111, 112, 119, 149, 161, 162, 167, 174, 175, 186, 187], "base": [1, 29, 30, 31, 32, 33, 34, 49, 63, 86, 89, 91, 92, 94, 95, 99, 101, 105, 111, 112, 117, 119, 160, 161, 174, 178, 181, 182, 186, 198, 216], "other": [1, 27, 45, 59, 60, 77, 87, 88, 123, 151, 152, 197, 198, 215, 216, 220], "type": [1, 5, 28, 29, 30, 32, 52, 54, 56, 59, 60, 63, 64, 65, 66, 67, 69, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 96, 103, 105, 111, 112, 116, 118, 119, 145, 146, 147, 161, 162, 164, 166, 171, 181, 182, 183, 184, 185, 202], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 137, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187], "multigraph": [1, 15, 63, 220], "default": [1, 2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 116, 119, 125, 127, 128, 137, 143, 148, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 167, 181, 184, 220], "initi": [1, 5, 6, 7, 8, 9, 10, 11, 28, 35, 37, 40, 42, 44, 46, 49, 50, 56, 77, 78, 81, 82, 83, 84, 86, 94, 102, 181, 184, 198, 216], "from": [1, 2, 5, 6, 7, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 125, 143, 149, 150, 151, 152, 157, 158, 160, 161, 162, 164, 167, 174, 177, 179, 183, 185, 186, 187, 197, 198, 214, 215, 217, 220], "boolean": [1, 30, 75, 116, 119], "option": [1, 2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 137, 143, 148, 150, 151, 152, 156, 160, 161, 181], "indic": [1, 5, 6, 7, 11, 28, 51, 56, 78, 79, 80, 84, 91, 101, 104, 108, 111, 145, 147, 155, 160, 186, 187, 215, 220], "i": [1, 5, 6, 7, 11, 13, 14, 15, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 125, 127, 128, 133, 137, 141, 143, 145, 146, 147, 150, 151, 152, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 198, 213, 214, 215, 216, 220, 221], "exampl": [1, 5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 125, 127, 128, 137, 143, 149, 150, 151, 152, 157, 158, 159, 161, 162, 167, 177, 179, 180, 181, 183, 184, 185, 186, 187, 197, 215, 216, 220], "undirect": [1, 5, 7, 14, 21, 27, 28, 29, 31, 32, 33, 34, 35, 47, 48, 53, 56, 57, 89, 90, 92, 93, 94, 95, 96, 97, 98, 103, 106, 107, 112, 146, 149, 157, 158, 159, 161, 179], "g": [1, 5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 53, 54, 55, 56, 57, 61, 62, 63, 73, 74, 77, 78, 79, 80, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 125, 127, 128, 137, 143, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 178, 179, 180, 183, 184, 185, 187, 198, 215, 216, 220], "true": [1, 2, 5, 6, 7, 11, 12, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 61, 62, 63, 66, 69, 70, 73, 77, 79, 80, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 116, 119, 125, 134, 135, 136, 149, 150, 151, 152, 157, 158, 160, 161, 162, 163, 164, 176, 179, 180, 181, 182, 183, 184, 185, 187, 198, 215], "properti": [1, 58, 59, 60, 61, 62, 63, 64, 67, 68, 73, 74, 75, 102, 151, 152, 162, 164, 171, 184, 197, 202], "df": [2, 6, 11, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 49, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 119, 121, 122, 124, 125, 127, 128, 133, 137, 143, 146, 150, 152, 156, 160, 161, 215, 220], "internal_column_nam": [2, 119], "external_column_nam": [2, 119], "drop": [2, 91, 101, 108, 116, 119, 150, 151, 152], "preserve_ord": [2, 22, 116, 121, 122, 125], "given": [2, 19, 22, 24, 25, 26, 27, 57, 59, 60, 63, 65, 66, 88, 89, 90, 91, 93, 95, 99, 101, 106, 107, 108, 109, 110, 116, 119, 124, 125, 127, 128, 137, 143, 149, 169, 170], "datafram": [2, 6, 7, 10, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 131, 133, 137, 139, 143, 146, 149, 150, 151, 152, 155, 156, 159, 160, 161, 162, 179, 216, 220, 221], "contain": [2, 5, 6, 8, 9, 10, 11, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 131, 134, 135, 137, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 180, 181, 182, 183, 184, 185, 186, 187], "extern": [2, 6, 7, 11, 19, 22, 24, 25, 26, 84, 116, 117, 119, 124, 125, 133], "vertex": [2, 5, 6, 7, 11, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 66, 67, 68, 72, 75, 76, 77, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 133, 137, 143, 148, 149, 159, 160, 161, 171, 179, 181, 182, 184, 185, 186, 187, 216, 220], "id": [2, 5, 6, 7, 11, 19, 22, 24, 25, 26, 29, 30, 47, 51, 52, 54, 55, 59, 60, 62, 64, 67, 68, 71, 72, 76, 84, 85, 87, 88, 89, 90, 91, 96, 97, 99, 101, 105, 106, 107, 108, 111, 116, 119, 124, 125, 127, 128, 133, 137, 143, 151, 152, 162, 164, 173, 186], "identifi": [2, 19, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 53, 54, 55, 56, 61, 77, 86, 87, 91, 92, 94, 96, 97, 101, 102, 108, 109, 110, 112, 116, 119, 124, 125, 161, 181, 184, 185], "column": [2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 28, 29, 30, 32, 45, 47, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 84, 87, 88, 89, 90, 91, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 123, 124, 125, 133, 139, 145, 146, 147, 149, 150, 151, 152, 155, 156, 161, 162, 220], "return": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 131, 133, 134, 135, 136, 137, 139, 143, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 215, 220], "intern": [2, 19, 22, 35, 75, 77, 92, 94, 98, 116, 117, 118, 119, 124, 125, 146, 214, 216, 217], "specifi": [2, 24, 25, 26, 27, 28, 35, 45, 47, 52, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 106, 107, 108, 109, 110, 111, 112, 116, 119, 127, 128, 137, 143, 149, 160, 161, 162, 164, 185], "name": [2, 6, 7, 8, 11, 19, 22, 24, 25, 26, 34, 35, 48, 49, 50, 51, 52, 56, 59, 60, 61, 63, 69, 71, 72, 73, 74, 84, 88, 95, 116, 117, 118, 119, 120, 123, 124, 125, 150, 151, 152, 155, 156, 162, 165, 171, 198, 216, 220], "preserv": [2, 22, 116, 125], "order": [2, 19, 22, 28, 54, 56, 61, 73, 74, 89, 90, 91, 92, 99, 101, 106, 107, 108, 116, 124, 125, 127, 128, 137, 143, 177, 186, 217, 220], "origin": [2, 6, 7, 11, 22, 62, 84, 88, 119, 125], "cudf": [2, 3, 5, 6, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 124, 125, 127, 128, 131, 133, 137, 139, 143, 145, 146, 147, 149, 150, 152, 159, 160, 161, 162, 165, 179, 214, 215], "dask_cudf": [2, 6, 7, 19, 22, 34, 35, 36, 47, 48, 49, 50, 51, 52, 80, 85, 116, 119, 124, 125, 150, 151, 198], "convert": [2, 6, 7, 19, 22, 29, 32, 59, 60, 112, 116, 119, 124, 125, 161, 162, 163], "string": [2, 19, 22, 59, 60, 61, 62, 63, 65, 66, 69, 73, 74, 79, 80, 88, 116, 119, 124, 125, 151, 152, 157, 158, 162, 165, 167], "list": [2, 3, 5, 6, 8, 11, 25, 27, 28, 29, 32, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 64, 67, 69, 79, 80, 84, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 112, 116, 119, 124, 125, 127, 128, 129, 130, 137, 143, 145, 146, 147, 149, 150, 151, 152, 156, 157, 159, 160, 161, 171, 202, 218, 220, 221], "": [2, 35, 43, 51, 52, 56, 79, 80, 88, 94, 111, 146, 151, 152, 160, 162, 164, 166, 182, 198, 214, 217], "bool": [2, 5, 6, 7, 11, 22, 27, 28, 29, 32, 45, 49, 51, 52, 53, 56, 57, 62, 63, 66, 69, 70, 77, 79, 80, 84, 85, 86, 88, 95, 98, 103, 112, 125, 148, 150, 151, 152, 157, 158, 160, 161, 162, 163, 164, 181, 185], "data": [2, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 106, 107, 108, 109, 110, 111, 112, 116, 151, 152, 159, 160, 161, 162, 166, 180, 181, 182, 183, 184, 185, 187, 197, 198, 202, 214, 216, 220, 221], "frame": [2, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 53, 55, 56, 77, 86, 89, 90, 91, 94, 96, 97, 99, 101, 102, 106, 107, 108, 109, 110, 112, 151, 152, 159, 160, 161], "requir": [2, 5, 6, 7, 29, 35, 51, 63, 85, 87, 94, 98, 119, 160, 165, 216, 220], "an": [2, 5, 6, 7, 11, 14, 21, 22, 28, 29, 31, 32, 34, 35, 49, 50, 55, 56, 59, 60, 61, 63, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 98, 99, 101, 102, 105, 106, 107, 108, 112, 116, 119, 120, 124, 133, 141, 146, 150, 157, 158, 161, 162, 168, 175, 177, 181, 184, 187, 215, 216, 217, 220], "extra": [2, 116], "sort": [2, 22, 116, 133, 186], "new": [2, 35, 59, 60, 78, 79, 80, 94, 123, 151, 152, 164, 169, 170, 182, 216, 217, 218, 220], "node": [3, 8, 20, 21, 27, 28, 31, 33, 34, 35, 45, 49, 56, 57, 77, 86, 88, 91, 92, 94, 98, 101, 103, 108, 135, 142, 146, 160, 162, 180, 181, 182, 183, 198, 214, 216, 220], "add": [3, 22, 59, 60, 61, 63, 214, 215], "inform": [3, 6, 8, 9, 10, 11, 27, 29, 30, 31, 32, 34, 35, 38, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 77, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 105, 106, 107, 108, 111, 112, 157, 158, 159, 160, 161, 162, 217, 218, 220, 221], "seri": [3, 5, 19, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 53, 54, 55, 56, 57, 67, 68, 75, 78, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 116, 119, 124, 127, 128, 133, 137, 139, 143, 145, 146, 147, 149, 150, 159, 160, 161, 179], "The": [3, 5, 6, 7, 11, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 111, 112, 116, 119, 123, 124, 125, 127, 128, 133, 137, 143, 145, 147, 148, 149, 150, 155, 157, 158, 159, 161, 162, 164, 165, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 198, 214, 215, 216, 217, 220], "store": [3, 5, 6, 7, 52, 58, 59, 60, 79, 80, 89, 111, 146, 150, 151, 152, 162, 164, 165, 216, 220, 221], "empti": [4, 59, 60, 63, 88, 98, 179, 183], "offset_col": [5, 145, 147], "index_col": [5, 145, 147], "value_col": [5, 145, 147], "renumb": [5, 6, 7, 11, 17, 22, 50, 62, 63, 71, 72, 79, 80, 84, 102, 113, 125, 146, 148, 164, 179, 180, 183, 184, 185, 187], "store_transpos": [5, 6, 7, 121, 122, 179, 180, 183, 184, 185, 187], "adjac": [5, 6, 7, 8, 9, 10, 32, 47, 48, 49, 55, 78, 81, 82, 83, 85, 86, 89, 90, 91, 96, 97, 99, 101, 102, 106, 107, 108, 112, 127, 128, 129, 137, 143, 145, 147, 153, 154, 155, 157, 161], "It": [5, 6, 11, 45, 47, 55, 77, 84, 96, 97, 131, 168, 215, 220], "error": [5, 6, 11, 47, 77, 84, 96, 97, 175, 180, 182], "call": [5, 6, 11, 13, 16, 24, 25, 28, 33, 45, 47, 56, 61, 63, 68, 73, 74, 84, 92, 96, 97, 150, 151, 152, 165, 168, 169, 170, 177, 178, 179, 215, 216, 220, 221], "thi": [5, 6, 11, 13, 16, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 40, 45, 47, 49, 50, 51, 54, 55, 56, 57, 59, 60, 63, 74, 75, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 106, 107, 108, 110, 112, 116, 119, 124, 125, 127, 128, 137, 141, 143, 145, 146, 147, 149, 150, 151, 152, 159, 160, 161, 162, 168, 169, 170, 174, 176, 177, 179, 181, 182, 184, 185, 186, 202, 213, 215, 216, 220], "pass": [5, 6, 28, 56, 62, 78, 79, 80, 81, 82, 83, 84, 150, 175, 177, 178], "argument": [5, 6, 7, 11, 59, 60, 63, 79, 80, 84, 164, 169, 170, 180, 182], "wrap": [5, 6, 45, 145, 146, 147, 216], "gdf_column": [5, 6, 145, 147], "repres": [5, 6, 29, 30, 32, 33, 38, 45, 50, 54, 55, 57, 61, 73, 74, 75, 78, 88, 89, 90, 91, 92, 98, 99, 101, 102, 103, 106, 107, 108, 111, 112, 146, 151, 152, 161, 183, 184, 186, 187, 216], "us": [5, 6, 7, 11, 22, 28, 29, 30, 31, 32, 34, 35, 41, 45, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 69, 73, 74, 75, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 119, 123, 124, 125, 131, 151, 152, 157, 158, 159, 161, 162, 165, 167, 168, 170, 174, 175, 177, 179, 182, 184, 198, 214, 215, 216, 217, 221], "format": [5, 6, 197], "If": [5, 6, 7, 11, 22, 28, 29, 30, 31, 32, 34, 35, 45, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 65, 66, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 94, 98, 99, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 119, 124, 125, 127, 128, 137, 139, 143, 146, 150, 151, 152, 161, 162, 164, 170, 176, 178, 179, 181, 182, 183, 184, 185, 187, 198, 220], "unweight": [5, 63, 78, 104, 111, 145, 147], "creat": [5, 29, 50, 51, 59, 60, 62, 63, 75, 78, 79, 80, 81, 82, 83, 84, 88, 91, 98, 101, 102, 108, 150, 151, 152, 160, 162, 167, 168, 177, 198, 215, 220], "weight": [5, 6, 7, 11, 18, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 62, 63, 77, 78, 79, 80, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 131, 145, 146, 147, 149, 150, 151, 152, 157, 158, 159, 161, 179, 180, 183, 184, 185, 186, 187, 220], "edg": [5, 6, 11, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 127, 130, 134, 137, 140, 143, 145, 146, 147, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 164, 171, 183, 184, 185, 186, 215, 216, 220], "must": [5, 6, 7, 45, 50, 51, 52, 59, 61, 92, 109, 110, 162, 179, 185], "both": [5, 29, 32, 33, 49, 68, 74, 86, 89, 90, 92, 103, 106, 107, 112, 127, 146, 149, 150, 151, 152, 161, 215, 216, 220], "size": [5, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 56, 77, 86, 89, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 127, 128, 137, 143, 145, 147, 161, 168, 183, 186, 198], "v": [5, 6, 7, 11, 20, 21, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 77, 79, 80, 84, 85, 86, 87, 92, 94, 96, 97, 102, 109, 110, 112, 134, 145, 147, 151, 152, 161, 217], "1": [5, 6, 11, 20, 21, 22, 27, 28, 29, 31, 32, 33, 34, 35, 45, 47, 49, 50, 52, 55, 56, 57, 60, 61, 62, 63, 64, 67, 68, 72, 73, 74, 77, 78, 79, 80, 84, 85, 86, 93, 94, 95, 96, 97, 98, 102, 109, 111, 112, 116, 119, 124, 125, 127, 128, 137, 143, 145, 147, 149, 150, 152, 157, 158, 159, 161, 162, 167, 176, 179, 180, 181, 183, 184, 185, 186, 187, 214, 215, 217, 220], "number": [5, 6, 7, 11, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 49, 50, 54, 55, 56, 65, 66, 77, 79, 80, 84, 85, 86, 89, 92, 94, 96, 97, 102, 109, 110, 112, 119, 127, 137, 140, 142, 143, 145, 147, 148, 159, 161, 162, 167, 168, 176, 179, 180, 181, 182, 183, 184, 186, 197, 215, 220], "vertic": [5, 6, 7, 11, 12, 28, 31, 32, 33, 34, 35, 47, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 66, 67, 68, 74, 75, 76, 79, 80, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 111, 112, 127, 128, 137, 139, 143, 145, 147, 149, 159, 160, 161, 164, 179, 180, 181, 182, 183, 184, 185, 186, 187], "gdf": [5, 145, 147, 159, 215], "offset": [5, 27, 78, 98, 145, 147, 186, 187], "rang": [5, 6, 7, 11, 55, 61, 79, 80, 84, 91, 101, 108, 145, 147], "0": [5, 6, 7, 11, 20, 21, 22, 28, 29, 30, 31, 32, 34, 35, 47, 50, 51, 52, 54, 55, 56, 60, 61, 62, 63, 64, 67, 68, 71, 72, 73, 77, 78, 79, 80, 84, 85, 87, 94, 96, 97, 98, 102, 109, 110, 111, 112, 116, 119, 125, 127, 128, 137, 143, 145, 147, 149, 150, 152, 159, 161, 162, 167, 179, 180, 183, 184, 185, 186, 187, 198, 214, 220], "e": [5, 47, 56, 89, 90, 91, 95, 97, 99, 101, 106, 107, 108, 145, 146, 147, 151, 152, 162, 165, 214, 216, 217, 220], "destin": [5, 6, 7, 11, 27, 34, 35, 48, 49, 50, 51, 52, 56, 59, 61, 64, 69, 70, 79, 80, 84, 89, 90, 106, 107, 131, 145, 146, 147, 150, 151, 152, 155, 156, 159, 160, 162, 179, 198], "index": [5, 6, 7, 11, 22, 30, 79, 80, 84, 91, 94, 101, 105, 106, 108, 111, 145, 146, 147, 185, 198, 217, 221], "each": [5, 20, 21, 27, 28, 29, 30, 32, 35, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 71, 72, 77, 86, 88, 89, 90, 91, 93, 94, 95, 98, 99, 101, 102, 103, 106, 108, 111, 112, 145, 146, 147, 160, 161, 179, 181, 182, 183, 185, 186, 187, 216], "pointer": [5, 79, 80, 145, 147, 181, 183], "can": [5, 6, 7, 11, 28, 29, 30, 31, 32, 33, 34, 35, 45, 50, 53, 54, 56, 58, 60, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 92, 94, 95, 98, 102, 103, 111, 112, 123, 161, 162, 167, 168, 175, 184, 186, 198, 215, 220], "valu": [5, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 77, 78, 85, 86, 87, 88, 89, 91, 92, 94, 98, 101, 102, 103, 105, 108, 111, 112, 123, 145, 146, 147, 150, 151, 152, 160, 161, 162, 175, 180, 181, 182, 183, 184, 185, 186, 187, 215, 220], "expect": [5, 45, 145, 147, 216], "element": [5, 31, 34, 56, 116, 145, 147, 151, 152, 184, 185, 216, 220], "float": [5, 24, 25, 26, 27, 29, 30, 31, 34, 35, 47, 49, 50, 54, 55, 57, 77, 85, 86, 87, 94, 96, 97, 98, 102, 105, 109, 110, 111, 145, 147, 181], "point": [5, 27, 29, 30, 32, 47, 57, 77, 96, 97, 105, 111, 112, 123, 137, 143, 145, 147, 161, 216], "whether": [5, 6, 11, 29, 75, 77, 84, 85, 88, 95, 162, 164, 179, 198], "transpos": [5, 6, 7, 102, 147, 148], "matrix": [5, 6, 7, 8, 9, 10, 27, 29, 30, 32, 54, 57, 78, 81, 82, 83, 85, 89, 105, 111, 112, 146, 148, 153, 154, 155, 161, 186, 187, 216], "certain": [5, 6, 7], "algorithm": [5, 6, 7, 24, 25, 28, 29, 32, 45, 47, 49, 50, 51, 52, 54, 55, 56, 58, 61, 63, 77, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 101, 106, 107, 108, 111, 112, 149, 157, 158, 159, 160, 161, 165, 179, 180, 181, 182, 183, 184, 185, 187, 214, 216, 218, 221], "read_csv": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 78, 79, 80, 84, 88, 125, 127, 128, 137, 143, 150, 151, 152, 159, 179, 198, 220], "datasets_path": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 78, 79, 80, 84, 88, 125, 127, 128, 137, 143, 150, 152, 159, 179], "karat": [5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 77, 78, 79, 80, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 125, 127, 128, 137, 143, 149, 150, 151, 152, 159, 161, 179, 217], "csv": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 78, 79, 80, 84, 88, 125, 127, 128, 137, 143, 150, 151, 152, 159, 179, 198], "delimit": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 78, 79, 80, 84, 88, 125, 127, 128, 137, 143, 150, 151, 152, 159, 179], "dtype": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 54, 68, 78, 79, 80, 84, 87, 88, 98, 125, 127, 128, 137, 143, 149, 150, 151, 152, 159, 162, 179, 180, 183, 184, 185, 186, 187, 198], "int32": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 78, 79, 80, 84, 88, 98, 113, 125, 127, 128, 137, 143, 149, 150, 151, 152, 159, 160, 162, 179, 180, 183, 184, 185, 186, 187, 198], "float32": [5, 6, 11, 20, 21, 28, 34, 35, 48, 49, 50, 51, 52, 56, 78, 79, 80, 84, 88, 125, 127, 128, 137, 143, 150, 151, 152, 159, 179, 180, 183, 184, 185, 187], "header": [5, 6, 11, 20, 21, 78, 79, 80, 84, 88, 125, 127, 128, 137, 143, 150, 152, 159, 179], "m": [5, 20, 21, 78, 79, 80, 88, 94, 95, 103, 127, 128, 137, 143, 150, 152, 179, 182, 217], "to_panda": 5, "scipi": [5, 27, 29, 30, 32, 57, 78, 111, 112, 161, 186, 187, 214, 216, 221], "spars": [5, 27, 29, 30, 32, 57, 77, 78, 105, 111, 112, 161, 186, 187, 216, 221], "coo_matrix": [5, 78], "2": [5, 6, 11, 27, 28, 29, 30, 31, 32, 34, 35, 48, 56, 57, 60, 61, 62, 63, 64, 67, 68, 71, 72, 73, 74, 77, 78, 79, 80, 84, 85, 89, 93, 94, 95, 98, 109, 110, 111, 112, 149, 150, 159, 161, 162, 179, 180, 183, 184, 185, 186, 187, 197, 214, 215, 217, 220], "tocsr": [5, 78], "indptr": [5, 78, 186, 187], "input_df": [6, 150], "edge_attr": [6, 7, 11, 34, 48, 49, 50, 51, 52, 79, 80, 84, 102, 159, 179], "legacy_renum_onli": [6, 7, 29, 51, 98, 121, 122, 160], "By": [6, 7, 11, 84, 127, 128, 137, 143], "enabl": [6, 7, 11, 29, 51, 84, 98, 160], "map": [6, 7, 11, 28, 56, 84, 88, 162, 175], "where": [6, 7, 11, 28, 32, 33, 35, 45, 56, 79, 80, 84, 85, 89, 90, 92, 93, 94, 95, 106, 107, 112, 119, 150, 151, 152, 161, 162, 164, 165, 167, 180, 181, 183, 184, 185, 214, 215, 216], "input": [6, 7, 11, 22, 29, 30, 32, 33, 45, 47, 50, 51, 52, 53, 55, 56, 57, 59, 60, 84, 88, 92, 96, 97, 102, 105, 111, 112, 116, 125, 146, 148, 151, 152, 159, 161, 179, 180, 181, 182, 183, 184, 185, 187, 198, 220], "ar": [6, 7, 11, 22, 27, 28, 31, 32, 33, 34, 35, 45, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 65, 66, 67, 69, 74, 75, 77, 79, 80, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 106, 107, 108, 111, 112, 119, 123, 125, 127, 128, 133, 137, 143, 145, 146, 147, 149, 150, 151, 152, 159, 161, 162, 177, 179, 181, 183, 184, 185, 186, 187, 214, 215, 216], "singl": [6, 7, 11, 19, 22, 27, 28, 29, 30, 56, 57, 67, 77, 84, 85, 98, 103, 105, 111, 125, 150, 162, 180, 181, 182, 184, 185, 197, 198, 214, 216, 220], "integ": [6, 7, 11, 24, 25, 26, 27, 28, 29, 30, 47, 51, 52, 54, 55, 56, 57, 67, 77, 79, 80, 84, 87, 96, 97, 109, 110, 162], "disabl": [6, 7, 11, 84], "present": [6, 11, 27, 29, 30, 32, 47, 48, 49, 55, 57, 77, 84, 86, 89, 90, 91, 96, 97, 99, 101, 102, 105, 106, 107, 108, 111, 112, 146, 161, 186, 218, 221], "reinterpret": 6, "For": [6, 29, 32, 59, 60, 88, 90, 100, 103, 107, 112, 131, 145, 146, 147, 149, 161, 184, 185, 186, 216, 220], "distribut": [6, 7, 35, 45, 48, 49, 77, 148, 150, 151, 197], "path": [6, 28, 29, 30, 32, 51, 52, 56, 76, 98, 103, 105, 111, 112, 160, 161, 183, 185, 197, 217], "pleas": [6, 28, 56, 89], "from_dask_cudf_edgelist": [6, 34, 35, 48, 49, 50, 51, 52, 198], "str": [6, 7, 11, 24, 25, 26, 32, 33, 55, 67, 71, 72, 84, 88, 92, 102, 103, 105, 112, 119, 150, 151, 152, 156, 161, 162], "arrai": [6, 7, 8, 11, 29, 30, 59, 60, 67, 81, 84, 98, 153, 156, 168, 179, 180, 181, 182, 183, 184, 185, 186, 187, 220], "like": [6, 7, 8, 11, 59, 60, 84, 98, 156, 183, 220], "skip": [6, 7, 88], "c": [6, 7, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 85, 87, 94, 198, 216, 217, 221], "step": [6, 7, 85, 216], "pylibcugraph": [6, 7, 29, 51, 98, 160, 202, 221], "yet": [6, 7, 68, 95, 181], "api": [6, 7, 29, 34, 35, 48, 49, 50, 51, 52, 54, 104, 112, 161, 167, 220], "input_ddf": 7, "edgelist": [7, 50, 84, 85, 102, 146, 148, 150, 156, 179], "current": [7, 13, 15, 16, 28, 30, 33, 45, 47, 48, 56, 59, 89, 90, 92, 93, 95, 96, 97, 98, 103, 106, 107, 111, 149, 159, 160, 170, 181, 186, 198, 213, 218, 220, 221], "support": [7, 27, 28, 31, 33, 34, 35, 47, 48, 56, 57, 63, 68, 79, 92, 94, 95, 96, 97, 98, 103, 111, 149, 159, 164, 175, 181, 185, 186, 187, 198, 215, 216], "note": [7, 13, 15, 16, 19, 22, 28, 29, 32, 35, 50, 51, 54, 56, 63, 66, 77, 89, 93, 94, 95, 98, 102, 112, 116, 124, 125, 146, 151, 152, 160, 161, 186, 220], "refer": [7, 94, 95, 98, 221], "provid": [7, 45, 50, 57, 59, 60, 78, 87, 89, 90, 91, 99, 101, 102, 104, 106, 107, 108, 116, 127, 128, 137, 143, 149, 164, 169, 174, 175, 179, 202, 214, 216], "should": [7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 77, 79, 80, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 119, 149, 151, 152, 159, 161, 164, 179, 181, 182, 184, 214], "np_arrai": 8, "numpi": [8, 9, 28, 29, 30, 32, 56, 81, 82, 111, 112, 113, 153, 154, 161, 165, 180, 183, 184, 185, 186, 187], "act": 8, "label": [8, 22, 32, 48, 112, 119, 125, 161, 186, 187, 216], "np_matrix": 9, "pdf": [10, 11, 78, 217], "panda": [10, 11, 27, 29, 30, 59, 60, 61, 62, 67, 68, 75, 78, 80, 83, 84, 111, 155, 156, 165, 220], "download": [11, 34, 35, 48, 49, 50, 51, 52, 84, 150, 151, 152], "dataset": [11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 77, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 149, 150, 151, 152, 157, 158, 161, 198], "http": [11, 34, 35, 47, 48, 49, 50, 51, 52, 55, 84, 94, 95, 97, 98, 150, 151, 152, 214, 216, 217], "github": [11, 34, 35, 48, 49, 50, 51, 52, 84, 150, 151, 152, 216], "com": [11, 34, 35, 48, 49, 50, 51, 52, 84, 150, 151, 152, 214, 216, 217], "rapidsai": [11, 34, 35, 48, 49, 50, 51, 52, 84, 150, 151, 152, 162, 216], "pd": [11, 78, 84, 220], "ha": [12, 18, 28, 33, 50, 56, 63, 69, 70, 88, 95, 102, 136, 176, 179, 184, 185, 215, 216], "isol": [12, 50, 85, 102], "check": [13, 16, 63, 180, 182, 197], "sole": [13, 16], "reli": [13, 16, 28, 56], "user": [13, 16, 56, 59, 60, 89, 91, 99, 101, 102, 106, 108, 162, 177, 214, 215, 216], "add_nodes_from": [13, 16], "doe": [13, 16, 19, 22, 28, 33, 40, 50, 56, 79, 92, 102, 124, 125, 131, 149, 157, 160, 215, 216, 220], "pars": [13, 16], "implement": [13, 15, 16, 28, 30, 33, 47, 48, 49, 56, 86, 89, 90, 92, 94, 95, 96, 97, 103, 106, 107, 111, 149, 159, 182, 197, 202], "alwai": [13, 15, 16, 35, 94, 216], "els": [15, 88, 91, 99, 101, 103, 108], "multipartit": 16, "partit": [16, 19, 22, 24, 25, 26, 36, 38, 45, 47, 50, 51, 52, 55, 85, 87, 96, 97, 109, 110, 116, 124, 125, 148, 198, 217], "column_nam": [19, 22, 117, 118, 120, 125], "function": [19, 20, 22, 30, 50, 79, 93, 95, 102, 117, 118, 120, 125, 141, 169, 170, 172, 177, 178, 197, 198, 202, 215, 216], "guarante": [19, 22, 35, 94, 96, 116, 124, 125, 217], "mode": [19, 22, 77, 125], "multi": [19, 22, 45, 87, 91, 98, 101, 103, 108, 125, 139, 149, 150, 151, 152, 164, 180, 181, 182, 184, 185, 197, 202, 214, 216], "represent": [20, 54], "set": [20, 29, 31, 34, 35, 49, 50, 52, 63, 77, 85, 86, 87, 88, 89, 91, 92, 94, 98, 99, 101, 102, 106, 108, 111, 112, 123, 127, 128, 137, 143, 149, 150, 151, 152, 159, 161, 171, 179, 181, 182, 184, 185, 186, 187, 198], "attribut": [20, 57, 58, 62, 63, 78, 79, 80, 81, 82, 83, 84, 88, 93, 102, 157, 158, 162, 164, 166, 169, 171, 173, 174, 175, 176, 177], "view": [20, 131], "same": [20, 21, 22, 28, 59, 63, 69, 70, 88, 125, 146, 151, 152, 185, 215], "u": [20, 21, 134, 151, 152, 216, 217], "replac": [20, 21, 22, 62, 63, 123, 125, 160, 220], "two": [20, 28, 29, 30, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 75, 77, 86, 87, 89, 90, 91, 92, 94, 96, 97, 99, 101, 102, 106, 107, 108, 109, 110, 112, 133, 150, 160, 161, 181, 187, 215], "from_cudf_edgelist": [20, 21, 125, 127, 128, 137, 143, 159, 179, 215], "dig": [20, 21], "copi": [21, 57, 61, 63, 93, 157, 158, 215], "get_column_nam": [22, 125], "output": [22, 33, 76, 77, 92, 95, 119, 125, 151, 152, 170], "through": [22, 28, 56, 88, 125, 176, 202], "n": [22, 27, 28, 56, 57, 91, 94, 96, 101, 108, 119, 125, 127, 128, 135, 137, 138, 143, 182, 217], "suffix": [22, 125], "_column_nam": [22, 125], "you": [22, 77, 89, 94, 198], "wish": 22, "row": [22, 45, 54, 57, 61, 69, 75, 88, 125, 155, 186, 187, 220], "match": [22, 54, 63, 68, 73, 74, 87, 94, 125, 151, 152, 179, 216], "exist": [22, 66, 119, 123, 125, 149, 150, 151, 152, 220], "unmodifi": [22, 119, 125], "dentifi": 22, "ad": [22, 29, 35, 59, 60, 61, 66, 79, 88, 94, 112, 119, 125, 141, 161, 182, 197, 220], "remov": [22, 76, 125], "more": [23, 28, 33, 47, 51, 52, 56, 63, 68, 70, 77, 92, 96, 97, 98, 116, 124, 179, 181, 183, 184, 185, 187, 198, 215, 220], "than": [23, 28, 35, 45, 47, 50, 56, 77, 94, 96, 97, 102, 109, 182, 184, 198, 215, 216, 220], "one": [23, 28, 29, 50, 51, 52, 56, 63, 67, 68, 70, 75, 87, 88, 105, 133, 157, 179, 198, 216, 220], "between": [23, 28, 29, 30, 31, 34, 35, 50, 56, 77, 85, 88, 89, 90, 91, 94, 99, 101, 102, 106, 107, 108, 111, 174, 184, 197, 216, 217, 220], "pair": [23, 28, 56, 70, 88, 89, 90, 91, 99, 101, 106, 107, 108, 133, 146, 150, 220], "n_cluster": [24, 25, 26], "cluster": [24, 25, 26, 34, 35, 45, 48, 49, 50, 51, 52, 55, 77, 109, 110, 151, 176, 197, 198, 214, 217, 220], "vertex_col_nam": [24, 25, 26, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "cluster_col_nam": [24, 25, 26], "comput": [24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 52, 53, 55, 56, 57, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 127, 128, 133, 137, 143, 145, 146, 147, 149, 157, 159, 161, 179, 180, 181, 182, 183, 184, 185, 198, 214, 216, 217, 220], "cut": [24, 26, 109], "score": [24, 25, 26, 28, 35, 47, 49, 50, 56, 86, 94, 96, 97, 102, 180, 182, 184, 214, 217, 220], "assumpt": [24, 25], "result": [24, 25, 28, 31, 34, 35, 45, 48, 49, 53, 55, 56, 58, 61, 63, 64, 76, 78, 86, 88, 89, 94, 103, 133, 159, 160, 162, 165], "special": [24, 25], "descriptor": [24, 25, 26, 31, 34, 35, 47, 48, 49, 50, 52, 53, 55, 57, 77, 86, 87, 92, 93, 94, 95, 96, 97, 102, 105, 109, 110, 149, 157, 158, 159], "assign": [24, 25, 26, 47, 54, 55, 59, 60, 87, 96, 97, 109, 110, 197, 202, 217, 220], "analyz": [24, 25, 26, 198], "experiment": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 77, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 149, 157, 158, 161], "import": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 125, 149, 150, 151, 152, 157, 158, 161, 162, 167, 180, 183, 184, 185, 186, 187, 198, 220], "get_graph": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 77, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 149, 157, 158, 161, 177], "fetch": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 77, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 149, 157, 158, 161, 162], "spectralbalancedcutclust": [24, 25, 26], "5": [24, 25, 26, 27, 35, 49, 50, 54, 55, 60, 63, 67, 68, 70, 71, 72, 73, 74, 77, 86, 87, 98, 102, 109, 110, 181, 184, 186, 198], "modular": [25, 47, 96, 97, 110], "networkx": [25, 27, 28, 29, 30, 31, 32, 33, 34, 49, 53, 55, 56, 57, 62, 79, 80, 86, 89, 90, 92, 93, 94, 97, 98, 100, 102, 103, 104, 105, 107, 109, 110, 111, 112, 141, 146, 157, 158, 159, 161, 214, 216, 221], "have": [25, 26, 50, 52, 57, 60, 61, 63, 66, 85, 88, 89, 93, 102, 110, 111, 157, 158, 162, 164, 179, 185, 198, 216], "ratio": [26, 89, 91, 99, 101, 106, 108], "seed": [27, 28, 56, 85, 183, 198], "radiu": [27, 57], "center": [27, 57, 77], "distanc": [27, 29, 30, 51, 52, 57, 76, 105, 111, 179, 185, 220], "induc": [27, 57, 149], "subgraph": [27, 33, 57, 63, 92, 93, 95, 197, 217, 220], "neighbor": [27, 31, 34, 57, 89, 91, 99, 101, 160], "within": [27, 41, 43, 57, 88, 177, 216, 220], "cupi": [27, 29, 30, 32, 57, 105, 111, 112, 161, 164, 165, 168, 179, 180, 183, 184, 185, 186, 187, 216, 221], "which": [27, 29, 30, 31, 32, 34, 35, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 78, 94, 98, 102, 103, 111, 112, 119, 127, 160, 161, 162, 167, 176, 179, 184, 187, 198], "connect": [27, 29, 30, 31, 32, 34, 35, 47, 49, 50, 51, 52, 53, 55, 57, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 111, 112, 157, 158, 159, 160, 161, 167, 186, 187, 197, 217, 220], "doubl": [27, 29, 30, 47, 52, 54, 56, 57, 77, 87, 96, 97, 105, 111, 180, 181, 182, 183, 184, 185], "precis": [27, 29, 30, 57, 77, 105, 111], "egonet": [27, 197], "includ": [27, 28, 57, 59, 60, 64, 66, 67, 85, 88, 149, 175, 216], "all": [27, 28, 45, 50, 52, 54, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 74, 87, 88, 89, 90, 91, 93, 99, 101, 102, 105, 106, 107, 108, 111, 127, 128, 131, 137, 139, 143, 150, 151, 152, 157, 158, 162, 179, 182, 185, 202, 214, 215, 216], "kei": [27, 32, 57, 59, 60, 95, 112, 161, 162], "count": [27, 28, 65, 95, 159, 197, 217, 220], "hop": [27, 89, 133, 160, 220], "case": [27, 87, 98, 102, 103, 124, 215, 216], "ego_edge_list": 27, "seeds_offset": 27, "start": [27, 28, 29, 30, 50, 51, 52, 56, 62, 71, 72, 76, 102, 105, 111, 123, 160, 169, 170, 179], "b_ego_graph": 27, "k": [28, 33, 56, 92, 93, 94, 95, 109, 110, 197, 217, 220], "normal": [28, 31, 34, 35, 49, 53, 56, 77, 86, 94, 181], "endpoint": [28, 45, 220], "result_dtyp": [28, 56], "float64": [28, 56, 62, 63, 162], "central": [28, 53, 56, 94, 180, 182, 197, 202, 217, 220], "measur": [28, 56], "shortest": [28, 29, 30, 32, 52, 56, 105, 111, 112, 161, 185, 197, 217, 220], "high": [28, 56, 88, 95, 214, 216, 217], "therefor": [28, 35, 56, 94, 95], "believ": [28, 56], "To": [28, 56, 215, 216, 220], "improv": [28, 56, 220], "perform": [28, 40, 45, 50, 51, 52, 54, 56, 63, 95, 102, 148, 150, 151, 152, 179, 181, 184, 185, 187, 214, 216, 217, 218, 220, 221], "rather": [28, 56, 215, 216, 220], "do": [28, 31, 34, 35, 45, 50, 56, 63, 88, 89, 94, 102, 116, 157, 158, 184, 215], "sampl": [28, 56, 88, 91, 98, 101, 108, 160, 162, 183, 197, 202], "seen": [28, 56, 89, 91, 99, 101], "correspond": [28, 31, 32, 33, 34, 35, 49, 50, 53, 56, 58, 61, 86, 87, 88, 91, 92, 94, 101, 102, 108, 109, 110, 112, 119, 127, 128, 137, 143, 160, 161, 180, 181, 183, 184, 187], "either": [28, 31, 32, 34, 35, 53, 56, 59, 94, 98, 103, 112, 161, 165, 180, 181, 182, 184, 185, 187, 220], "ignor": [28, 56, 57, 59, 60, 98, 102, 119, 220], "bf": [28, 56, 76, 220], "travers": [28, 29, 30, 56, 76, 149, 179, 183, 197, 202, 220], "need": [28, 45, 56, 63, 77, 89, 145, 146, 147, 177, 180, 181, 182, 183, 184, 185, 187, 214, 216], "consid": [28, 52, 54, 56, 59, 78, 87, 88, 111, 177, 185, 215, 220], "int": [28, 30, 31, 32, 34, 35, 45, 49, 50, 54, 56, 64, 65, 66, 85, 86, 92, 93, 94, 95, 98, 102, 103, 105, 111, 112, 161, 162, 167, 181, 186], "estim": [28, 49, 56, 86, 181], "higher": [28, 47, 55, 56, 96, 97, 98, 183, 217], "give": [28, 51, 52, 54, 56, 76, 77, 87, 105, 111, 177], "better": [28, 31, 34, 35, 50, 56, 94, 102, 175, 184, 216, 220], "approxim": [28, 31, 34, 35, 49, 50, 56, 77, 86, 94, 102, 181, 184], "content": [28, 29, 30, 56, 111], "obtain": [28, 56], "defin": [28, 31, 34, 56, 87, 89, 91, 93, 94, 95, 99, 101, 106, 108, 119, 133, 167, 182], "assourc": 28, "insid": [28, 56], "__2": 28, "__": 28, "__1": 28, "ensur": [28, 50, 51, 52, 56, 102, 179, 181, 184, 185, 187], "scale": [28, 56, 77, 85, 198, 214, 215, 216], "highest": [28, 56], "possibl": [28, 56, 216], "cross": [28, 56], "everi": [28, 35, 56, 88, 94, 102, 182, 184, 215], "Not": [28, 56], "random": [28, 50, 56, 85, 91, 98, 101, 102, 103, 108, 160, 183, 184, 197, 198], "gener": [28, 32, 48, 56, 59, 61, 88, 112, 120, 123, 161, 183, 186, 187, 197, 198, 202, 217, 218, 220, 221], "behavior": [28, 50, 56, 89, 102, 217], "system": [28, 56, 93, 95], "time": [28, 31, 34, 35, 50, 51, 52, 56, 94, 95, 102, 179, 181, 184, 185, 187, 220], "np": [28, 56, 93, 95, 98, 149, 186, 187], "dictionari": [28, 31, 32, 33, 53, 55, 56, 88, 94, 112, 161, 162, 220], "might": [28, 56, 59, 60], "ascend": [28, 56], "bc": [28, 56], "depth_limit": [29, 30, 51, 179], "i_start": 29, "return_predecessor": [29, 104, 111], "find": [29, 30, 32, 42, 50, 51, 93, 95, 102, 105, 109, 110, 112, 157, 158, 161, 184, 215, 217], "predecessor": [29, 30, 51, 52, 76, 111, 179, 185, 220], "breadth": [29, 30, 51, 179, 197, 216, 220], "first": [29, 30, 51, 57, 85, 89, 90, 91, 95, 99, 101, 106, 107, 108, 133, 179, 180, 181, 183, 184, 185, 197, 216, 220], "wa": [29, 46, 50, 51, 52, 76, 93, 95, 98, 102, 111, 160, 216], "begin": [29, 51], "compon": [29, 32, 51, 88, 112, 161, 186, 187, 197, 202, 220], "onli": [29, 32, 33, 47, 48, 51, 56, 57, 63, 64, 66, 67, 73, 74, 75, 76, 77, 85, 87, 88, 92, 93, 95, 96, 97, 98, 103, 111, 112, 133, 146, 149, 150, 151, 152, 159, 161, 165, 175, 179, 182, 186, 220], "per": [29, 45, 50, 51, 52, 148, 160, 164, 198, 220], "allow": [29, 51, 62, 74, 77, 150, 151, 152, 174, 175, 177, 179, 215, 216, 220, 221], "limit": [29, 30, 31, 34, 35, 50, 51, 94, 102, 179, 184, 216], "depth": [29, 30, 51, 98, 103, 162, 179], "search": [29, 30, 51, 179, 197, 220, 221], "ident": [29, 89, 90, 99, 106, 107, 127, 128, 137, 143], "compat": [29, 55, 57, 59, 60, 79, 90, 100, 102, 104, 107, 112, 141, 161, 214], "non": [29, 31, 32, 34, 35, 45, 50, 88, 89, 94, 102, 112, 161, 184, 215], "eg": [29, 32, 63, 74, 112, 161], "rais": [29, 32, 112, 161, 164], "typeerror": [29, 32, 112, 161], "otherwis": [29, 46, 62, 65, 66, 98, 116, 176, 178, 183], "th": [29, 30, 31, 34, 76, 87], "posit": [29, 30, 77, 98], "immedi": [29, 30], "preced": [29, 30, 185], "equival": [29, 30, 111], "describ": [29, 30, 47, 59, 60, 96, 97, 111, 216], "abov": [29, 30, 77, 111, 186, 216, 220], "tupl": [29, 30, 38, 61, 103, 111, 162, 179, 180, 181, 183, 184, 185, 187], "ndarrai": [29, 30, 32, 111, 112, 161], "reconstruct": [29, 30, 111, 160], "return_sp_count": [29, 30], "3": [29, 30, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 93, 95, 98, 103, 149, 162, 180, 183, 184, 185, 186, 215, 220], "plu": [29, 30, 69], "sp_counter": [29, 30], "lead": [29, 30, 31, 34, 35, 47, 50, 94, 96, 97, 102, 184], "revers": [30, 94], "sort_neighbor": 30, "process": [30, 45, 88, 148, 159, 220], "max_it": [31, 34, 35, 47, 49, 50, 77, 86, 94, 96, 97, 102, 125, 181, 220], "100": [31, 34, 35, 47, 49, 50, 54, 77, 86, 87, 89, 94, 96, 97, 102, 109, 110, 181, 184, 220], "tol": [31, 34, 35, 49, 50, 86, 94, 102, 125, 181, 198], "1e": [31, 34, 35, 49, 50, 54, 86, 87, 94, 102, 109, 110, 180, 198], "06": [31, 34, 35, 94], "eigenvector": [31, 34, 102, 109, 110, 180, 184, 197, 217], "its": [31, 34, 88, 92, 95, 162, 215, 216], "vector": [31, 34, 59, 60], "x": [31, 34, 77], "equat": [31, 34], "maximum": [31, 34, 35, 47, 49, 50, 52, 77, 86, 94, 96, 97, 98, 102, 103, 109, 110, 111, 157, 180, 181, 182, 183, 184, 185, 197, 220], "iter": [31, 34, 35, 47, 49, 50, 77, 86, 89, 94, 95, 96, 97, 102, 109, 110, 127, 128, 137, 143, 180, 181, 182, 184, 220], "befor": [31, 34, 35, 49, 50, 71, 72, 76, 86, 94, 102, 133, 181, 184, 220], "answer": [31, 34, 35, 49, 50, 86, 94, 102, 181, 184, 216], "execut": [31, 34, 35, 50, 54, 87, 94, 95, 102, 184, 220], "earli": [31, 34, 35, 47, 50, 94, 96, 97, 102, 184, 216], "exit": [31, 34, 35, 50, 94, 102, 184], "solver": [31, 34, 35, 50, 94, 102, 109, 110, 184], "reach": [31, 34, 35, 50, 51, 52, 76, 94, 102, 111, 184], "converg": [31, 34, 35, 50, 77, 94, 102, 180, 182, 184], "toler": [31, 34, 35, 49, 50, 86, 94, 102, 109, 110, 180, 181, 182, 184], "6": [31, 34, 35, 54, 60, 63, 67, 68, 71, 72, 73, 74, 87, 94, 180, 184], "small": [31, 34, 35, 49, 50, 86, 89, 94, 102, 181, 184, 217], "magnitud": [31, 34, 35, 49, 50, 86, 94, 102, 181, 184, 220], "lower": [31, 34, 35, 47, 50, 77, 85, 94, 96, 97, 98, 102, 109, 110, 183, 184], "0f": [31, 34, 35, 50, 94, 102, 184], "0e": [31, 34, 35, 49, 50, 86, 94, 102, 125, 181, 184], "too": [31, 34, 35, 50, 94, 102, 184], "due": [31, 34, 35, 50, 94, 102, 184], "numer": [31, 34, 35, 50, 94, 102, 184, 216], "roundoff": [31, 34, 35, 50, 94, 102, 184], "usual": [31, 34, 35, 50, 55, 94, 102, 164, 184, 216], "accept": [31, 34, 35, 50, 94, 102, 184, 220], "ec": [31, 34], "weak": [32, 161], "return_label": [32, 112, 161], "strongli": [32, 88, 112, 186, 220], "weakli": [32, 48, 95, 161, 187, 220], "attach": [32, 48, 112, 161, 186, 187], "alreadi": [32, 47, 48, 49, 55, 86, 89, 90, 91, 96, 97, 99, 101, 102, 106, 107, 108, 112, 161], "fit": [32, 112, 161, 198], "32b": [32, 112, 161], "move": [32, 112, 161], "j": [32, 47, 54, 94, 95, 96, 97, 98, 112, 161, 214, 217], "along": [32, 49, 77, 86, 112, 150, 152, 161], "csgraph": [32, 112, 161], "progress": [32, 112, 161, 220], "strong": [32, 77, 112], "python": [32, 33, 55, 59, 60, 73, 74, 112, 161, 171, 175, 198, 215, 216, 221], "shape": [32, 112, 161], "num": [32, 112, 161], "degree_typ": [33, 92], "bidirect": [33, 92], "core": [33, 80, 92, 197, 202, 217, 220], "maxim": [33, 92, 93, 95, 110], "degre": [33, 35, 53, 85, 92, 94, 137, 143, 160, 197], "belong": 33, "self": [33, 77, 85, 92, 123, 136, 215], "loop": [33, 85, 92, 136, 169, 170], "parallel": [33, 45, 92, 157, 158, 198, 217], "while": [33, 77, 92, 98, 183, 215, 220], "thei": [33, 77, 88, 92, 93, 95], "don": [33, 92], "t": [33, 59, 60, 92, 162, 214, 217], "particip": [33, 92], "calcul": [33, 35, 36, 92, 94], "determin": [33, 54, 55, 87, 92, 177], "valid": [33, 45, 92, 214], "being": [33, 59, 60, 64, 77, 92, 162, 164, 178, 216, 220], "incom": [33, 49, 86, 92, 181], "outgo": [33, 49, 50, 86, 92, 98, 102, 103, 181, 183, 184], "respect": [33, 92, 181, 187], "input_graph": [34, 35, 47, 48, 49, 50, 51, 52, 55, 77, 89, 91, 99, 101, 106, 108], "dcg": [34, 35, 36, 48, 49, 50, 51, 52, 151], "init": [34, 35, 48, 49, 50, 51, 52, 151], "see": [34, 35, 48, 49, 50, 51, 52, 55, 90, 100, 104, 107, 162, 175, 220], "doc": [34, 35, 48, 49, 50, 51, 52], "rapid": [34, 35, 48, 49, 50, 51, 52, 79, 198, 216, 217, 220, 221], "ai": [34, 35, 48, 49, 50, 51, 52, 214, 217], "stabl": [34, 35, 48, 49, 50, 51, 52], "html": [34, 35, 48, 49, 50, 51, 52], "chunksiz": [34, 35, 36, 48, 49, 50, 51, 52, 151, 198], "get_chunks": [34, 35, 48, 49, 50, 51, 52, 151, 198], "ddf": [34, 35, 47, 48, 49, 50, 51, 52, 151, 159], "src": [34, 35, 48, 49, 50, 51, 52, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 88, 146, 150, 151, 156, 162, 179, 180, 183, 184, 185, 187, 198], "dst": [34, 35, 48, 49, 50, 51, 52, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 88, 146, 150, 151, 156, 162, 179, 180, 183, 184, 185, 187, 198], "dg": [34, 35, 48, 49, 50, 51, 52, 148], "alpha": [35, 50, 94, 102, 125, 182, 184], "beta": [35, 94, 182, 220], "nstart": [35, 49, 50, 86, 94, 102], "katz": [35, 94, 182, 197, 217, 220], "attenu": [35, 94, 182], "factor": [35, 45, 50, 85, 94, 98, 102, 182, 183, 184, 216], "degree_max": [35, 94], "out": [35, 50, 75, 88, 92, 94, 98, 102, 127, 128, 137, 143, 149, 160, 183, 198, 220], "alpha_max": [35, 94], "lambda_max": [35, 94], "largest": [35, 94, 215], "eigenvalu": [35, 94, 182], "sinc": [35, 94, 146, 215, 216, 220], "lesser": [35, 94], "equal": [35, 36, 45, 50, 94, 102, 109, 110, 184], "greater": [35, 50, 94, 102, 109, 184], "never": [35, 94], "exce": [35, 94], "thu": [35, 50, 77, 94, 102, 184], "turn": [35, 88, 94, 216], "fulfil": [35, 94], "scalar": [35, 94], "guess": [35, 49, 50, 86, 94, 102, 181, 184], "pr": [35, 50, 102, 125], "input_path": 36, "appropri": [36, 178], "get": [36, 67, 89, 140, 142, 162, 198, 218, 221], "netscienc": [36, 157, 158, 217], "shut": 37, "down": [37, 216], "clean": [37, 45, 198, 214, 220], "up": [37, 45, 61, 198], "resourc": [37, 45, 179, 180, 181, 182, 183, 184, 185, 187, 198], "2d": [38, 45, 148], "prow": [38, 45, 148], "pcol": [38, 45, 148], "partition_typ": [38, 45], "raft": [39, 45], "instanc": [39, 44, 51, 59, 60, 61, 62, 63, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 99, 101, 105, 106, 107, 108, 162, 164, 168, 177], "handl": [40, 41, 45, 176, 179, 180, 181, 182, 183, 184, 185, 187], "nccl": [40, 45], "sid": [41, 43], "worker": [41, 42, 43, 44, 45, 54, 87, 179], "sessionst": [41, 42], "sessionid": [42, 43], "p2p": [45, 198], "commun": [45, 96, 97, 197, 202, 217], "right": 45, "after": [45, 47, 77, 96, 97, 162], "client": [45, 198, 202, 221], "run": [45, 51, 52, 55, 61, 98, 103, 165, 167, 169, 170, 179, 180, 181, 182, 183, 184, 185, 187, 198, 214, 215, 216, 220], "manag": [45, 164, 179, 216], "underli": [45, 180, 181, 182, 183, 184, 185, 187], "ucx": 45, "across": [45, 85, 89, 198], "recommend": 45, "also": [45, 52, 88, 111, 151, 152, 157, 162, 198, 215, 216, 220], "destroi": [45, 198], "when": [45, 47, 54, 56, 59, 60, 63, 69, 77, 87, 88, 89, 96, 97, 102, 157, 158, 182, 184, 216], "longer": 45, "so": [45, 77, 89, 94, 151, 152, 216, 220], "pre": 45, "mnmg": 45, "total": [45, 65, 66, 127, 216, 220], "ani": [45, 50, 91, 101, 102, 108, 123, 149, 151, 152, 216, 220], "p": [45, 95, 98, 148, 183, 217], "dask_cuda": [45, 198], "localcudaclust": [45, 198], "work": [45, 54, 87, 116, 149, 215, 216, 220], "here": [45, 55, 57, 102, 175, 177, 214], "done": [45, 95, 160, 215, 216], "close": [45, 54, 87, 198], "resolut": [47, 96, 97], "optim": [47, 50, 96, 97, 102, 184], "vd": [47, 97, 217], "blondel": [47, 97, 217], "l": [47, 94, 95, 96, 97, 217], "guillaum": [47, 97, 217], "r": [47, 85, 97, 214, 217], "lambiott": [47, 97, 217], "lefebvr": [47, 97, 217], "fast": [47, 95, 97, 217], "unfold": [47, 97, 217], "hierarchi": [47, 97, 217], "larg": [47, 88, 89, 97, 214, 217], "network": [47, 77, 95, 97, 98, 102, 184, 216, 217, 220], "stat": [47, 97, 217], "mech": [47, 97, 217], "p10008": [47, 97, 217], "2008": [47, 95, 97, 217], "arxiv": [47, 55, 97, 98], "org": [47, 55, 94, 95, 97, 98, 217], "ab": [47, 55, 97, 98], "0803": [47, 97], "0476": [47, 97], "control": [47, 77, 85, 96, 97], "level": [47, 77, 96, 97, 160], "termin": [47, 77, 96, 97], "No": [47, 77, 96, 97, 181], "occur": [47, 77, 85, 96, 97], "manner": [47, 77, 96, 97], "gamma": [47, 96, 97], "formula": [47, 96, 97], "chang": [47, 54, 96, 97, 215, 216, 220], "smaller": [47, 96, 97, 99, 101, 151, 152, 182], "fewer": [47, 96, 97], "larger": [47, 55, 96, 97, 198, 220], "part": [47, 55, 85, 89, 93, 95, 96, 97, 213, 215, 220], "modularity_scor": [47, 96, 97], "global": [47, 96, 97], "wcc": 48, "05": [49, 50, 55, 86, 102, 109, 110, 125, 198], "hub": [49, 77, 86, 181], "author": [49, 86, 181], "link": [49, 86, 162, 181, 197, 202, 221], "norm": [49, 86], "flag": [49, 85, 86, 160, 180, 182, 215], "hubsandauthor": [49, 86], "three": [49, 56, 77, 86, 150, 159], "50": [49, 77, 86], "85": [50, 102, 125, 184, 217], "person": [50, 102, 220], "precomputed_vertex_out_weight": [50, 102, 184], "multipl": [50, 57, 63, 69, 74, 79, 85, 88, 91, 101, 108, 150, 151, 152, 162, 176, 198, 216], "power": [50, 102, 184, 216], "damp": [50, 102, 184], "probabl": [50, 85, 102, 184], "follow": [50, 79, 80, 89, 102, 162, 184, 215, 220], "standard": [50, 102, 184], "teleport": [50, 102, 184], "strictli": [50, 102, 184], "subset": [50, 74, 102, 184, 215], "precomput": [50, 92, 102, 184], "sum": [50, 52, 102, 111, 184, 185], "01": [50, 102, 184], "00001": [50, 102, 109, 110, 184], "from_": [50, 102], "_edgelist": [50, 102], "assum": [50, 66, 102], "contigu": [50, 71, 72, 102, 164], "actual": [50, 89, 102, 149], "gap": [50, 102], "zero": [50, 54, 87, 89, 102, 149, 186], "miss": [50, 102], "desir": [50, 93, 95, 102, 151, 152], "return_dist": 51, "check_start": 51, "extens": [51, 52, 177, 179, 181, 184, 185, 187], "test": [51, 52, 69, 179, 181, 184, 185, 187], "validit": [51, 52, 179, 181, 184, 185, 187], "expens": [51, 52, 63, 179, 180, 181, 182, 184, 185, 187], "increas": [51, 52, 102, 179, 181, 184, 185, 187], "cutoff": [52, 111, 185], "check_sourc": 52, "unreach": [52, 76, 111, 185], "infin": [52, 111, 185], "denot": [52, 111, 155, 185], "dc": 53, "cost": [54, 87], "num_row": 54, "num_column": 54, "epsilon": [54, 87, 180, 182, 184], "hungarian": [54, 197, 217], "against": [54, 74, 87, 214, 216], "dens": [54, 89], "unstabl": 54, "subject": 54, "lowest": [54, 87], "exactli": [54, 87], "job": [54, 87], "major": [54, 215], "task": 54, "enough": [54, 87, 89], "code": [54, 87, 151, 152, 177, 214, 215, 220], "unus": [54, 87, 120], "overal": [54, 63, 87, 215], "util": [54, 87, 216], "create_random_bipartit": [54, 87], "costs_flatten": 54, "flatten": 54, "min_weight": 55, "ensemble_s": 55, "16": [55, 220], "ensembl": [55, 197, 220], "truncat": 55, "louvain": [55, 96, 197, 214, 217, 220], "permut": 55, "final": 55, "found": [55, 88], "full": 55, "1809": 55, "05578": 55, "further": [55, 98, 183], "minimum": [55, 57, 158, 197], "edgeweight": 55, "left": [55, 179], "mai": [55, 59, 60, 63, 146], "produc": [55, 216], "qualiti": [55, 77], "some": [55, 88, 151, 152, 162], "over": [56, 57, 93, 157, 158, 216], "automat": [56, 59, 175, 198], "switch": [56, 77, 216], "differ": [56, 89, 91, 101, 108, 146], "transform": [56, 88], "taken": 57, "g_ego": 57, "span": [57, 157, 158, 197, 216], "tree": [57, 197, 202], "forest": [57, 157, 158], "arg": [58, 75, 165, 169, 170, 174], "kwarg": [58, 75, 165, 166, 169, 170, 174, 178], "construct": [58, 63, 73, 74, 85, 89, 106, 162, 164, 168, 175, 220], "individu": 58, "select": [58, 63, 68, 73, 74, 75, 88, 214], "later": [58, 216], "annot": 58, "edge_id_col_nam": [59, 70, 71], "type_nam": [59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74], "property_column": [59, 60], "vector_properti": [59, 60], "interfac": [59, 60, 186, 187, 216], "unspecifi": 59, "about": [59, 60, 63, 88, 162], "transact": [59, 217], "dict": [59, 60, 88, 102, 162], "won": [59, 60], "them": [59, 60, 95, 150, 151, 152], "edge_vector_property_to_arrai": 59, "often": [59, 60], "conveni": [59, 60], "instead": [59, 60, 85, 88, 149, 150, 151, 152, 179], "some_properti": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "99": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "22": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 214], "98": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "34": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "b": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 85, 198, 214, 217], "97": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74], "56": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74], "96": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "88": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "d": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 214, 217], "pg": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "get_num_vertic": [59, 65, 176], "8": [59, 60, 63, 66, 67, 71, 72, 73, 74, 98, 217], "addit": [60, 61, 69, 116], "associ": [60, 150, 151, 152, 217], "vertex_vector_property_to_arrai": 60, "add_edge_data": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 162], "etyp": [60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 162], "vert_df": [60, 63, 67, 73, 74], "vert_id": [60, 63, 67, 72, 73, 74], "v_prop": [60, 63, 67, 72, 73, 74], "4": [60, 63, 65, 67, 68, 71, 72, 73, 74, 89, 93, 95, 162, 186, 187, 198, 214, 217], "7": [60, 63, 67, 68, 70, 71, 72, 73, 74, 94, 186, 217], "vtype": [60, 63, 67, 73, 74], "get_vertex_data": 60, "sort_index": [60, 61, 64, 67], "axi": [60, 61, 64, 67], "_type_": [60, 61, 63, 64, 67, 73, 74], "_vertex_": [60, 67], "edge_vertex_col_nam": 61, "those": [61, 88, 89, 106, 127, 128, 137, 143, 216, 220], "subclass": [61, 62], "been": [61, 63, 216], "prior": [61, 63, 74, 151, 152], "extract_subgraph": [61, 73, 74, 75], "meta": [61, 63], "look": 61, "correct": [61, 151, 152, 175, 179], "create_us": [61, 62, 63, 73, 78, 79, 80, 81, 82, 83, 84, 85, 198], "algo_result": 61, "len": [61, 91, 101, 108, 186, 187], "algo_result2": 61, "print": [61, 63, 73, 74, 77, 186, 187], "_edge_id_": [61, 64], "edge_prop_df": 62, "edge_weight_properti": [62, 63], "default_edge_weight": [62, 63], "check_multi_edg": [62, 63], "renumber_graph": [62, 63, 73, 164], "conain": 62, "na": [62, 103], "prevent": [62, 77, 215], "duplic": [62, 63, 69, 85, 91, 101, 108, 150, 151, 152], "maintain": [62, 215], "relev": [63, 182], "propertyselect": [63, 68, 73, 74], "select_vertic": [63, 68], "select_edg": [63, 68], "could": [63, 146, 215, 216], "whose": [63, 169], "field": [63, 175, 216], "verifi": 63, "form": [63, 162, 179], "manual": 63, "algo": [63, 178], "extract": [63, 75, 93, 95, 197, 220], "futur": 63, "annotate_datafram": 63, "appli": [63, 116], "add_vertex_data": [63, 67, 72, 73, 74], "edge_id": [64, 70, 71], "collect": [64, 67, 116, 119, 124, 216], "_dst_": 64, "_src_": 64, "include_edge_data": 66, "were": 66, "constrain": 66, "get_num_edg": [66, 176], "vertex_id": [67, 124], "slice": 67, "uniqu": [68, 88, 116, 123, 124, 179], "int64": [68, 162], "classmethod": [69, 70], "get_edge_data": [69, 70], "11": [70, 71, 93, 95], "prev_id_column": [71, 72], "save": [71, 72, 88], "stop": [71, 72, 179], "inclus": [71, 72], "df2": [71, 215], "95": 71, "24": 71, "94": 71, "36": 71, "93": 71, "etype1": 71, "etype2": 71, "vert_df1": 72, "vtype1": 72, "vert_df2": 72, "vtype2": 72, "expr": [73, 74], "evalu": [73, 74], "express": [73, 74], "criteria": 73, "oper": [73, 74, 95, 179, 180, 181, 182, 184, 185, 215], "specif": [73, 74, 75, 93, 95, 119, 162, 168], "from_previous_select": 74, "intersect": [74, 89, 91, 99, 101, 106, 108], "number_of_vertic": [74, 141, 171], "propertygraph": [75, 162, 164], "select_": 75, "vertex_selection_seri": 75, "edge_selection_seri": 75, "sssp": [76, 104, 105, 220], "filter": [76, 127, 128, 137, 143], "reachabl": 76, "500": [77, 102, 125, 184], "pos_list": 77, "outbound_attraction_distribut": 77, "lin_log_mod": 77, "prevent_overlap": 77, "edge_weight_influ": 77, "jitter_toler": 77, "barnes_hut_optim": 77, "barnes_hut_theta": 77, "scaling_ratio": 77, "strong_gravity_mod": 77, "graviti": 77, "verbos": 77, "callback": 77, "forceatlas2": 77, "continu": 77, "layout": [77, 197, 202], "handi": 77, "visual": [77, 214], "peak": 77, "memori": [77, 88, 89, 198, 214, 215, 216], "alloc": [77, 168, 220], "30": [77, 198, 217], "forc": [77, 197, 220], "atla": [77, 197, 220], "good": [77, 216], "short": 77, "term": [77, 216], "achiev": [77, 220], "1000": [77, 162, 180, 220], "discourag": 77, "y": 77, "attract": 77, "outbound": 77, "less": [77, 98, 183], "push": 77, "border": 77, "model": [77, 214, 215, 217, 220], "lin": 77, "log": 77, "make": [77, 88, 98, 103, 183, 198, 214, 215, 216], "tight": 77, "overlap": [77, 100, 101, 197, 214, 220], "how": [77, 177, 218, 220, 221], "much": 77, "influenc": 77, "swing": 77, "speed": [77, 216], "barn": 77, "hut": 77, "slower": 77, "exact": 77, "version": [77, 79, 94, 162, 164, 166, 178, 182, 198, 214], "tradeoff": 77, "accuraci": 77, "repuls": 77, "want": [77, 198], "regular": 77, "linlog": 77, "readjust": 77, "distant": 77, "sometim": [77, 220], "domin": 77, "island": 77, "drift": 77, "awai": 77, "info": 77, "inter": 77, "graphbaseddimredcallback": 77, "intercept": 77, "state": [77, 177, 214], "train": [77, 214], "usag": [77, 162], "customcallback": 77, "def": 77, "on_preprocess_end": 77, "copy_to_host": 77, "on_epoch_end": 77, "on_train_end": 77, "po": 77, "structur": [78, 79, 80, 81, 82, 83, 84, 85, 88, 150, 151, 152, 162, 216, 217, 220], "graph_class": [78, 79, 80, 81, 82, 83, 84, 85, 88], "csr": [78, 186, 187], "representaion": [79, 80], "from_pandas_edge_list": 79, "But": [79, 89, 220], "target": [79, 80, 88, 105], "terminologi": [79, 80], "num_edg": [85, 162, 186, 198], "clip_and_flip": [85, 198], "scramble_vertex_id": [85, 198], "mg": [85, 103, 165, 177, 178, 197, 202], "recurs": 85, "mat": 85, "second": [85, 89, 90, 91, 99, 101, 106, 107, 108, 133, 180, 181, 183, 184, 185], "thrid": 85, "triangular": [85, 89, 146], "diagon": [85, 89], "scrambl": 85, "bit": 85, "break": [85, 216], "correl": 85, "benchmark": [85, 214], "raw": 85, "potenti": [85, 177], "edgefactor": 85, "57": [85, 217], "19": 85, "42": 85, "symmetr": [87, 146, 151, 152, 179, 197], "As": 87, "disjoint": 87, "variabl": 87, "reflect": 87, "particular": [87, 168, 214, 215], "In": [87, 89, 91, 95, 98, 99, 101, 103, 214, 216, 217, 220], "implicitli": 87, "dropna": 88, "categori": 88, "drop_edge_attr": 88, "categorical_metadata": 88, "delim": 88, "nodeid": 88, "node_id": 88, "eventid": 88, "event_id": 88, "attribid": 88, "attrib_id": 88, "nodetyp": 88, "node_typ": 88, "edgetyp": 88, "edge_typ": [88, 162, 171], "reveal": 88, "relationship": [88, 216], "event": [88, 169, 170], "dimension": 88, "entri": 88, "anoth": [88, 216], "distinct": 88, "metadata": 88, "common": 88, "transit": 88, "convers": [88, 174, 197], "best": [88, 216, 220], "categor": 88, "group": [88, 93, 95, 217], "kind": 88, "sequenc": [88, 215], "null": 88, "omit": 88, "hypernod": 88, "appear": [88, 151, 152], "exclud": [88, 89], "categoricaldtyp": 88, "These": 88, "typic": [88, 95, 220], "low": 88, "cardin": 88, "signific": 88, "amount": [88, 95, 220], "join": 88, "entiti": 88, "hyper": 88, "vertex_pair": [89, 90, 91, 99, 101, 106, 107, 108], "similar": [89, 91, 99, 101, 108, 214], "arbitrari": [89, 91, 99, 101, 106, 108], "volum": [89, 91, 99, 101, 106, 108], "divid": [89, 91, 99, 101, 106, 108, 148], "union": [89, 91, 162, 174, 175], "context": [89, 91, 99, 101], "neighborhood": [89, 91, 99, 101, 160], "strength": [89, 91, 99, 101], "rel": [89, 90, 91, 99, 101, 106, 107, 108, 127, 128, 137, 143], "vice": [89, 91, 99, 101, 106], "versa": [89, 91, 99, 101, 106], "except": [89, 91, 99, 101, 106, 175], "thrown": [89, 91, 99, 101, 106, 175], "jaccard_coeffici": 89, "absenc": [89, 106], "coeffici": [89, 90, 91, 99, 101, 106, 107, 108, 197, 214, 220], "upper": [89, 146], "well": [89, 96, 216, 217], "directli": [89, 177], "technic": [89, 95, 217], "lazi": 89, "dereferenc": 89, "feasibl": 89, "000": 89, "would": [89, 183, 198, 215], "9": [89, 96, 127, 128, 137, 143, 186, 217], "billion": [89, 216], "your": [89, 198, 214, 220], "patienc": 89, "interest": [89, 214], "solut": [89, 95, 198, 216], "get_two_hop_neighbor": 89, "rememb": 89, "fill": 89, "entir": [89, 127, 128, 137, 143, 159], "request": [89, 168, 176, 179], "ll": 89, "consist": [89, 90, 91, 99, 101, 103, 106, 107, 108, 216], "jaccard_coeff": [89, 90, 91], "ebunch": [90, 100, 107], "jaccard": [90, 91, 197, 214, 220], "10": [91, 94, 95, 96, 101, 108, 179, 215, 217], "avoid": [91, 101, 108, 220], "drop_dupl": [91, 101, 108], "reset": [91, 101, 108], "reset_index": [91, 101, 108], "inplac": [91, 101, 108, 215], "w": [91, 101, 108], "core_numb": 92, "neg": [92, 111, 179, 185], "main": [92, 215], "kcoregraph": 92, "truss": [93, 95, 197, 217, 220], "avail": [93, 95, 176, 198], "cuda": [93, 95, 162, 198, 214, 216], "least": [93, 95, 179], "triangl": [93, 95, 146, 159, 197, 217, 220], "tighlti": [93, 95], "knit": [93, 95], "relax": [93, 94, 95, 182], "cliqu": [93, 95], "computation": [93, 95], "demand": [93, 95], "known": [93, 95, 216], "hard": [93, 95], "g_truss": [93, 95], "NOT": 93, "k_subgraph": [93, 95], "foster": [94, 182, 217], "reduc": [94, 182, 220], "complex": [94, 182, 216], "o": [94, 95, 182, 214, 217], "On": [94, 217], "opposit": 94, "flip": 94, "muth": [94, 217], "q": [94, 98, 183, 217], "potterat": [94, 217], "et": [94, 95, 217], "al": [94, 95, 217], "mathemat": [94, 216, 217], "organ": [94, 217], "theori": [94, 216, 217], "2001": [94, 217], "275": [94, 217], "doi": [94, 95, 96, 217], "1023": 94, "1013470632383": 94, "1953": [94, 217], "statu": [94, 214, 217], "deriv": [94, 174, 217], "sociometr": [94, 217], "analysi": [94, 95, 197, 202, 214, 216, 217, 220], "psychometrika": [94, 217], "18": [94, 217], "39": [94, 217], "43": [94, 217], "kc": 94, "use_weight": 95, "contrast": 95, "tractabl": 95, "build": 95, "block": [95, 220], "polnymomi": 95, "take": [95, 150, 151, 152], "mani": [95, 214, 216], "monoton": 95, "shrink": [95, 217], "fairli": 95, "reason": [95, 215], "shown": 95, "cohen": [95, 217], "cohes": [95, 217], "social": [95, 216, 217], "nation": [95, 217], "secur": [95, 217], "agenc": [95, 217], "report": [95, 96, 217], "green": [95, 214, 217], "fox": [95, 217], "kim": [95, 217], "f": [95, 186, 187, 217], "busato": [95, 217], "quickli": [95, 217], "haystack": [95, 217], "ieee": [95, 214, 217], "extrem": [95, 214, 217], "confer": [95, 98, 217], "hpec": [95, 214, 217], "2017": [95, 217], "1109": [95, 217], "8091038": [95, 217], "yalamanchili": [95, 217], "munguia": [95, 217], "irregular": [95, 217], "applic": [95, 216, 217], "architectur": [95, 216], "ia3": [95, 217], "2014": [95, 217], "traag": [96, 217], "waltman": [96, 217], "van": [96, 217], "eck": [96, 217], "2019": [96, 217], "scientif": [96, 217], "5233": 96, "1038": 96, "s41598": 96, "019": 96, "41695": 96, "z": 96, "start_vertic": [98, 103, 133], "max_depth": [98, 103, 183], "compress_result": [98, 183], "walk": [98, 103, 183, 197, 214], "under": [98, 183, 213], "framework": [98, 162, 216], "coalesc": [98, 103], "pad": [98, 103, 183], "likelihood": [98, 183], "backtrack": [98, 183], "previou": [98, 185], "previous": [98, 183], "visit": [98, 183], "local": [98, 183, 217], "closer": [98, 183], "likeli": [98, 183], "vertex_path": [98, 103], "edge_weight_path": [98, 103], "grover": 98, "leskovec": [98, 217], "scalabl": 98, "featur": [98, 162, 198, 214, 217], "learn": [98, 214, 216], "proceed": [98, 214, 217], "22nd": 98, "acm": [98, 214, 217], "sigkdd": [98, 214, 217], "knowledg": [98, 214, 217], "discoveri": [98, 214, 217], "mine": [98, 214, 217], "1607": 98, "00653": 98, "path_siz": 98, "overlap_coeff": [99, 101], "dangl": 102, "depend": [102, 105, 184], "itself": [102, 184], "descreas": [102, 184], "toward": [102, 184], "free": 102, "random_walks_typ": 103, "uniform": 103, "use_pad": 103, "legacy_result_typ": 103, "fixm": [103, 181], "sg": [103, 149, 165, 177, 178, 179], "bias": 103, "node2vec": [103, 176, 197], "max_path_length": 103, "length": [103, 159], "get_edgelist": 103, "_": [103, 215], "overwrit": [104, 111], "alia": [104, 141], "detail": 104, "coo": [105, 150, 151, 152], "twice": [106, 108], "sorensen_coeff": [106, 107, 108], "sorensen": [107, 108, 197], "num_clust": [109, 110], "num_eigen_vect": [109, 110], "evs_toler": [109, 110], "evs_max_it": [109, 110], "kmean_toler": [109, 110], "kmean_max_it": [109, 110], "spectral": [109, 110, 197, 220], "balanc": 109, "eigensolv": [109, 110], "mean": [109, 110, 177, 186, 215], "cycl": [111, 159, 185], "renumber_id_typ": 113, "unrenumbered_id_typ": 113, "multigpu": 113, "singlegpu": 113, "renumber_and_seg": 113, "vertex_column_s": 113, "id_column_nam": 116, "col_nam": [116, 124], "combin": 116, "static": [117, 118, 120, 121, 122, 216], "helper": [117, 118, 120, 197, 198, 202], "external_column": 119, "start_with_nam": 120, "col": [120, 187], "src_col_nam": [121, 122], "dst_col_nam": [121, 122], "src_col_names_to_replac": 123, "dst_col_names_to_replac": 123, "all_col_nam": 123, "renumbered_src_col_nam": [123, 125], "renumbered_dst_col_nam": [123, 125], "collid": 123, "matter": 124, "add_internal_vertex_id": 124, "ourder": 125, "number_map": 125, "pagerank": [125, 176, 197, 198, 214, 215, 217, 220], "vertex_subset": [127, 128, 137, 143], "incid": [127, 149], "displai": [127, 128, 137, 143, 145, 146, 147], "all_df": 127, "subset_df": 127, "12": [127, 128, 137, 143, 217], "in_degre": 128, "out_degre": 128, "delet": [129, 130], "view_edge_list": 131, "apart": 133, "directed_edg": 140, "trianglar": 146, "networx": 146, "henc": 146, "swap": 146, "cusd": 146, "ngpu": 148, "rectangular": 148, "simpli": [149, 215, 216, 220], "pull": 149, "vert": 149, "svert": 149, "source_col_nam": 150, "dest_col_nam": 150, "value_col_nam": 150, "dest": 150, "di": [150, 151, 152], "val": [150, 173, 175, 215], "src_name": [151, 152], "dst_name": [151, 152], "weight_nam": [151, 152], "replic": [151, 152], "That": [151, 152, 220], "data1": [151, 152], "data2": [151, 152], "arbitrarili": [151, 152], "pick": [151, 152, 220], "keep": [151, 152], "caller": [151, 152, 174], "dask": [151, 160, 176, 197, 198, 202, 216], "sym_ddf": 151, "sym_df": 152, "boruvka": [157, 158], "ignore_nan": [157, 158], "mst": [157, 158], "msf": [157, 158], "g_mst": [157, 158], "start_list": [159, 160], "fanout_v": 160, "with_replac": 160, "is_edge_id": 160, "fanout": 160, "branch": 160, "fan": 160, "data_dict": 162, "num_nodes_dict": 162, "single_gpu": [162, 163], "device_id": 162, "idtyp": 162, "duck": [162, 164, 166], "dglheterograph": 162, "made": 162, "cugraph": [162, 164, 165, 179, 184, 202, 213, 218, 220], "wrapper": [162, 174], "around": 162, "conform": 162, "todo": 162, "2826": 162, "read": [162, 220], "guid": [162, 218, 220, 221], "chapter": 162, "dgl": [162, 163, 202, 214, 221], "document": [162, 213, 216], "explan": 162, "canonical_etyp": 162, "devic": [162, 165, 168, 179, 180, 181, 182, 183, 184, 185, 187], "ntype": 162, "num_canonical_edges_dict": 162, "total_number_of_edg": 162, "total_number_of_nod": 162, "cugraph_e_id_to_dgl_id": 162, "cugraph_n_id_to_dgl_id": 162, "dgl_e_id_to_cugraph_id": 162, "dgl_n_id_to_cugraph_id": 162, "get_corresponding_canonical_etyp": 162, "constructor": [162, 197], "cugraph_storage_from_heterograph": 162, "heterogen": 162, "triplet": 162, "src_type": 162, "dst_type": 162, "\ud835\udc48": 162, "\ud835\udc49": 162, "\ud835\udc56": 162, "relat": 162, "torch": [162, 164, 165], "pytorch": 162, "instal": [162, 165], "drug": 162, "gene": 162, "diseas": 162, "drug_interacts_drug_df": 162, "drug_interacts_gen": 162, "drug_treats_diseas": 162, "interact": [162, 216], "treat": [162, 179], "add_node_data": 162, "feat_nam": 162, "node_feat": 162, "feat_obj": 162, "as_tensor": 162, "edge_feat": 162, "sample_neighbor": 162, "num_nod": 162, "metagraph": 162, "get_node_storag": 162, "tensor": [162, 164], "2000": 162, "3000": 162, "get_edge_storag": 162, "4000": 162, "dglgraph": 163, "cugraphstorag": 163, "backend": [164, 165], "pyg": [164, 166, 202, 214, 221], "graphstor": 164, "featurestor": 164, "is_multi_gpu": [164, 171, 176, 177], "back": 164, "is_remot": [164, 171], "get_vertex_index": 164, "put_tensor": 164, "cugraphstor": 164, "mgpropertygraph": 164, "warn": 164, "remot": 165, "servic": [165, 202, 221], "uniform_neighbor_sampl": [165, 176], "remotegraph": [165, 202], "uniform_neighbor": 166, "basesampl": 166, "edge_permut": 166, "sample_from_edg": 166, "host": 167, "localhost": 167, "port": 167, "9090": 167, "results_port": 167, "9091": 167, "cugraph_servic": [167, 176], "access": [167, 176, 177, 202], "server": [167, 176, 177, 202, 221], "get_edge_ids_for_vertic": 167, "127": 167, "hostnam": 167, "listen": 167, "callabl": 168, "repeatedli": 168, "byte": [168, 215], "func": [169, 170], "thread": [169, 170], "purpos": 169, "keyword": [169, 170], "asyncio": 170, "cgs_client": 171, "cgs_graph_id": 171, "edge_property_nam": 171, "graph_info": 171, "has_properti": 171, "vertex_property_nam": 171, "vertex_typ": 171, "has_isolated_vertic": 171, "is_bipartit": 171, "is_direct": 171, "is_multigraph": [171, 179, 180, 183, 184, 185, 187], "is_multipartit": 171, "is_weight": 171, "number_of_edg": 171, "to_direct": 171, "to_undirect": 171, "val_nam": [173, 175], "easi": [174, 175, 215], "py": [174, 175], "obj": [174, 175], "thrift": [174, 175], "below": 174, "togeth": 174, "go": 174, "abstract": 175, "cugraph_service_thrift": 175, "messag": 175, "invalid": 175, "rpc": 176, "via": 176, "num_gpu": 176, "get_graph_edge_property_nam": 176, "get_graph_edge_typ": 176, "get_graph_vertex_property_nam": 176, "get_graph_vertex_typ": 176, "is_edge_properti": 176, "is_vertex_properti": 176, "renumber_edges_by_typ": 176, "renumber_vertices_by_typ": 176, "variou": 177, "aspect": 177, "cugraph_service_cli": [177, 202], "providea": 177, "insul": 177, "cugraphhandl": [177, 202], "end": [177, 214], "queri": [177, 215], "without": [177, 179, 220], "abil": [177, 216], "unsaf": 177, "creation": [177, 215], "add_graph": 177, "get_graph_id": 177, "get_server_info": 177, "sg_algo_func": 178, "resourcehandl": [179, 180, 181, 182, 183, 184, 185, 187], "_gpugraph": [179, 180, 181, 182, 183, 184, 185, 187], "bool_t": [179, 180, 181, 182, 183, 184, 185, 187], "direction_optim": 179, "int32_t": 179, "compute_predecessor": [179, 185], "do_expensive_check": [179, 180, 181, 182, 183, 184, 185, 187], "respons": 179, "sggraph": [179, 180, 181, 182, 183, 184, 185, 187], "mggraph": [179, 180, 181, 182, 184, 185, 187], "upon": 179, "long": [179, 217], "blank": 179, "edgelist_df": 179, "resource_handl": [179, 180, 181, 182, 183, 184, 185, 187], "graph_properti": 179, "graphproperti": [179, 180, 183, 184, 185, 187], "src_arrai": 179, "dst_arrai": 179, "weight_arrai": 179, "re": [179, 198], "pylibcugraph_bf": 179, "final_result": 179, "size_t": [180, 181, 182, 183, 184, 185], "max_iter": [180, 182, 184], "referenc": [180, 181, 182, 183, 184, 185, 187], "eignevector": 180, "item": [180, 181, 183, 184, 185], "asarrai": [180, 183, 184, 185, 186, 187], "graph_prop": [180, 183, 184, 185, 187], "is_symmetr": [180, 183, 184, 185, 187], "initial_hubs_guess_vertic": 181, "initial_hubs_guess_valu": 181, "third": [181, 183, 185], "invers": 182, "constant": 182, "seed_arrai": 183, "procedur": 183, "unpad": 183, "max": 183, "min": 183, "compress": [183, 186, 187], "precomputed_vertex_out_weight_vertic": 184, "precomputed_vertex_out_weight_sum": 184, "initial_guess_vertic": 184, "initial_guess_valu": 184, "ith": [184, 185], "11615585": 184, "21488841": 184, "2988108": 184, "3701449": 184, "releas": [185, 216, 220], "999": 185, "4028235e": 185, "38": 185, "0000000e": 185, "00": 185, "num_vert": 186, "__cuda_array_interface__": [186, 187], "unsupport": 186, "becaus": 186, "popul": 186, "labl": 186, "cp": [186, 187], "csr_matrix": [186, 187], "scipy_csr": [186, 187], "get_shap": 186, "nnz": 186, "cp_offset": [186, 187], "cp_indic": [186, 187], "cp_label": [186, 187], "tolist": [186, 187], "nonzero": 187, "numbermap": 197, "ecg": [197, 220], "leiden": [197, 217, 220], "linear": [197, 202, 217], "hit": [197, 220], "predict": [197, 202], "rmat": [197, 198], "analyt": [197, 214, 216, 220], "leverag": [198, 215], "flexibl": 198, "librari": [198, 216, 221], "workflow": [198, 214, 215, 217, 220], "smooth": 198, "simpl": [198, 215, 220], "project": [198, 216], "abl": 198, "machin": [198, 214, 216], "let": 198, "far": 198, "With": 198, "nvidia": [198, 214, 216], "smoothli": 198, "intellig": 198, "workload": 198, "comfort": 198, "dask_cugraph": 198, "comm": 198, "input_data_path": 198, "input_data": 198, "400": 198, "65": 198, "456": 198, "to_csv": 198, "reader": 198, "chunk": 198, "e_list": 198, "digraph": [198, 214, 220], "pr_df": 198, "page": [202, 221], "publicli": 202, "modul": [202, 220, 221], "namespac": 202, "refrer": [202, 221], "cugraph_pyg": 202, "cugraph_stor": 202, "experimental__cugraphstor": 202, "loader": 202, "dispatch": 202, "call_cugraph_algorithm": 202, "sampler": 202, "cugraph_sampl": 202, "experimental__cugraphsampl": 202, "runasynciothread": 202, "run_async": 202, "devicearrayalloc": 202, "cugraphservicecli": 202, "remote_graph_util": 202, "remote_graph": 202, "unionwrapp": 202, "valuewrapp": 202, "graphvertexedgeidwrapp": 202, "cugraph_service_serv": 202, "cugraph_handl": 202, "call_algo": 202, "extensionserverfacad": 202, "develop": [213, 215, 216, 218, 221], "team": [214, 216], "medium": [214, 220], "post": [214, 216], "deeper": 214, "dive": 214, "we": [214, 216, 220], "ve": 214, "just": [214, 215, 216, 220], "few": [214, 216, 220], "gtc": 214, "video": 214, "slide": 214, "massiv": 214, "kdd": 214, "tutori": 214, "acceler": [214, 216, 217], "gnn": 214, "21": 214, "what": 214, "next": [214, 220], "refactor": 214, "And": 214, "rethink": 214, "tackl": 214, "unifi": [214, 216], "20": 214, "fall": 214, "goe": 214, "big": [214, 215], "vision": 214, "journei": 214, "beyond": 214, "versu": [214, 220], "gtc19": 214, "spring": 214, "gtc18": 214, "dgx": [214, 217], "ubiquit": [214, 216], "alex": 214, "fender": [214, 217], "brad": 214, "ree": [214, 217], "joe": 214, "eaton": [214, 217], "bader": [214, 217], "editor": 214, "crc": 214, "press": 214, "kang": [214, 217], "web": [214, 217], "crawl": [214, 217], "a100": [214, 217], "sep": 214, "hricik": [214, 217], "septemb": [214, 217], "scienc": [214, 216, 217, 220, 221], "pp": [214, 217], "richardson": 214, "draba": 214, "oldridg": 214, "allen": 214, "august": 214, "expand": 214, "dl": 214, "ml": 214, "interoper": 214, "26th": 214, "3503": 214, "3504": 214, "steroid": 214, "scientist": [214, 216, 221], "realli": 214, "park": 214, "spot": 214, "cell": 214, "genom": 214, "memgraph": 214, "dev": 214, "repost": 214, "demonst": 214, "etl": [214, 216, 220], "xgboost": 214, "fraud": 214, "predect": 214, "compar": 214, "bluf": 215, "popular": 215, "program": 215, "concept": 215, "great": 215, "wai": 215, "readabl": 215, "most": [215, 216, 220], "There": 215, "built": [215, 220], "load": [215, 220], "ye": 215, "from_panda": 215, "200": 215, "nlargest": 215, "va": 215, "orient": 215, "natur": 215, "place": 215, "fact": 215, "design": 215, "why": 215, "focus": [215, 216], "problem": [215, 216, 217], "million": 215, "trillion": 215, "giga": 215, "terabyt": 215, "At": [215, 216], "becom": 215, "ineffici": 215, "modifi": 215, "howev": [215, 216, 220], "open": 215, "misinterpret": 215, "flow": [215, 217], "sens": 215, "confus": 215, "g2": 215, "g3": 215, "g1": 215, "obviou": 215, "opt": 215, "return_self": 215, "explicitli": 215, "awar": 215, "pattern": 215, "independ": 215, "benefit": 215, "simplifi": [215, 220], "usabl": 215, "cannot": 215, "techniqu": 216, "proverbi": 216, "toolbox": 216, "engin": 216, "statist": 216, "among": 216, "commonli": 216, "focu": 216, "question": 216, "pose": 216, "euler": 216, "1736": 216, "seven": 216, "bridg": 216, "konigsberg": 216, "laid": 216, "foundat": 216, "cover": 216, "wide": 216, "varieti": 216, "market": 216, "biologi": 216, "physic": [216, 217], "sociologi": [216, 217], "cyber": 216, "seamlessli": [216, 221], "integr": [216, 221], "ecosystem": [216, 221], "easili": [216, 221], "even": [216, 221], "think": 216, "technologi": 216, "goal": [216, 220], "almost": 216, "twenti": 216, "year": 216, "attempt": 216, "solv": 216, "tend": 216, "scope": 216, "shift": 216, "dynam": 216, "came": 216, "eas": 216, "choos": 216, "suit": 216, "paradigm": 216, "now": [216, 220], "latest": [216, 218], "pascal": 216, "1000x": 216, "faster": [216, 217], "averag": 216, "moreov": 216, "rapidli": 216, "restrict": 216, "sever": 216, "emerg": 216, "de": 216, "facto": 216, "languag": 216, "familiar": 216, "approach": 216, "mention": 216, "thing": 216, "lot": 216, "area": 216, "favor": 216, "our": 216, "own": 216, "argot": 216, "jargon": 216, "try": [216, 220], "mostli": 216, "prefer": 216, "tool": 216, "layer": 216, "robust": 216, "complet": [216, 220], "pictur": 216, "everyth": 216, "captur": 216, "issu": [216, 220], "epic": 216, "subtask": 216, "imag": 216, "readi": 216, "board": 216, "28": 216, "2020": [217, 220], "brand": 217, "journal": 217, "25": 217, "163": 217, "177": 217, "variant": 217, "136": 217, "145": 217, "mclaughlin": 217, "2018": 217, "61": 217, "92": 217, "date": 217, "nagi": 217, "2016": 217, "52": 217, "72": 217, "zachari": 217, "conflict": 217, "fission": 217, "anthropolog": 217, "research": 217, "33": 217, "452": 217, "473": 217, "1977": 217, "dolphin": 217, "lusseau": 217, "schneider": 217, "boisseau": 217, "haas": 217, "slooten": 217, "dawson": 217, "bottlenos": 217, "doubt": 217, "sound": 217, "proport": 217, "last": 217, "ecologi": 217, "sociobiologi": 217, "54": 217, "396": 217, "405": 217, "2003": 217, "newman": 217, "matric": [217, 221], "preprint": 217, "0605087": 217, "2006": 217, "email": 217, "eu": 217, "hao": 217, "yin": 217, "austin": 217, "benson": 217, "jure": 217, "david": 217, "gleich": 217, "23rd": 217, "kleinberg": 217, "faloutso": 217, "evolut": 217, "densif": 217, "diamet": 217, "tkdd": 217, "2007": 217, "www": 217, "cmu": 217, "edu": 217, "pub": 217, "powergrowth": 217, "polbook": 217, "kreb": 217, "unpublish": 217, "orgnet": 217, "basic": 218, "blog": [218, 220, 221], "contribut": [218, 221], "packag": [218, 221], "updatr": 220, "flesh": 220, "One": 220, "mimic": 220, "prep": 220, "portion": 220, "encourag": 220, "fulli": 220, "easier": 220, "oct": 220, "14th": 220, "expans": 220, "complic": 220, "unchang": 220, "still": 220, "signif": 220, "cnx": 220, "text": 220, "highlight": 220, "yellow": 220, "rich": 220, "etc": 220, "roadmap": 220, "fix": 220, "biggest": 220, "insert": 220, "record": 220, "data_fil": 220, "nx": 220, "iterrow": 220, "add_edg": 220, "perfectli": 220, "fine": 220, "problemat": 220, "someth": 220, "resiz": 220, "veri": 220, "effici": 220, "suggest": 220, "rewrit": 220, "bulk": 220, "intro": 221}, "objects": {"cugraph": [[0, 0, 1, "", "BiPartiteGraph"], [1, 0, 1, "", "Graph"], [23, 0, 1, "", "MultiGraph"], [24, 2, 1, "", "analyzeClustering_edge_cut"], [25, 2, 1, "", "analyzeClustering_modularity"], [26, 2, 1, "", "analyzeClustering_ratio_cut"], [27, 2, 1, "", "batched_ego_graphs"], [28, 2, 1, "", "betweenness_centrality"], [29, 2, 1, "", "bfs"], [30, 2, 1, "", "bfs_edges"], [32, 2, 1, "", "connected_components"], [33, 2, 1, "", "core_number"], [53, 2, 1, "", "degree_centrality"], [54, 2, 1, "", "dense_hungarian"], [55, 2, 1, "", "ecg"], [56, 2, 1, "", "edge_betweenness_centrality"], [57, 2, 1, "", "ego_graph"], [76, 2, 1, "", "filter_unreachable"], [77, 2, 1, "", "force_atlas2"], [78, 2, 1, "", "from_adjlist"], [79, 2, 1, "", "from_cudf_edgelist"], [80, 2, 1, "", "from_edgelist"], [81, 2, 1, "", "from_numpy_array"], [82, 2, 1, "", "from_numpy_matrix"], [83, 2, 1, "", "from_pandas_adjacency"], [84, 2, 1, "", "from_pandas_edgelist"], [86, 2, 1, "", "hits"], [87, 2, 1, "", "hungarian"], [88, 2, 1, "", "hypergraph"], [89, 2, 1, "", "jaccard"], [90, 2, 1, "", "jaccard_coefficient"], [91, 2, 1, "", "jaccard_w"], [92, 2, 1, "", "k_core"], [93, 2, 1, "", "k_truss"], [94, 2, 1, "", "katz_centrality"], [95, 2, 1, "", "ktruss_subgraph"], [96, 2, 1, "", "leiden"], [97, 2, 1, "", "louvain"], [98, 2, 1, "", "node2vec"], [99, 2, 1, "", "overlap"], [100, 2, 1, "", "overlap_coefficient"], [101, 2, 1, "", "overlap_w"], [102, 2, 1, "", "pagerank"], [103, 2, 1, "", "random_walks"], [104, 2, 1, "", "shortest_path"], [105, 2, 1, "", "shortest_path_length"], [106, 2, 1, "", "sorensen"], [107, 2, 1, "", "sorensen_coefficient"], [108, 2, 1, "", "sorensen_w"], [109, 2, 1, "", "spectralBalancedCutClustering"], [110, 2, 1, "", "spectralModularityMaximizationClustering"], [111, 2, 1, "", "sssp"], [112, 2, 1, "", "strongly_connected_components"], [149, 2, 1, "", "subgraph"], [150, 2, 1, "", "symmetrize"], [151, 2, 1, "", "symmetrize_ddf"], [152, 2, 1, "", "symmetrize_df"], [153, 2, 1, "", "to_numpy_array"], [154, 2, 1, "", "to_numpy_matrix"], [155, 2, 1, "", "to_pandas_adjacency"], [156, 2, 1, "", "to_pandas_edgelist"], [159, 2, 1, "", "triangle_count"], [160, 2, 1, "", "uniform_neighbor_sample"], [161, 2, 1, "", "weakly_connected_components"]], "cugraph.BiPartiteGraph": [[0, 1, 1, "", "__init__"]], "cugraph.Graph": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "add_internal_vertex_id"], [3, 1, 1, "", "add_nodes_from"], [4, 1, 1, "", "clear"], [5, 1, 1, "", "from_cudf_adjlist"], [6, 1, 1, "", "from_cudf_edgelist"], [7, 1, 1, "", "from_dask_cudf_edgelist"], [8, 1, 1, "", "from_numpy_array"], [9, 1, 1, "", "from_numpy_matrix"], [10, 1, 1, "", "from_pandas_adjacency"], [11, 1, 1, "", "from_pandas_edgelist"], [12, 1, 1, "", "has_isolated_vertices"], [13, 1, 1, "", "is_bipartite"], [14, 1, 1, "", "is_directed"], [15, 1, 1, "", "is_multigraph"], [16, 1, 1, "", "is_multipartite"], [17, 1, 1, "", "is_renumbered"], [18, 1, 1, "", "is_weighted"], [19, 1, 1, "", "lookup_internal_vertex_id"], [20, 1, 1, "", "to_directed"], [21, 1, 1, "", "to_undirected"], [22, 1, 1, "", "unrenumber"]], "cugraph.MultiGraph": [[23, 1, 1, "", "__init__"]], "cugraph.centrality": [[31, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.eigenvector_centrality": [[34, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.katz_centrality": [[35, 2, 1, "", "katz_centrality"]], "cugraph.dask.common.read_utils": [[36, 2, 1, "", "get_chunksize"]], "cugraph.dask.comms.comms": [[37, 2, 1, "", "destroy"], [38, 2, 1, "", "get_2D_partition"], [39, 2, 1, "", "get_comms"], [40, 2, 1, "", "get_default_handle"], [41, 2, 1, "", "get_handle"], [42, 2, 1, "", "get_session_id"], [43, 2, 1, "", "get_worker_id"], [44, 2, 1, "", "get_workers"], [45, 2, 1, "", "initialize"], [46, 2, 1, "", "is_initialized"]], "cugraph.dask.community.louvain": [[47, 2, 1, "", "louvain"]], "cugraph.dask.components.connectivity": [[48, 2, 1, "", "weakly_connected_components"]], "cugraph.dask.link_analysis.hits": [[49, 2, 1, "", "hits"]], "cugraph.dask.link_analysis.pagerank": [[50, 2, 1, "", "pagerank"]], "cugraph.dask.traversal.bfs": [[51, 2, 1, "", "bfs"]], "cugraph.dask.traversal.sssp": [[52, 2, 1, "", "sssp"]], "cugraph.experimental": [[58, 0, 1, "", "PropertyGraph"], [75, 0, 1, "", "PropertySelection"]], "cugraph.experimental.PropertyGraph": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "add_edge_data"], [60, 1, 1, "", "add_vertex_data"], [61, 1, 1, "", "annotate_dataframe"], [62, 1, 1, "", "edge_props_to_graph"], [63, 1, 1, "", "extract_subgraph"], [64, 1, 1, "", "get_edge_data"], [65, 1, 1, "", "get_num_edges"], [66, 1, 1, "", "get_num_vertices"], [67, 1, 1, "", "get_vertex_data"], [68, 1, 1, "", "get_vertices"], [69, 1, 1, "", "has_duplicate_edges"], [70, 1, 1, "", "is_multigraph"], [71, 1, 1, "", "renumber_edges_by_type"], [72, 1, 1, "", "renumber_vertices_by_type"], [73, 1, 1, "", "select_edges"], [74, 1, 1, "", "select_vertices"]], "cugraph.experimental.PropertySelection": [[75, 1, 1, "", "__init__"]], "cugraph.generators": [[85, 2, 1, "", "rmat"]], "cugraph.structure": [[113, 0, 1, "", "NumberMap"], [148, 2, 1, "", "shuffle"]], "cugraph.structure.NumberMap": [[113, 1, 1, "", "__init__"], [116, 1, 1, "", "add_internal_vertex_id"], [117, 1, 1, "", "compute_vals"], [118, 1, 1, "", "compute_vals_types"], [119, 1, 1, "", "from_internal_vertex_id"], [120, 1, 1, "", "generate_unused_column_name"], [121, 1, 1, "", "renumber"], [122, 1, 1, "", "renumber_and_segment"], [123, 1, 1, "", "set_renumbered_col_names"], [124, 1, 1, "", "to_internal_vertex_id"], [125, 1, 1, "", "unrenumber"], [126, 1, 1, "", "vertex_column_size"]], "cugraph.structure.graph_implementation.simpleGraphImpl": [[127, 1, 1, "", "degree"], [128, 1, 1, "", "degrees"], [129, 1, 1, "", "delete_adj_list"], [130, 1, 1, "", "delete_edge_list"], [131, 1, 1, "", "edges"], [132, 1, 1, "", "enable_batch"], [133, 1, 1, "", "get_two_hop_neighbors"], [134, 1, 1, "", "has_edge"], [135, 1, 1, "", "has_node"], [136, 1, 1, "", "has_self_loop"], [137, 1, 1, "", "in_degree"], [138, 1, 1, "", "neighbors"], [139, 1, 1, "", "nodes"], [140, 1, 1, "", "number_of_edges"], [141, 1, 1, "", "number_of_nodes"], [142, 1, 1, "", "number_of_vertices"], [143, 1, 1, "", "out_degree"], [144, 1, 1, "", "vertex_column_size"], [145, 1, 1, "", "view_adj_list"], [146, 1, 1, "", "view_edge_list"], [147, 1, 1, "", "view_transposed_adj_list"]], "cugraph.tree.minimum_spanning_tree": [[157, 2, 1, "", "maximum_spanning_tree"], [158, 2, 1, "", "minimum_spanning_tree"]], "cugraph_dgl.cugraph_storage": [[162, 0, 1, "", "CuGraphStorage"]], "cugraph_dgl.cugraph_storage.CuGraphStorage": [[162, 1, 1, "", "__init__"]], "cugraph_dgl": [[163, 2, 1, "", "cugraph_storage_from_heterograph"]], "cugraph_pyg.data.cugraph_store": [[164, 0, 1, "", "EXPERIMENTAL__CuGraphStore"]], "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore": [[164, 1, 1, "", "__init__"]], "cugraph_pyg.loader.dispatch": [[165, 2, 1, "", "call_cugraph_algorithm"]], "cugraph_pyg.sampler.cugraph_sampler": [[166, 0, 1, "", "EXPERIMENTAL__CuGraphSampler"]], "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler": [[166, 1, 1, "", "__init__"]], "cugraph_service_client.client": [[167, 0, 1, "", "CugraphServiceClient"], [168, 0, 1, "", "DeviceArrayAllocator"], [169, 0, 1, "", "RunAsyncioThread"], [170, 2, 1, "", "run_async"]], "cugraph_service_client.client.CugraphServiceClient": [[167, 1, 1, "", "__init__"]], "cugraph_service_client.client.DeviceArrayAllocator": [[168, 1, 1, "", "__init__"]], "cugraph_service_client.client.RunAsyncioThread": [[169, 1, 1, "", "__init__"]], "cugraph_service_client.remote_graph": [[171, 0, 1, "", "RemoteGraph"]], "cugraph_service_client.remote_graph.RemoteGraph": [[171, 1, 1, "", "__init__"]], "cugraph_service_client": [[172, 3, 0, "-", "remote_graph_utils"]], "cugraph_service_client.types": [[173, 0, 1, "", "GraphVertexEdgeIDWrapper"], [174, 0, 1, "", "UnionWrapper"], [175, 0, 1, "", "ValueWrapper"]], "cugraph_service_client.types.GraphVertexEdgeIDWrapper": [[173, 1, 1, "", "__init__"]], "cugraph_service_client.types.UnionWrapper": [[174, 1, 1, "", "__init__"]], "cugraph_service_client.types.ValueWrapper": [[175, 1, 1, "", "__init__"]], "cugraph_service_server.cugraph_handler": [[176, 0, 1, "", "CugraphHandler"], [177, 0, 1, "", "ExtensionServerFacade"], [178, 2, 1, "", "call_algo"]], "cugraph_service_server.cugraph_handler.CugraphHandler": [[176, 1, 1, "", "__init__"]], "cugraph_service_server.cugraph_handler.ExtensionServerFacade": [[177, 1, 1, "", "__init__"]], "pylibcugraph": [[179, 2, 1, "", "bfs"], [180, 2, 1, "", "eigenvector_centrality"], [181, 2, 1, "", "hits"], [182, 2, 1, "", "katz_centrality"], [183, 2, 1, "", "node2vec"], [184, 2, 1, "", "pagerank"], [185, 2, 1, "", "sssp"], [186, 2, 1, "", "strongly_connected_components"], [187, 2, 1, "", "weakly_connected_components"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cugraph": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 188, 193, 194, 195, 196, 197, 198, 214, 215, 216, 221], "bipartitegraph": 0, "graph": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 190, 198, 200, 207, 210, 215, 220], "add_internal_vertex_id": [2, 116], "add_nodes_from": 3, "clear": 4, "from_cudf_adjlist": 5, "from_cudf_edgelist": [6, 79], "from_dask_cudf_edgelist": 7, "from_numpy_arrai": [8, 81], "from_numpy_matrix": [9, 82], "from_pandas_adjac": [10, 83], "from_pandas_edgelist": [11, 84], "has_isolated_vertic": 12, "is_bipartit": 13, "is_direct": 14, "is_multigraph": [15, 70], "is_multipartit": 16, "is_renumb": 17, "is_weight": 18, "lookup_internal_vertex_id": 19, "to_direct": 20, "to_undirect": 21, "unrenumb": [22, 125], "multigraph": 23, "analyzeclustering_edge_cut": 24, "analyzeclustering_modular": 25, "analyzeclustering_ratio_cut": 26, "batched_ego_graph": 27, "betweenness_centr": 28, "bf": [29, 51, 179], "bfs_edg": 30, "central": [31, 34, 35, 189], "eigenvector_centr": [31, 34, 180], "connected_compon": 32, "core_numb": 33, "dask": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 201], "katz_centr": [35, 94, 182], "common": 36, "read_util": 36, "get_chunks": 36, "comm": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "destroi": 37, "get_2d_partit": 38, "get_comm": 39, "get_default_handl": 40, "get_handl": 41, "get_session_id": 42, "get_worker_id": 43, "get_work": 44, "initi": 45, "is_initi": 46, "commun": [47, 190], "louvain": [47, 97, 190], "compon": [48, 191], "connect": [48, 191], "weakly_connected_compon": [48, 161, 187], "link_analysi": [49, 50], "hit": [49, 86, 181, 205], "pagerank": [50, 102, 184, 205], "travers": [51, 52, 211], "sssp": [52, 111, 185], "degree_centr": 53, "dense_hungarian": 54, "ecg": [55, 190], "edge_betweenness_centr": 56, "ego_graph": 57, "experiment": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "propertygraph": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "add_edge_data": 59, "add_vertex_data": 60, "annotate_datafram": 61, "edge_props_to_graph": 62, "extract_subgraph": 63, "get_edge_data": 64, "get_num_edg": 65, "get_num_vertic": 66, "get_vertex_data": 67, "get_vertic": 68, "has_duplicate_edg": 69, "renumber_edges_by_typ": 71, "renumber_vertices_by_typ": 72, "select_edg": 73, "select_vertic": 74, "propertyselect": 75, "filter_unreach": 76, "force_atlas2": 77, "from_adjlist": 78, "from_edgelist": 80, "gener": [85, 199], "rmat": [85, 199], "hungarian": [87, 204], "hypergraph": 88, "jaccard": [89, 206], "jaccard_coeffici": 90, "jaccard_w": 91, "k_core": 92, "k_truss": 93, "ktruss_subgraph": 95, "leiden": [96, 190], "node2vec": [98, 183, 209], "overlap": [99, 206], "overlap_coeffici": 100, "overlap_w": 101, "random_walk": 103, "shortest_path": 104, "shortest_path_length": 105, "sorensen": [106, 206], "sorensen_coeffici": 107, "sorensen_w": 108, "spectralbalancedcutclust": 109, "spectralmodularitymaximizationclust": 110, "strongly_connected_compon": [112, 186], "structur": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "numbermap": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 210], "multigpu": 114, "singlegpu": 115, "compute_v": 117, "compute_vals_typ": 118, "from_internal_vertex_id": 119, "generate_unused_column_nam": 120, "renumb": 121, "renumber_and_seg": 122, "set_renumbered_col_nam": 123, "to_internal_vertex_id": 124, "vertex_column_s": [126, 144], "graph_implement": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "simplegraphimpl": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "degre": [127, 128, 189], "delete_adj_list": 129, "delete_edge_list": 130, "edg": 131, "enable_batch": 132, "get_two_hop_neighbor": 133, "has_edg": 134, "has_nod": 135, "has_self_loop": 136, "in_degre": 137, "neighbor": 138, "node": 139, "number_of_edg": 140, "number_of_nod": 141, "number_of_vertic": 142, "out_degre": 143, "view_adj_list": 145, "view_edge_list": 146, "view_transposed_adj_list": 147, "shuffl": 148, "subgraph": [149, 190], "symmetr": [150, 210], "symmetrize_ddf": 151, "symmetrize_df": 152, "to_numpy_arrai": 153, "to_numpy_matrix": 154, "to_pandas_adjac": 155, "to_pandas_edgelist": 156, "tree": [157, 158, 212], "minimum_spanning_tre": [157, 158], "maximum_spanning_tre": 157, "triangle_count": 159, "uniform_neighbor_sampl": 160, "cugraph_dgl": [162, 163], "cugraph_storag": 162, "cugraphstorag": 162, "cugraph_storage_from_heterograph": 163, "cugraph_pyg": [164, 165, 166], "data": [164, 210, 215, 217], "cugraph_stor": 164, "experimental__cugraphstor": 164, "loader": 165, "dispatch": 165, "call_cugraph_algorithm": 165, "sampler": 166, "cugraph_sampl": 166, "experimental__cugraphsampl": 166, "cugraph_service_cli": [167, 168, 169, 170, 171, 172, 173, 174, 175], "client": [167, 168, 169, 170, 195], "cugraphservicecli": 167, "devicearrayalloc": 168, "runasynciothread": 169, "run_async": 170, "remote_graph": 171, "remotegraph": 171, "remote_graph_util": 172, "type": [173, 174, 175], "graphvertexedgeidwrapp": 173, "unionwrapp": 174, "valuewrapp": 175, "cugraph_service_serv": [176, 177, 178], "cugraph_handl": [176, 177, 178], "cugraphhandl": 176, "extensionserverfacad": 177, "call_algo": 178, "pylibcugraph": [179, 180, 181, 182, 183, 184, 185, 186, 187, 208], "c": 188, "api": [188, 193, 194, 195, 196, 197, 202, 208, 221], "link": [188, 205, 206], "between": 189, "katz": 189, "mg": [189, 190, 191, 201, 205, 211], "eigenvector": 189, "egonet": 190, "ensembl": 190, "cluster": 190, "k": [190, 192], "truss": 190, "spectral": 190, "extract": 190, "triangl": 190, "count": 190, "core": 192, "number": 192, "dgl": 193, "refrer": 193, "method": [193, 201, 208, 215], "pyg": 194, "refer": [194, 195, 196, 197, 202, 208, 217], "servic": [195, 196], "server": 196, "document": [197, 202, 221], "multi": 198, "gpu": 198, "distribut": 198, "analyt": 198, "exampl": 198, "implement": 200, "helper": 201, "function": 201, "python": 202, "layout": 203, "forc": 203, "atla": 203, "2": 203, "linear": 204, "assign": 204, "analysi": 205, "predict": 206, "coeffici": 206, "properti": 207, "sampl": 209, "random": 209, "walk": 209, "class": 210, "constructor": 210, "ad": 210, "check": 210, "convers": 210, "from": 210, "other": [210, 214, 217], "format": 210, "breadth": 211, "first": 211, "search": 211, "singl": 211, "sourc": 211, "shortest": 211, "path": [211, 220], "minimum": 212, "span": 212, "maximum": 212, "blog": 214, "present": 214, "confer": 214, "2022": 214, "2021": 214, "2020": 214, "2019": 214, "2018": 214, "media": 214, "academ": 214, "paper": [214, 217], "rapid": 214, "event": 214, "notebook": 214, "cascad": 215, "object": [215, 220], "algorithm": [215, 217, 220], "introduct": 216, "vision": 216, "terminologi": 216, "roadmap": 216, "architectur": 217, "set": 217, "basic": [219, 221], "networkx": 220, "compat": 220, "transit": 220, "last": 220, "updat": 220, "easi": 220, "us": 220, "acceler": 220, "differ": 220, "exactli": 220, "match": 220, "do": 220, "copi": 220, "over": 220, "addit": 220, "attribut": 220, "where": 220, "all": 220, "argument": 220, "ar": 220, "support": 220, "result": 220, "build": 220, "welcom": 221, "": 221, "indic": 221, "tabl": 221}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"cugraph.BiPartiteGraph": [[0, "cugraph-bipartitegraph"]], "cugraph.Graph": [[1, "cugraph-graph"]], "cugraph.Graph.add_internal_vertex_id": [[2, "cugraph-graph-add-internal-vertex-id"]], "cugraph.Graph.add_nodes_from": [[3, "cugraph-graph-add-nodes-from"]], "cugraph.Graph.clear": [[4, "cugraph-graph-clear"]], "cugraph.Graph.from_cudf_adjlist": [[5, "cugraph-graph-from-cudf-adjlist"]], "cugraph.Graph.from_cudf_edgelist": [[6, "cugraph-graph-from-cudf-edgelist"]], "cugraph.Graph.from_dask_cudf_edgelist": [[7, "cugraph-graph-from-dask-cudf-edgelist"]], "cugraph.Graph.from_numpy_array": [[8, "cugraph-graph-from-numpy-array"]], "cugraph.Graph.from_numpy_matrix": [[9, "cugraph-graph-from-numpy-matrix"]], "cugraph.Graph.from_pandas_adjacency": [[10, "cugraph-graph-from-pandas-adjacency"]], "cugraph.Graph.from_pandas_edgelist": [[11, "cugraph-graph-from-pandas-edgelist"]], "cugraph.Graph.has_isolated_vertices": [[12, "cugraph-graph-has-isolated-vertices"]], "cugraph.Graph.is_bipartite": [[13, "cugraph-graph-is-bipartite"]], "cugraph.Graph.is_directed": [[14, "cugraph-graph-is-directed"]], "cugraph.Graph.is_multigraph": [[15, "cugraph-graph-is-multigraph"]], "cugraph.Graph.is_multipartite": [[16, "cugraph-graph-is-multipartite"]], "cugraph.Graph.is_renumbered": [[17, "cugraph-graph-is-renumbered"]], "cugraph.Graph.is_weighted": [[18, "cugraph-graph-is-weighted"]], "cugraph.Graph.lookup_internal_vertex_id": [[19, "cugraph-graph-lookup-internal-vertex-id"]], "cugraph.Graph.to_directed": [[20, "cugraph-graph-to-directed"]], "cugraph.Graph.to_undirected": [[21, "cugraph-graph-to-undirected"]], "cugraph.Graph.unrenumber": [[22, "cugraph-graph-unrenumber"]], "cugraph.MultiGraph": [[23, "cugraph-multigraph"]], "cugraph.analyzeClustering_edge_cut": [[24, "cugraph-analyzeclustering-edge-cut"]], "cugraph.analyzeClustering_modularity": [[25, "cugraph-analyzeclustering-modularity"]], "cugraph.analyzeClustering_ratio_cut": [[26, "cugraph-analyzeclustering-ratio-cut"]], "cugraph.batched_ego_graphs": [[27, "cugraph-batched-ego-graphs"]], "cugraph.betweenness_centrality": [[28, "cugraph-betweenness-centrality"]], "cugraph.bfs": [[29, "cugraph-bfs"]], "cugraph.bfs_edges": [[30, "cugraph-bfs-edges"]], "cugraph.centrality.eigenvector_centrality": [[31, "cugraph-centrality-eigenvector-centrality"]], "cugraph.connected_components": [[32, "cugraph-connected-components"]], "cugraph.core_number": [[33, "cugraph-core-number"]], "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality": [[34, "cugraph-dask-centrality-eigenvector-centrality-eigenvector-centrality"]], "cugraph.dask.centrality.katz_centrality.katz_centrality": [[35, "cugraph-dask-centrality-katz-centrality-katz-centrality"]], "cugraph.dask.common.read_utils.get_chunksize": [[36, "cugraph-dask-common-read-utils-get-chunksize"]], "cugraph.dask.comms.comms.destroy": [[37, "cugraph-dask-comms-comms-destroy"]], "cugraph.dask.comms.comms.get_2D_partition": [[38, "cugraph-dask-comms-comms-get-2d-partition"]], "cugraph.dask.comms.comms.get_comms": [[39, "cugraph-dask-comms-comms-get-comms"]], "cugraph.dask.comms.comms.get_default_handle": [[40, "cugraph-dask-comms-comms-get-default-handle"]], "cugraph.dask.comms.comms.get_handle": [[41, "cugraph-dask-comms-comms-get-handle"]], "cugraph.dask.comms.comms.get_session_id": [[42, "cugraph-dask-comms-comms-get-session-id"]], "cugraph.dask.comms.comms.get_worker_id": [[43, "cugraph-dask-comms-comms-get-worker-id"]], "cugraph.dask.comms.comms.get_workers": [[44, "cugraph-dask-comms-comms-get-workers"]], "cugraph.dask.comms.comms.initialize": [[45, "cugraph-dask-comms-comms-initialize"]], "cugraph.dask.comms.comms.is_initialized": [[46, "cugraph-dask-comms-comms-is-initialized"]], "cugraph.dask.community.louvain.louvain": [[47, "cugraph-dask-community-louvain-louvain"]], "cugraph.dask.components.connectivity.weakly_connected_components": [[48, "cugraph-dask-components-connectivity-weakly-connected-components"]], "cugraph.dask.link_analysis.hits.hits": [[49, "cugraph-dask-link-analysis-hits-hits"]], "cugraph.dask.link_analysis.pagerank.pagerank": [[50, "cugraph-dask-link-analysis-pagerank-pagerank"]], "cugraph.dask.traversal.bfs.bfs": [[51, "cugraph-dask-traversal-bfs-bfs"]], "cugraph.dask.traversal.sssp.sssp": [[52, "cugraph-dask-traversal-sssp-sssp"]], "cugraph.degree_centrality": [[53, "cugraph-degree-centrality"]], "cugraph.dense_hungarian": [[54, "cugraph-dense-hungarian"]], "cugraph.ecg": [[55, "cugraph-ecg"]], "cugraph.edge_betweenness_centrality": [[56, "cugraph-edge-betweenness-centrality"]], "cugraph.ego_graph": [[57, "cugraph-ego-graph"]], "cugraph.experimental.PropertyGraph": [[58, "cugraph-experimental-propertygraph"]], "cugraph.experimental.PropertyGraph.add_edge_data": [[59, "cugraph-experimental-propertygraph-add-edge-data"]], "cugraph.experimental.PropertyGraph.add_vertex_data": [[60, "cugraph-experimental-propertygraph-add-vertex-data"]], "cugraph.experimental.PropertyGraph.annotate_dataframe": [[61, "cugraph-experimental-propertygraph-annotate-dataframe"]], "cugraph.experimental.PropertyGraph.edge_props_to_graph": [[62, "cugraph-experimental-propertygraph-edge-props-to-graph"]], "cugraph.experimental.PropertyGraph.extract_subgraph": [[63, "cugraph-experimental-propertygraph-extract-subgraph"]], "cugraph.experimental.PropertyGraph.get_edge_data": [[64, "cugraph-experimental-propertygraph-get-edge-data"]], "cugraph.experimental.PropertyGraph.get_num_edges": [[65, "cugraph-experimental-propertygraph-get-num-edges"]], "cugraph.experimental.PropertyGraph.get_num_vertices": [[66, "cugraph-experimental-propertygraph-get-num-vertices"]], "cugraph.experimental.PropertyGraph.get_vertex_data": [[67, "cugraph-experimental-propertygraph-get-vertex-data"]], "cugraph.experimental.PropertyGraph.get_vertices": [[68, "cugraph-experimental-propertygraph-get-vertices"]], "cugraph.experimental.PropertyGraph.has_duplicate_edges": [[69, "cugraph-experimental-propertygraph-has-duplicate-edges"]], "cugraph.experimental.PropertyGraph.is_multigraph": [[70, "cugraph-experimental-propertygraph-is-multigraph"]], "cugraph.experimental.PropertyGraph.renumber_edges_by_type": [[71, "cugraph-experimental-propertygraph-renumber-edges-by-type"]], "cugraph.experimental.PropertyGraph.renumber_vertices_by_type": [[72, "cugraph-experimental-propertygraph-renumber-vertices-by-type"]], "cugraph.experimental.PropertyGraph.select_edges": [[73, "cugraph-experimental-propertygraph-select-edges"]], "cugraph.experimental.PropertyGraph.select_vertices": [[74, "cugraph-experimental-propertygraph-select-vertices"]], "cugraph.experimental.PropertySelection": [[75, "cugraph-experimental-propertyselection"]], "cugraph.filter_unreachable": [[76, "cugraph-filter-unreachable"]], "cugraph.force_atlas2": [[77, "cugraph-force-atlas2"]], "cugraph.from_adjlist": [[78, "cugraph-from-adjlist"]], "cugraph.from_cudf_edgelist": [[79, "cugraph-from-cudf-edgelist"]], "cugraph.from_edgelist": [[80, "cugraph-from-edgelist"]], "cugraph.from_numpy_array": [[81, "cugraph-from-numpy-array"]], "cugraph.from_numpy_matrix": [[82, "cugraph-from-numpy-matrix"]], "cugraph.from_pandas_adjacency": [[83, "cugraph-from-pandas-adjacency"]], "cugraph.from_pandas_edgelist": [[84, "cugraph-from-pandas-edgelist"]], "cugraph.generators.rmat": [[85, "cugraph-generators-rmat"]], "cugraph.hits": [[86, "cugraph-hits"]], "cugraph.hungarian": [[87, "cugraph-hungarian"]], "cugraph.hypergraph": [[88, "cugraph-hypergraph"]], "cugraph.jaccard": [[89, "cugraph-jaccard"]], "cugraph.jaccard_coefficient": [[90, "cugraph-jaccard-coefficient"]], "cugraph.jaccard_w": [[91, "cugraph-jaccard-w"]], "cugraph.k_core": [[92, "cugraph-k-core"]], "cugraph.k_truss": [[93, "cugraph-k-truss"]], "cugraph.katz_centrality": [[94, "cugraph-katz-centrality"]], "cugraph.ktruss_subgraph": [[95, "cugraph-ktruss-subgraph"]], "cugraph.leiden": [[96, "cugraph-leiden"]], "cugraph.louvain": [[97, "cugraph-louvain"]], "cugraph.node2vec": [[98, "cugraph-node2vec"]], "cugraph.overlap": [[99, "cugraph-overlap"]], "cugraph.overlap_coefficient": [[100, "cugraph-overlap-coefficient"]], "cugraph.overlap_w": [[101, "cugraph-overlap-w"]], "cugraph.pagerank": [[102, "cugraph-pagerank"]], "cugraph.random_walks": [[103, "cugraph-random-walks"]], "cugraph.shortest_path": [[104, "cugraph-shortest-path"]], "cugraph.shortest_path_length": [[105, "cugraph-shortest-path-length"]], "cugraph.sorensen": [[106, "cugraph-sorensen"]], "cugraph.sorensen_coefficient": [[107, "cugraph-sorensen-coefficient"]], "cugraph.sorensen_w": [[108, "cugraph-sorensen-w"]], "cugraph.spectralBalancedCutClustering": [[109, "cugraph-spectralbalancedcutclustering"]], "cugraph.spectralModularityMaximizationClustering": [[110, "cugraph-spectralmodularitymaximizationclustering"]], "cugraph.sssp": [[111, "cugraph-sssp"]], "cugraph.strongly_connected_components": [[112, "cugraph-strongly-connected-components"]], "cugraph.structure.NumberMap": [[113, "cugraph-structure-numbermap"]], "cugraph.structure.NumberMap.MultiGPU": [[114, "cugraph-structure-numbermap-multigpu"]], "cugraph.structure.NumberMap.SingleGPU": [[115, "cugraph-structure-numbermap-singlegpu"]], "cugraph.structure.NumberMap.add_internal_vertex_id": [[116, "cugraph-structure-numbermap-add-internal-vertex-id"]], "cugraph.structure.NumberMap.compute_vals": [[117, "cugraph-structure-numbermap-compute-vals"]], "cugraph.structure.NumberMap.compute_vals_types": [[118, "cugraph-structure-numbermap-compute-vals-types"]], "cugraph.structure.NumberMap.from_internal_vertex_id": [[119, "cugraph-structure-numbermap-from-internal-vertex-id"]], "cugraph.structure.NumberMap.generate_unused_column_name": [[120, "cugraph-structure-numbermap-generate-unused-column-name"]], "cugraph.structure.NumberMap.renumber": [[121, "cugraph-structure-numbermap-renumber"]], "cugraph.structure.NumberMap.renumber_and_segment": [[122, "cugraph-structure-numbermap-renumber-and-segment"]], "cugraph.structure.NumberMap.set_renumbered_col_names": [[123, "cugraph-structure-numbermap-set-renumbered-col-names"]], "cugraph.structure.NumberMap.to_internal_vertex_id": [[124, "cugraph-structure-numbermap-to-internal-vertex-id"]], "cugraph.structure.NumberMap.unrenumber": [[125, "cugraph-structure-numbermap-unrenumber"]], "cugraph.structure.NumberMap.vertex_column_size": [[126, "cugraph-structure-numbermap-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degree": [[127, "cugraph-structure-graph-implementation-simplegraphimpl-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degrees": [[128, "cugraph-structure-graph-implementation-simplegraphimpl-degrees"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list": [[129, "cugraph-structure-graph-implementation-simplegraphimpl-delete-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list": [[130, "cugraph-structure-graph-implementation-simplegraphimpl-delete-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.edges": [[131, "cugraph-structure-graph-implementation-simplegraphimpl-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch": [[132, "cugraph-structure-graph-implementation-simplegraphimpl-enable-batch"]], "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors": [[133, "cugraph-structure-graph-implementation-simplegraphimpl-get-two-hop-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge": [[134, "cugraph-structure-graph-implementation-simplegraphimpl-has-edge"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_node": [[135, "cugraph-structure-graph-implementation-simplegraphimpl-has-node"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop": [[136, "cugraph-structure-graph-implementation-simplegraphimpl-has-self-loop"]], "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree": [[137, "cugraph-structure-graph-implementation-simplegraphimpl-in-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors": [[138, "cugraph-structure-graph-implementation-simplegraphimpl-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.nodes": [[139, "cugraph-structure-graph-implementation-simplegraphimpl-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges": [[140, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes": [[141, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices": [[142, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-vertices"]], "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree": [[143, "cugraph-structure-graph-implementation-simplegraphimpl-out-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size": [[144, "cugraph-structure-graph-implementation-simplegraphimpl-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list": [[145, "cugraph-structure-graph-implementation-simplegraphimpl-view-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list": [[146, "cugraph-structure-graph-implementation-simplegraphimpl-view-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list": [[147, "cugraph-structure-graph-implementation-simplegraphimpl-view-transposed-adj-list"]], "cugraph.structure.shuffle": [[148, "cugraph-structure-shuffle"]], "cugraph.subgraph": [[149, "cugraph-subgraph"]], "cugraph.symmetrize": [[150, "cugraph-symmetrize"]], "cugraph.symmetrize_ddf": [[151, "cugraph-symmetrize-ddf"]], "cugraph.symmetrize_df": [[152, "cugraph-symmetrize-df"]], "cugraph.to_numpy_array": [[153, "cugraph-to-numpy-array"]], "cugraph.to_numpy_matrix": [[154, "cugraph-to-numpy-matrix"]], "cugraph.to_pandas_adjacency": [[155, "cugraph-to-pandas-adjacency"]], "cugraph.to_pandas_edgelist": [[156, "cugraph-to-pandas-edgelist"]], "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree": [[157, "cugraph-tree-minimum-spanning-tree-maximum-spanning-tree"]], "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree": [[158, "cugraph-tree-minimum-spanning-tree-minimum-spanning-tree"]], "cugraph.triangle_count": [[159, "cugraph-triangle-count"]], "cugraph.uniform_neighbor_sample": [[160, "cugraph-uniform-neighbor-sample"]], "cugraph.weakly_connected_components": [[161, "cugraph-weakly-connected-components"]], "cugraph_dgl.cugraph_storage.CuGraphStorage": [[162, "cugraph-dgl-cugraph-storage-cugraphstorage"]], "cugraph_dgl.cugraph_storage_from_heterograph": [[163, "cugraph-dgl-cugraph-storage-from-heterograph"]], "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore": [[164, "cugraph-pyg-data-cugraph-store-experimental-cugraphstore"]], "cugraph_pyg.loader.dispatch.call_cugraph_algorithm": [[165, "cugraph-pyg-loader-dispatch-call-cugraph-algorithm"]], "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler": [[166, "cugraph-pyg-sampler-cugraph-sampler-experimental-cugraphsampler"]], "cugraph_service_client.client.CugraphServiceClient": [[167, "cugraph-service-client-client-cugraphserviceclient"]], "cugraph_service_client.client.DeviceArrayAllocator": [[168, "cugraph-service-client-client-devicearrayallocator"]], "cugraph_service_client.client.RunAsyncioThread": [[169, "cugraph-service-client-client-runasynciothread"]], "cugraph_service_client.client.run_async": [[170, "cugraph-service-client-client-run-async"]], "cugraph_service_client.remote_graph.RemoteGraph": [[171, "cugraph-service-client-remote-graph-remotegraph"]], "cugraph_service_client.remote_graph_utils": [[172, "module-cugraph_service_client.remote_graph_utils"]], "cugraph_service_client.types.GraphVertexEdgeIDWrapper": [[173, "cugraph-service-client-types-graphvertexedgeidwrapper"]], "cugraph_service_client.types.UnionWrapper": [[174, "cugraph-service-client-types-unionwrapper"]], "cugraph_service_client.types.ValueWrapper": [[175, "cugraph-service-client-types-valuewrapper"]], "cugraph_service_server.cugraph_handler.CugraphHandler": [[176, "cugraph-service-server-cugraph-handler-cugraphhandler"]], "cugraph_service_server.cugraph_handler.ExtensionServerFacade": [[177, "cugraph-service-server-cugraph-handler-extensionserverfacade"]], "cugraph_service_server.cugraph_handler.call_algo": [[178, "cugraph-service-server-cugraph-handler-call-algo"]], "pylibcugraph.bfs": [[179, "pylibcugraph-bfs"]], "pylibcugraph.eigenvector_centrality": [[180, "pylibcugraph-eigenvector-centrality"]], "pylibcugraph.hits": [[181, "pylibcugraph-hits"]], "pylibcugraph.katz_centrality": [[182, "pylibcugraph-katz-centrality"]], "pylibcugraph.node2vec": [[183, "pylibcugraph-node2vec"]], "pylibcugraph.pagerank": [[184, "pylibcugraph-pagerank"]], "pylibcugraph.sssp": [[185, "pylibcugraph-sssp"]], "pylibcugraph.strongly_connected_components": [[186, "pylibcugraph-strongly-connected-components"]], "pylibcugraph.weakly_connected_components": [[187, "pylibcugraph-weakly-connected-components"]], "CuGraph C and C++ API Links": [[188, "cugraph-c-and-c-api-links"]], "Centrality": [[189, "centrality"]], "Betweenness Centrality": [[189, "betweenness-centrality"]], "Katz Centrality": [[189, "katz-centrality"]], "Katz Centrality (MG)": [[189, "katz-centrality-mg"]], "Degree Centrality": [[189, "degree-centrality"]], "Eigenvector Centrality": [[189, "eigenvector-centrality"]], "Eigenvector Centrality (MG)": [[189, "eigenvector-centrality-mg"]], "Community": [[190, "community"]], "EgoNet": [[190, "egonet"]], "Ensemble clustering for graphs (ECG)": [[190, "ensemble-clustering-for-graphs-ecg"]], "K-Truss": [[190, "k-truss"]], "Leiden": [[190, "leiden"]], "Louvain": [[190, "louvain"]], "Louvain (MG)": [[190, "louvain-mg"]], "Spectral Clustering": [[190, "spectral-clustering"]], "Subgraph Extraction": [[190, "subgraph-extraction"]], "Triangle Counting": [[190, "triangle-counting"]], "Components": [[191, "components"]], "Connected Components": [[191, "connected-components"]], "Connected Components (MG)": [[191, "connected-components-mg"]], "Cores": [[192, "cores"]], "Core Number": [[192, "core-number"]], "K-Core": [[192, "k-core"]], "cugraph-dgl API Refrerence": [[193, "cugraph-dgl-api-refrerence"]], "Methods": [[193, "methods"], [201, "methods"], [208, "methods"]], "cugraph-pyg API Reference": [[194, "cugraph-pyg-api-reference"]], "cugraph-service-client API Reference": [[195, "cugraph-service-client-api-reference"]], "cugraph-service-server API Reference": [[196, "cugraph-service-server-api-reference"]], "cugraph API Reference": [[197, "cugraph-api-reference"]], "API Documentation": [[197, null]], "Multi-GPU with cuGraph": [[198, "multi-gpu-with-cugraph"]], "Distributed graph analytics": [[198, "distributed-graph-analytics"]], "Example": [[198, "example"]], "Generator": [[199, "generator"]], "RMAT": [[199, "rmat"]], "Graph Implementation": [[200, "graph-implementation"], [200, "id1"]], "DASK MG Helper functions": [[201, "dask-mg-helper-functions"]], "Python API reference": [[202, "python-api-reference"]], "Python API Documentation": [[202, null]], "Layout": [[203, "layout"]], "Force Atlas 2": [[203, "force-atlas-2"]], "Linear Assignment": [[204, "linear-assignment"]], "Hungarian": [[204, "hungarian"]], "Link Analysis": [[205, "link-analysis"]], "HITS": [[205, "hits"]], "HITS (MG)": [[205, "hits-mg"]], "Pagerank": [[205, "pagerank"]], "Pagerank (MG)": [[205, "pagerank-mg"]], "Link Prediction": [[206, "link-prediction"]], "Jaccard Coefficient": [[206, "jaccard-coefficient"]], "Overlap Coefficient": [[206, "overlap-coefficient"]], "Sorensen Coefficient": [[206, "sorensen-coefficient"]], "Property Graph": [[207, "property-graph"], [207, "id1"]], "pylibcugraph API reference": [[208, "pylibcugraph-api-reference"]], "Sampling": [[209, "sampling"]], "Random Walks": [[209, "random-walks"]], "Node2Vec": [[209, "node2vec"]], "Graph Classes": [[210, "graph-classes"]], "Constructors": [[210, "constructors"]], "Adding Data": [[210, "adding-data"]], "Checks": [[210, "checks"]], "Symmetrize": [[210, "symmetrize"]], "Conversion from Other Formats": [[210, "conversion-from-other-formats"]], "NumberMap": [[210, "numbermap"]], "Other": [[210, "other"]], "Traversal": [[211, "traversal"]], "Breadth-first-search": [[211, "breadth-first-search"]], "Breadth-first-search (MG)": [[211, "breadth-first-search-mg"]], "Single-source-shortest-path": [[211, "single-source-shortest-path"]], "Single-source-shortest-path (MG)": [[211, "single-source-shortest-path-mg"]], "Tree": [[212, "tree"]], "Minimum Spanning Tree": [[212, "minimum-spanning-tree"]], "Maximum Spanning Tree": [[212, "maximum-spanning-tree"]], "cuGraph Blogs and Presentations": [[214, "cugraph-blogs-and-presentations"]], "Blogs & Conferences": [[214, "blogs-conferences"]], "2022": [[214, "id1"]], "2021": [[214, "id2"]], "2020": [[214, "id3"]], "2019": [[214, "id4"]], "2018": [[214, "id5"]], "Media": [[214, "media"]], "Academic Papers": [[214, "academic-papers"]], "Other Blogs": [[214, "other-blogs"]], "RAPIDS Event Notebooks": [[214, "rapids-event-notebooks"]], "Method Cascading and cuGraph": [[215, "method-cascading-and-cugraph"]], "Graph Data Objects": [[215, "graph-data-objects"]], "Algorithms": [[215, "algorithms"], [217, "algorithms"]], "cuGraph Introduction": [[216, "cugraph-introduction"]], "Vision": [[216, "vision"]], "Terminology": [[216, "terminology"]], "Roadmap": [[216, "roadmap"]], "References": [[217, "references"]], "Architecture": [[217, "architecture"]], "Other Papers": [[217, "other-papers"]], "Data Sets": [[217, "data-sets"]], "Basics": [[219, "basics"], [221, "basics"]], "NetworkX Compatibility and Transition": [[220, "networkx-compatibility-and-transition"]], "Last Update": [[220, "last-update"]], "Easy Path \u2013 Use NetworkX Graph Objects, Accelerated Algorithms": [[220, "easy-path-use-networkx-graph-objects-accelerated-algorithms"]], "Differences in Algorithms": [[220, "differences-in-algorithms"]], "Algorithms that exactly match": [[220, "algorithms-that-exactly-match"]], "Algorithms that do not copy over additional attributes": [[220, "algorithms-that-do-not-copy-over-additional-attributes"]], "Algorithms not in NetworkX": [[220, "algorithms-not-in-networkx"]], "Algorithm where not all arguments are supported": [[220, "algorithm-where-not-all-arguments-are-supported"]], "Algorithms where the results are different": [[220, "algorithms-where-the-results-are-different"]], "Graph Building": [[220, "graph-building"]], "Welcome to cugraph\u2019s documentation!": [[221, "welcome-to-cugraph-s-documentation"]], "API": [[221, "api"]], "Indices and tables": [[221, "indices-and-tables"]]}, "indexentries": {"bipartitegraph (class in cugraph)": [[0, "cugraph.BiPartiteGraph"]], "__init__() (cugraph.bipartitegraph method)": [[0, "cugraph.BiPartiteGraph.__init__"]], "graph (class in cugraph)": [[1, "cugraph.Graph"]], "__init__() (cugraph.graph method)": [[1, "cugraph.Graph.__init__"]], "add_internal_vertex_id() (cugraph.graph method)": [[2, "cugraph.Graph.add_internal_vertex_id"]], "add_nodes_from() (cugraph.graph method)": [[3, "cugraph.Graph.add_nodes_from"]], "clear() (cugraph.graph method)": [[4, "cugraph.Graph.clear"]], "from_cudf_adjlist() (cugraph.graph method)": [[5, "cugraph.Graph.from_cudf_adjlist"]], "from_cudf_edgelist() (cugraph.graph method)": [[6, "cugraph.Graph.from_cudf_edgelist"]], "from_dask_cudf_edgelist() (cugraph.graph method)": [[7, "cugraph.Graph.from_dask_cudf_edgelist"]], "from_numpy_array() (cugraph.graph method)": [[8, "cugraph.Graph.from_numpy_array"]], "from_numpy_matrix() (cugraph.graph method)": [[9, "cugraph.Graph.from_numpy_matrix"]], "from_pandas_adjacency() (cugraph.graph method)": [[10, "cugraph.Graph.from_pandas_adjacency"]], "from_pandas_edgelist() (cugraph.graph method)": [[11, "cugraph.Graph.from_pandas_edgelist"]], "has_isolated_vertices() (cugraph.graph method)": [[12, "cugraph.Graph.has_isolated_vertices"]], "is_bipartite() (cugraph.graph method)": [[13, "cugraph.Graph.is_bipartite"]], "is_directed() (cugraph.graph method)": [[14, "cugraph.Graph.is_directed"]], "is_multigraph() (cugraph.graph method)": [[15, "cugraph.Graph.is_multigraph"]], "is_multipartite() (cugraph.graph method)": [[16, "cugraph.Graph.is_multipartite"]], "is_renumbered() (cugraph.graph method)": [[17, "cugraph.Graph.is_renumbered"]], "is_weighted() (cugraph.graph method)": [[18, "cugraph.Graph.is_weighted"]], "lookup_internal_vertex_id() (cugraph.graph method)": [[19, "cugraph.Graph.lookup_internal_vertex_id"]], "to_directed() (cugraph.graph method)": [[20, "cugraph.Graph.to_directed"]], "to_undirected() (cugraph.graph method)": [[21, "cugraph.Graph.to_undirected"]], "unrenumber() (cugraph.graph method)": [[22, "cugraph.Graph.unrenumber"]], "multigraph (class in cugraph)": [[23, "cugraph.MultiGraph"]], "__init__() (cugraph.multigraph method)": [[23, "cugraph.MultiGraph.__init__"]], "analyzeclustering_edge_cut() (in module cugraph)": [[24, "cugraph.analyzeClustering_edge_cut"]], "analyzeclustering_modularity() (in module cugraph)": [[25, "cugraph.analyzeClustering_modularity"]], "analyzeclustering_ratio_cut() (in module cugraph)": [[26, "cugraph.analyzeClustering_ratio_cut"]], "batched_ego_graphs() (in module cugraph)": [[27, "cugraph.batched_ego_graphs"]], "betweenness_centrality() (in module cugraph)": [[28, "cugraph.betweenness_centrality"]], "bfs() (in module cugraph)": [[29, "cugraph.bfs"]], "bfs_edges() (in module cugraph)": [[30, "cugraph.bfs_edges"]], "eigenvector_centrality() (in module cugraph.centrality)": [[31, "cugraph.centrality.eigenvector_centrality"]], "connected_components() (in module cugraph)": [[32, "cugraph.connected_components"]], "core_number() (in module cugraph)": [[33, "cugraph.core_number"]], "eigenvector_centrality() (in module cugraph.dask.centrality.eigenvector_centrality)": [[34, "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality"]], "katz_centrality() (in module cugraph.dask.centrality.katz_centrality)": [[35, "cugraph.dask.centrality.katz_centrality.katz_centrality"]], "get_chunksize() (in module cugraph.dask.common.read_utils)": [[36, "cugraph.dask.common.read_utils.get_chunksize"]], "destroy() (in module cugraph.dask.comms.comms)": [[37, "cugraph.dask.comms.comms.destroy"]], "get_2d_partition() (in module cugraph.dask.comms.comms)": [[38, "cugraph.dask.comms.comms.get_2D_partition"]], "get_comms() (in module cugraph.dask.comms.comms)": [[39, "cugraph.dask.comms.comms.get_comms"]], "get_default_handle() (in module cugraph.dask.comms.comms)": [[40, "cugraph.dask.comms.comms.get_default_handle"]], "get_handle() (in module cugraph.dask.comms.comms)": [[41, "cugraph.dask.comms.comms.get_handle"]], "get_session_id() (in module cugraph.dask.comms.comms)": [[42, "cugraph.dask.comms.comms.get_session_id"]], "get_worker_id() (in module cugraph.dask.comms.comms)": [[43, "cugraph.dask.comms.comms.get_worker_id"]], "get_workers() (in module cugraph.dask.comms.comms)": [[44, "cugraph.dask.comms.comms.get_workers"]], "initialize() (in module cugraph.dask.comms.comms)": [[45, "cugraph.dask.comms.comms.initialize"]], "is_initialized() (in module cugraph.dask.comms.comms)": [[46, "cugraph.dask.comms.comms.is_initialized"]], "louvain() (in module cugraph.dask.community.louvain)": [[47, "cugraph.dask.community.louvain.louvain"]], "weakly_connected_components() (in module cugraph.dask.components.connectivity)": [[48, "cugraph.dask.components.connectivity.weakly_connected_components"]], "hits() (in module cugraph.dask.link_analysis.hits)": [[49, "cugraph.dask.link_analysis.hits.hits"]], "pagerank() (in module cugraph.dask.link_analysis.pagerank)": [[50, "cugraph.dask.link_analysis.pagerank.pagerank"]], "bfs() (in module cugraph.dask.traversal.bfs)": [[51, "cugraph.dask.traversal.bfs.bfs"]], "sssp() (in module cugraph.dask.traversal.sssp)": [[52, "cugraph.dask.traversal.sssp.sssp"]], "degree_centrality() (in module cugraph)": [[53, "cugraph.degree_centrality"]], "dense_hungarian() (in module cugraph)": [[54, "cugraph.dense_hungarian"]], "ecg() (in module cugraph)": [[55, "cugraph.ecg"]], "edge_betweenness_centrality() (in module cugraph)": [[56, "cugraph.edge_betweenness_centrality"]], "ego_graph() (in module cugraph)": [[57, "cugraph.ego_graph"]], "propertygraph (class in cugraph.experimental)": [[58, "cugraph.experimental.PropertyGraph"]], "__init__() (cugraph.experimental.propertygraph method)": [[58, "cugraph.experimental.PropertyGraph.__init__"]], "add_edge_data() (cugraph.experimental.propertygraph method)": [[59, "cugraph.experimental.PropertyGraph.add_edge_data"]], "add_vertex_data() (cugraph.experimental.propertygraph method)": [[60, "cugraph.experimental.PropertyGraph.add_vertex_data"]], "annotate_dataframe() (cugraph.experimental.propertygraph method)": [[61, "cugraph.experimental.PropertyGraph.annotate_dataframe"]], "edge_props_to_graph() (cugraph.experimental.propertygraph method)": [[62, "cugraph.experimental.PropertyGraph.edge_props_to_graph"]], "extract_subgraph() (cugraph.experimental.propertygraph method)": [[63, "cugraph.experimental.PropertyGraph.extract_subgraph"]], "get_edge_data() (cugraph.experimental.propertygraph method)": [[64, "cugraph.experimental.PropertyGraph.get_edge_data"]], "get_num_edges() (cugraph.experimental.propertygraph method)": [[65, "cugraph.experimental.PropertyGraph.get_num_edges"]], "get_num_vertices() (cugraph.experimental.propertygraph method)": [[66, "cugraph.experimental.PropertyGraph.get_num_vertices"]], "get_vertex_data() (cugraph.experimental.propertygraph method)": [[67, "cugraph.experimental.PropertyGraph.get_vertex_data"]], "get_vertices() (cugraph.experimental.propertygraph method)": [[68, "cugraph.experimental.PropertyGraph.get_vertices"]], "has_duplicate_edges() (cugraph.experimental.propertygraph class method)": [[69, "cugraph.experimental.PropertyGraph.has_duplicate_edges"]], "is_multigraph() (cugraph.experimental.propertygraph class method)": [[70, "cugraph.experimental.PropertyGraph.is_multigraph"]], "renumber_edges_by_type() (cugraph.experimental.propertygraph method)": [[71, "cugraph.experimental.PropertyGraph.renumber_edges_by_type"]], "renumber_vertices_by_type() (cugraph.experimental.propertygraph method)": [[72, "cugraph.experimental.PropertyGraph.renumber_vertices_by_type"]], "select_edges() (cugraph.experimental.propertygraph method)": [[73, "cugraph.experimental.PropertyGraph.select_edges"]], "select_vertices() (cugraph.experimental.propertygraph method)": [[74, "cugraph.experimental.PropertyGraph.select_vertices"]], "propertyselection (class in cugraph.experimental)": [[75, "cugraph.experimental.PropertySelection"]], "__init__() (cugraph.experimental.propertyselection method)": [[75, "cugraph.experimental.PropertySelection.__init__"]], "filter_unreachable() (in module cugraph)": [[76, "cugraph.filter_unreachable"]], "force_atlas2() (in module cugraph)": [[77, "cugraph.force_atlas2"]], "from_adjlist() (in module cugraph)": [[78, "cugraph.from_adjlist"]], "from_cudf_edgelist() (in module cugraph)": [[79, "cugraph.from_cudf_edgelist"]], "from_edgelist() (in module cugraph)": [[80, "cugraph.from_edgelist"]], "from_numpy_array() (in module cugraph)": [[81, "cugraph.from_numpy_array"]], "from_numpy_matrix() (in module cugraph)": [[82, "cugraph.from_numpy_matrix"]], "from_pandas_adjacency() (in module cugraph)": [[83, "cugraph.from_pandas_adjacency"]], "from_pandas_edgelist() (in module cugraph)": [[84, "cugraph.from_pandas_edgelist"]], "rmat() (in module cugraph.generators)": [[85, "cugraph.generators.rmat"]], "hits() (in module cugraph)": [[86, "cugraph.hits"]], "hungarian() (in module cugraph)": [[87, "cugraph.hungarian"]], "hypergraph() (in module cugraph)": [[88, "cugraph.hypergraph"]], "jaccard() (in module cugraph)": [[89, "cugraph.jaccard"]], "jaccard_coefficient() (in module cugraph)": [[90, "cugraph.jaccard_coefficient"]], "jaccard_w() (in module cugraph)": [[91, "cugraph.jaccard_w"]], "k_core() (in module cugraph)": [[92, "cugraph.k_core"]], "k_truss() (in module cugraph)": [[93, "cugraph.k_truss"]], "katz_centrality() (in module cugraph)": [[94, "cugraph.katz_centrality"]], "ktruss_subgraph() (in module cugraph)": [[95, "cugraph.ktruss_subgraph"]], "leiden() (in module cugraph)": [[96, "cugraph.leiden"]], "louvain() (in module cugraph)": [[97, "cugraph.louvain"]], "node2vec() (in module cugraph)": [[98, "cugraph.node2vec"]], "overlap() (in module cugraph)": [[99, "cugraph.overlap"]], "overlap_coefficient() (in module cugraph)": [[100, "cugraph.overlap_coefficient"]], "overlap_w() (in module cugraph)": [[101, "cugraph.overlap_w"]], "pagerank() (in module cugraph)": [[102, "cugraph.pagerank"]], "random_walks() (in module cugraph)": [[103, "cugraph.random_walks"]], "shortest_path() (in module cugraph)": [[104, "cugraph.shortest_path"]], "shortest_path_length() (in module cugraph)": [[105, "cugraph.shortest_path_length"]], "sorensen() (in module cugraph)": [[106, "cugraph.sorensen"]], "sorensen_coefficient() (in module cugraph)": [[107, "cugraph.sorensen_coefficient"]], "sorensen_w() (in module cugraph)": [[108, "cugraph.sorensen_w"]], "spectralbalancedcutclustering() (in module cugraph)": [[109, "cugraph.spectralBalancedCutClustering"]], "spectralmodularitymaximizationclustering() (in module cugraph)": [[110, "cugraph.spectralModularityMaximizationClustering"]], "sssp() (in module cugraph)": [[111, "cugraph.sssp"]], "strongly_connected_components() (in module cugraph)": [[112, "cugraph.strongly_connected_components"]], "numbermap (class in cugraph.structure)": [[113, "cugraph.structure.NumberMap"]], "__init__() (cugraph.structure.numbermap method)": [[113, "cugraph.structure.NumberMap.__init__"]], "add_internal_vertex_id() (cugraph.structure.numbermap method)": [[116, "cugraph.structure.NumberMap.add_internal_vertex_id"]], "compute_vals() (cugraph.structure.numbermap static method)": [[117, "cugraph.structure.NumberMap.compute_vals"]], "compute_vals_types() (cugraph.structure.numbermap static method)": [[118, "cugraph.structure.NumberMap.compute_vals_types"]], "from_internal_vertex_id() (cugraph.structure.numbermap method)": [[119, "cugraph.structure.NumberMap.from_internal_vertex_id"]], "generate_unused_column_name() (cugraph.structure.numbermap static method)": [[120, "cugraph.structure.NumberMap.generate_unused_column_name"]], "renumber() (cugraph.structure.numbermap static method)": [[121, "cugraph.structure.NumberMap.renumber"]], "renumber_and_segment() (cugraph.structure.numbermap static method)": [[122, "cugraph.structure.NumberMap.renumber_and_segment"]], "set_renumbered_col_names() (cugraph.structure.numbermap method)": [[123, "cugraph.structure.NumberMap.set_renumbered_col_names"]], "to_internal_vertex_id() (cugraph.structure.numbermap method)": [[124, "cugraph.structure.NumberMap.to_internal_vertex_id"]], "unrenumber() (cugraph.structure.numbermap method)": [[125, "cugraph.structure.NumberMap.unrenumber"]], "vertex_column_size() (cugraph.structure.numbermap method)": [[126, "cugraph.structure.NumberMap.vertex_column_size"]], "degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[127, "cugraph.structure.graph_implementation.simpleGraphImpl.degree"]], "degrees() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[128, "cugraph.structure.graph_implementation.simpleGraphImpl.degrees"]], "delete_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[129, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list"]], "delete_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[130, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list"]], "edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[131, "cugraph.structure.graph_implementation.simpleGraphImpl.edges"]], "enable_batch() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[132, "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch"]], "get_two_hop_neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[133, "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors"]], "has_edge() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[134, "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge"]], "has_node() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[135, "cugraph.structure.graph_implementation.simpleGraphImpl.has_node"]], "has_self_loop() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[136, "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop"]], "in_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[137, "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree"]], "neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[138, "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors"]], "nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[139, "cugraph.structure.graph_implementation.simpleGraphImpl.nodes"]], "number_of_edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[140, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges"]], "number_of_nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[141, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes"]], "number_of_vertices() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[142, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices"]], "out_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[143, "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree"]], "vertex_column_size() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[144, "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size"]], "view_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[145, "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list"]], "view_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[146, "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list"]], "view_transposed_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[147, "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list"]], "shuffle() (in module cugraph.structure)": [[148, "cugraph.structure.shuffle"]], "subgraph() (in module cugraph)": [[149, "cugraph.subgraph"]], "symmetrize() (in module cugraph)": [[150, "cugraph.symmetrize"]], "symmetrize_ddf() (in module cugraph)": [[151, "cugraph.symmetrize_ddf"]], "symmetrize_df() (in module cugraph)": [[152, "cugraph.symmetrize_df"]], "to_numpy_array() (in module cugraph)": [[153, "cugraph.to_numpy_array"]], "to_numpy_matrix() (in module cugraph)": [[154, "cugraph.to_numpy_matrix"]], "to_pandas_adjacency() (in module cugraph)": [[155, "cugraph.to_pandas_adjacency"]], "to_pandas_edgelist() (in module cugraph)": [[156, "cugraph.to_pandas_edgelist"]], "maximum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[157, "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree"]], "minimum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[158, "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree"]], "triangle_count() (in module cugraph)": [[159, "cugraph.triangle_count"]], "uniform_neighbor_sample() (in module cugraph)": [[160, "cugraph.uniform_neighbor_sample"]], "weakly_connected_components() (in module cugraph)": [[161, "cugraph.weakly_connected_components"]], "cugraphstorage (class in cugraph_dgl.cugraph_storage)": [[162, "cugraph_dgl.cugraph_storage.CuGraphStorage"]], "__init__() (cugraph_dgl.cugraph_storage.cugraphstorage method)": [[162, "cugraph_dgl.cugraph_storage.CuGraphStorage.__init__"]], "cugraph_storage_from_heterograph() (in module cugraph_dgl)": [[163, "cugraph_dgl.cugraph_storage_from_heterograph"]], "experimental__cugraphstore (class in cugraph_pyg.data.cugraph_store)": [[164, "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore"]], "__init__() (cugraph_pyg.data.cugraph_store.experimental__cugraphstore method)": [[164, "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore.__init__"]], "call_cugraph_algorithm() (in module cugraph_pyg.loader.dispatch)": [[165, "cugraph_pyg.loader.dispatch.call_cugraph_algorithm"]], "experimental__cugraphsampler (class in cugraph_pyg.sampler.cugraph_sampler)": [[166, "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler"]], "__init__() (cugraph_pyg.sampler.cugraph_sampler.experimental__cugraphsampler method)": [[166, "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler.__init__"]], "cugraphserviceclient (class in cugraph_service_client.client)": [[167, "cugraph_service_client.client.CugraphServiceClient"]], "__init__() (cugraph_service_client.client.cugraphserviceclient method)": [[167, "cugraph_service_client.client.CugraphServiceClient.__init__"]], "devicearrayallocator (class in cugraph_service_client.client)": [[168, "cugraph_service_client.client.DeviceArrayAllocator"]], "__init__() (cugraph_service_client.client.devicearrayallocator method)": [[168, "cugraph_service_client.client.DeviceArrayAllocator.__init__"]], "runasynciothread (class in cugraph_service_client.client)": [[169, "cugraph_service_client.client.RunAsyncioThread"]], "__init__() (cugraph_service_client.client.runasynciothread method)": [[169, "cugraph_service_client.client.RunAsyncioThread.__init__"]], "run_async() (in module cugraph_service_client.client)": [[170, "cugraph_service_client.client.run_async"]], "remotegraph (class in cugraph_service_client.remote_graph)": [[171, "cugraph_service_client.remote_graph.RemoteGraph"]], "__init__() (cugraph_service_client.remote_graph.remotegraph method)": [[171, "cugraph_service_client.remote_graph.RemoteGraph.__init__"]], "cugraph_service_client.remote_graph_utils": [[172, "module-cugraph_service_client.remote_graph_utils"]], "module": [[172, "module-cugraph_service_client.remote_graph_utils"]], "graphvertexedgeidwrapper (class in cugraph_service_client.types)": [[173, "cugraph_service_client.types.GraphVertexEdgeIDWrapper"]], "__init__() (cugraph_service_client.types.graphvertexedgeidwrapper method)": [[173, "cugraph_service_client.types.GraphVertexEdgeIDWrapper.__init__"]], "unionwrapper (class in cugraph_service_client.types)": [[174, "cugraph_service_client.types.UnionWrapper"]], "__init__() (cugraph_service_client.types.unionwrapper method)": [[174, "cugraph_service_client.types.UnionWrapper.__init__"]], "valuewrapper (class in cugraph_service_client.types)": [[175, "cugraph_service_client.types.ValueWrapper"]], "__init__() (cugraph_service_client.types.valuewrapper method)": [[175, "cugraph_service_client.types.ValueWrapper.__init__"]], "cugraphhandler (class in cugraph_service_server.cugraph_handler)": [[176, "cugraph_service_server.cugraph_handler.CugraphHandler"]], "__init__() (cugraph_service_server.cugraph_handler.cugraphhandler method)": [[176, "cugraph_service_server.cugraph_handler.CugraphHandler.__init__"]], "extensionserverfacade (class in cugraph_service_server.cugraph_handler)": [[177, "cugraph_service_server.cugraph_handler.ExtensionServerFacade"]], "__init__() (cugraph_service_server.cugraph_handler.extensionserverfacade method)": [[177, "cugraph_service_server.cugraph_handler.ExtensionServerFacade.__init__"]], "call_algo() (in module cugraph_service_server.cugraph_handler)": [[178, "cugraph_service_server.cugraph_handler.call_algo"]], "bfs() (in module pylibcugraph)": [[179, "pylibcugraph.bfs"]], "eigenvector_centrality() (in module pylibcugraph)": [[180, "pylibcugraph.eigenvector_centrality"]], "hits() (in module pylibcugraph)": [[181, "pylibcugraph.hits"]], "katz_centrality() (in module pylibcugraph)": [[182, "pylibcugraph.katz_centrality"]], "node2vec() (in module pylibcugraph)": [[183, "pylibcugraph.node2vec"]], "pagerank() (in module pylibcugraph)": [[184, "pylibcugraph.pagerank"]], "sssp() (in module pylibcugraph)": [[185, "pylibcugraph.sssp"]], "strongly_connected_components() (in module pylibcugraph)": [[186, "pylibcugraph.strongly_connected_components"]], "weakly_connected_components() (in module pylibcugraph)": [[187, "pylibcugraph.weakly_connected_components"]]}})