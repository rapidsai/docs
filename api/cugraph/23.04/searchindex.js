Search.setIndex({"docnames": ["api_docs/api/cugraph-dgl/cugraph_dgl.convert.cugraph_storage_from_heterograph", "api_docs/api/cugraph-dgl/cugraph_dgl.cugraph_storage.CuGraphStorage", "api_docs/api/cugraph-pyg/cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore", "api_docs/api/cugraph-pyg/cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler", "api_docs/api/cugraph.BiPartiteGraph", "api_docs/api/cugraph.Graph", "api_docs/api/cugraph.Graph.add_internal_vertex_id", "api_docs/api/cugraph.Graph.add_nodes_from", "api_docs/api/cugraph.Graph.clear", "api_docs/api/cugraph.Graph.from_cudf_adjlist", "api_docs/api/cugraph.Graph.from_cudf_edgelist", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist", "api_docs/api/cugraph.Graph.from_numpy_array", "api_docs/api/cugraph.Graph.from_numpy_matrix", "api_docs/api/cugraph.Graph.from_pandas_adjacency", "api_docs/api/cugraph.Graph.from_pandas_edgelist", "api_docs/api/cugraph.Graph.has_isolated_vertices", "api_docs/api/cugraph.Graph.is_bipartite", "api_docs/api/cugraph.Graph.is_directed", "api_docs/api/cugraph.Graph.is_multigraph", "api_docs/api/cugraph.Graph.is_multipartite", "api_docs/api/cugraph.Graph.is_renumbered", "api_docs/api/cugraph.Graph.is_weighted", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id", "api_docs/api/cugraph.Graph.to_directed", "api_docs/api/cugraph.Graph.to_undirected", "api_docs/api/cugraph.Graph.unrenumber", "api_docs/api/cugraph.MultiGraph", "api_docs/api/cugraph.from_adjlist", "api_docs/api/cugraph.from_cudf_edgelist", "api_docs/api/cugraph.from_edgelist", "api_docs/api/cugraph.from_numpy_array", "api_docs/api/cugraph.from_numpy_matrix", "api_docs/api/cugraph.from_pandas_adjacency", "api_docs/api/cugraph.from_pandas_edgelist", "api_docs/api/cugraph.hypergraph", "api_docs/api/cugraph.structure.NumberMap", "api_docs/api/cugraph.structure.NumberMap.MultiGPU", "api_docs/api/cugraph.structure.NumberMap.SingleGPU", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.compute_vals", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name", "api_docs/api/cugraph.structure.NumberMap.renumber", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.unrenumber", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size", "api_docs/api/cugraph.symmetrize", "api_docs/api/cugraph.symmetrize_ddf", "api_docs/api/cugraph.symmetrize_df", "api_docs/api/cugraph.to_numpy_array", "api_docs/api/cugraph.to_numpy_matrix", "api_docs/api/cugraph.to_pandas_adjacency", "api_docs/api/cugraph.to_pandas_edgelist", "api_docs/api/cugraph/cugraph.BiPartiteGraph", "api_docs/api/cugraph/cugraph.Graph", "api_docs/api/cugraph/cugraph.Graph.add_internal_vertex_id", "api_docs/api/cugraph/cugraph.Graph.add_nodes_from", "api_docs/api/cugraph/cugraph.Graph.clear", "api_docs/api/cugraph/cugraph.Graph.from_cudf_adjlist", "api_docs/api/cugraph/cugraph.Graph.from_cudf_edgelist", "api_docs/api/cugraph/cugraph.Graph.from_dask_cudf_edgelist", "api_docs/api/cugraph/cugraph.Graph.from_numpy_array", "api_docs/api/cugraph/cugraph.Graph.from_numpy_matrix", "api_docs/api/cugraph/cugraph.Graph.from_pandas_adjacency", "api_docs/api/cugraph/cugraph.Graph.from_pandas_edgelist", "api_docs/api/cugraph/cugraph.Graph.has_isolated_vertices", "api_docs/api/cugraph/cugraph.Graph.is_bipartite", "api_docs/api/cugraph/cugraph.Graph.is_directed", "api_docs/api/cugraph/cugraph.Graph.is_multigraph", "api_docs/api/cugraph/cugraph.Graph.is_multipartite", "api_docs/api/cugraph/cugraph.Graph.is_renumbered", "api_docs/api/cugraph/cugraph.Graph.is_weighted", "api_docs/api/cugraph/cugraph.Graph.lookup_internal_vertex_id", "api_docs/api/cugraph/cugraph.Graph.to_directed", "api_docs/api/cugraph/cugraph.Graph.to_undirected", "api_docs/api/cugraph/cugraph.Graph.unrenumber", "api_docs/api/cugraph/cugraph.MultiGraph", "api_docs/api/cugraph/cugraph.analyzeClustering_edge_cut", "api_docs/api/cugraph/cugraph.analyzeClustering_modularity", "api_docs/api/cugraph/cugraph.analyzeClustering_ratio_cut", "api_docs/api/cugraph/cugraph.batched_ego_graphs", "api_docs/api/cugraph/cugraph.betweenness_centrality", "api_docs/api/cugraph/cugraph.bfs", "api_docs/api/cugraph/cugraph.bfs_edges", "api_docs/api/cugraph/cugraph.centrality.eigenvector_centrality", "api_docs/api/cugraph/cugraph.connected_components", "api_docs/api/cugraph/cugraph.core_number", "api_docs/api/cugraph/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "api_docs/api/cugraph/cugraph.dask.centrality.katz_centrality.katz_centrality", "api_docs/api/cugraph/cugraph.dask.common.read_utils.get_chunksize", "api_docs/api/cugraph/cugraph.dask.comms.comms.destroy", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_2D_partition", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_comms", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_default_handle", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_handle", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_session_id", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_worker_id", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_workers", "api_docs/api/cugraph/cugraph.dask.comms.comms.initialize", "api_docs/api/cugraph/cugraph.dask.comms.comms.is_initialized", "api_docs/api/cugraph/cugraph.dask.community.louvain.louvain", "api_docs/api/cugraph/cugraph.dask.components.connectivity.weakly_connected_components", "api_docs/api/cugraph/cugraph.dask.link_analysis.hits.hits", "api_docs/api/cugraph/cugraph.dask.link_analysis.pagerank.pagerank", "api_docs/api/cugraph/cugraph.dask.traversal.bfs.bfs", "api_docs/api/cugraph/cugraph.dask.traversal.sssp.sssp", "api_docs/api/cugraph/cugraph.degree_centrality", "api_docs/api/cugraph/cugraph.dense_hungarian", "api_docs/api/cugraph/cugraph.ecg", "api_docs/api/cugraph/cugraph.edge_betweenness_centrality", "api_docs/api/cugraph/cugraph.ego_graph", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.add_edge_data", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.add_vertex_data", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.annotate_dataframe", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.edge_props_to_graph", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.extract_subgraph", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_edge_data", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_num_edges", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_num_vertices", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_vertex_data", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_vertices", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.has_duplicate_edges", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.is_multigraph", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.renumber_edges_by_type", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.renumber_vertices_by_type", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.select_edges", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.select_vertices", "api_docs/api/cugraph/cugraph.experimental.PropertySelection", "api_docs/api/cugraph/cugraph.filter_unreachable", "api_docs/api/cugraph/cugraph.force_atlas2", "api_docs/api/cugraph/cugraph.from_adjlist", "api_docs/api/cugraph/cugraph.from_cudf_edgelist", "api_docs/api/cugraph/cugraph.from_edgelist", "api_docs/api/cugraph/cugraph.from_numpy_array", "api_docs/api/cugraph/cugraph.from_numpy_matrix", "api_docs/api/cugraph/cugraph.from_pandas_adjacency", "api_docs/api/cugraph/cugraph.from_pandas_edgelist", "api_docs/api/cugraph/cugraph.generators.rmat", "api_docs/api/cugraph/cugraph.hits", "api_docs/api/cugraph/cugraph.hungarian", "api_docs/api/cugraph/cugraph.hypergraph", "api_docs/api/cugraph/cugraph.jaccard", "api_docs/api/cugraph/cugraph.jaccard_coefficient", "api_docs/api/cugraph/cugraph.jaccard_w", "api_docs/api/cugraph/cugraph.k_core", "api_docs/api/cugraph/cugraph.k_truss", "api_docs/api/cugraph/cugraph.katz_centrality", "api_docs/api/cugraph/cugraph.ktruss_subgraph", "api_docs/api/cugraph/cugraph.leiden", "api_docs/api/cugraph/cugraph.louvain", "api_docs/api/cugraph/cugraph.node2vec", "api_docs/api/cugraph/cugraph.overlap", "api_docs/api/cugraph/cugraph.overlap_coefficient", "api_docs/api/cugraph/cugraph.overlap_w", "api_docs/api/cugraph/cugraph.pagerank", "api_docs/api/cugraph/cugraph.random_walks", "api_docs/api/cugraph/cugraph.shortest_path", "api_docs/api/cugraph/cugraph.shortest_path_length", "api_docs/api/cugraph/cugraph.sorensen", "api_docs/api/cugraph/cugraph.sorensen_coefficient", "api_docs/api/cugraph/cugraph.sorensen_w", "api_docs/api/cugraph/cugraph.spectralBalancedCutClustering", "api_docs/api/cugraph/cugraph.spectralModularityMaximizationClustering", "api_docs/api/cugraph/cugraph.sssp", "api_docs/api/cugraph/cugraph.strongly_connected_components", "api_docs/api/cugraph/cugraph.structure.NumberMap", "api_docs/api/cugraph/cugraph.structure.NumberMap.MultiGPU", "api_docs/api/cugraph/cugraph.structure.NumberMap.SingleGPU", "api_docs/api/cugraph/cugraph.structure.NumberMap.add_internal_vertex_id", "api_docs/api/cugraph/cugraph.structure.NumberMap.compute_vals", "api_docs/api/cugraph/cugraph.structure.NumberMap.compute_vals_types", "api_docs/api/cugraph/cugraph.structure.NumberMap.from_internal_vertex_id", "api_docs/api/cugraph/cugraph.structure.NumberMap.generate_unused_column_name", "api_docs/api/cugraph/cugraph.structure.NumberMap.renumber", "api_docs/api/cugraph/cugraph.structure.NumberMap.renumber_and_segment", "api_docs/api/cugraph/cugraph.structure.NumberMap.set_renumbered_col_names", "api_docs/api/cugraph/cugraph.structure.NumberMap.to_internal_vertex_id", "api_docs/api/cugraph/cugraph.structure.NumberMap.unrenumber", "api_docs/api/cugraph/cugraph.structure.NumberMap.vertex_column_size", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.degree", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.edges", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "api_docs/api/cugraph/cugraph.subgraph", "api_docs/api/cugraph/cugraph.symmetrize", "api_docs/api/cugraph/cugraph.symmetrize_ddf", "api_docs/api/cugraph/cugraph.symmetrize_df", "api_docs/api/cugraph/cugraph.to_numpy_array", "api_docs/api/cugraph/cugraph.to_numpy_matrix", "api_docs/api/cugraph/cugraph.to_pandas_adjacency", "api_docs/api/cugraph/cugraph.to_pandas_edgelist", "api_docs/api/cugraph/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "api_docs/api/cugraph/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "api_docs/api/cugraph/cugraph.triangle_count", "api_docs/api/cugraph/cugraph.uniform_neighbor_sample", "api_docs/api/cugraph/cugraph.weakly_connected_components", "api_docs/api/plc/pylibcugraph.bfs", "api_docs/api/plc/pylibcugraph.eigenvector_centrality", "api_docs/api/plc/pylibcugraph.hits", "api_docs/api/plc/pylibcugraph.katz_centrality", "api_docs/api/plc/pylibcugraph.node2vec", "api_docs/api/plc/pylibcugraph.pagerank", "api_docs/api/plc/pylibcugraph.sssp", "api_docs/api/plc/pylibcugraph.strongly_connected_components", "api_docs/api/plc/pylibcugraph.weakly_connected_components", "api_docs/api/service/cugraph_service_client.client.CugraphServiceClient", "api_docs/api/service/cugraph_service_client.client.DeviceArrayAllocator", "api_docs/api/service/cugraph_service_client.client.RunAsyncioThread", "api_docs/api/service/cugraph_service_client.client.run_async", "api_docs/api/service/cugraph_service_client.remote_graph.RemoteGraph", "api_docs/api/service/cugraph_service_client.remote_graph_utils", "api_docs/api/service/cugraph_service_client.types.GraphVertexEdgeIDWrapper", "api_docs/api/service/cugraph_service_client.types.UnionWrapper", "api_docs/api/service/cugraph_service_client.types.ValueWrapper", "api_docs/api/service/cugraph_service_server.cugraph_handler.CugraphHandler", "api_docs/api/service/cugraph_service_server.cugraph_handler.ExtensionServerFacade", "api_docs/api/service/cugraph_service_server.cugraph_handler.call_algo", "api_docs/cugraph-dgl/cugraph_dgl", "api_docs/cugraph-pyg/cugraph_pyg", "api_docs/cugraph/centrality", "api_docs/cugraph/community", "api_docs/cugraph/components", "api_docs/cugraph/cores", "api_docs/cugraph/cugraph_top", "api_docs/cugraph/dask-cugraph", "api_docs/cugraph/generator", "api_docs/cugraph/graph_implementation", "api_docs/cugraph/helper_functions", "api_docs/cugraph/layout", "api_docs/cugraph/linear_assignment", "api_docs/cugraph/link_analysis", "api_docs/cugraph/link_prediction", "api_docs/cugraph/property_graph", "api_docs/cugraph/sampling", "api_docs/cugraph/structure", "api_docs/cugraph/traversal", "api_docs/cugraph/tree", "api_docs/cugraph_c/c_and_cpp", "api_docs/index", "api_docs/plc/pylibcugraph", "api_docs/service/cugraph_service_client", "api_docs/service/cugraph_service_server", "api_docs/structure", "basics/coming_soon", "basics/cugraph_cascading", "basics/cugraph_intro", "basics/cugraph_toc", "basics/index", "basics/nx_transition", "dev_resources/API", "dev_resources/index", "graph_support/DGL_support", "graph_support/PyG_support", "graph_support/algorithms", "graph_support/compatibility", "graph_support/cugraph_service", "graph_support/cugraphops_support", "graph_support/datastores", "graph_support/feature_stores", "graph_support/gnn_support", "graph_support/graph_algorithms", "graph_support/index", "graph_support/knowledge_stores", "graph_support/property_graph", "graph_support/wholegraph_support", "index", "installation/getting_cugraph", "installation/index", "installation/source_build", "references/cugraph_ref", "references/datasets", "references/index", "references/licenses", "releases/index", "tutorials/community_resources", "tutorials/cugraph_blogs", "tutorials/cugraph_notebooks", "tutorials/how_to_guides", "tutorials/index"], "filenames": ["api_docs/api/cugraph-dgl/cugraph_dgl.convert.cugraph_storage_from_heterograph.rst", "api_docs/api/cugraph-dgl/cugraph_dgl.cugraph_storage.CuGraphStorage.rst", "api_docs/api/cugraph-pyg/cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore.rst", "api_docs/api/cugraph-pyg/cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler.rst", "api_docs/api/cugraph.BiPartiteGraph.rst", "api_docs/api/cugraph.Graph.rst", "api_docs/api/cugraph.Graph.add_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.add_nodes_from.rst", "api_docs/api/cugraph.Graph.clear.rst", "api_docs/api/cugraph.Graph.from_cudf_adjlist.rst", "api_docs/api/cugraph.Graph.from_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_numpy_array.rst", "api_docs/api/cugraph.Graph.from_numpy_matrix.rst", "api_docs/api/cugraph.Graph.from_pandas_adjacency.rst", "api_docs/api/cugraph.Graph.from_pandas_edgelist.rst", "api_docs/api/cugraph.Graph.has_isolated_vertices.rst", "api_docs/api/cugraph.Graph.is_bipartite.rst", "api_docs/api/cugraph.Graph.is_directed.rst", "api_docs/api/cugraph.Graph.is_multigraph.rst", "api_docs/api/cugraph.Graph.is_multipartite.rst", "api_docs/api/cugraph.Graph.is_renumbered.rst", "api_docs/api/cugraph.Graph.is_weighted.rst", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.to_directed.rst", "api_docs/api/cugraph.Graph.to_undirected.rst", "api_docs/api/cugraph.Graph.unrenumber.rst", "api_docs/api/cugraph.MultiGraph.rst", "api_docs/api/cugraph.from_adjlist.rst", "api_docs/api/cugraph.from_cudf_edgelist.rst", "api_docs/api/cugraph.from_edgelist.rst", "api_docs/api/cugraph.from_numpy_array.rst", "api_docs/api/cugraph.from_numpy_matrix.rst", "api_docs/api/cugraph.from_pandas_adjacency.rst", "api_docs/api/cugraph.from_pandas_edgelist.rst", "api_docs/api/cugraph.hypergraph.rst", "api_docs/api/cugraph.structure.NumberMap.rst", "api_docs/api/cugraph.structure.NumberMap.MultiGPU.rst", "api_docs/api/cugraph.structure.NumberMap.SingleGPU.rst", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types.rst", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name.rst", "api_docs/api/cugraph.structure.NumberMap.renumber.rst", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment.rst", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names.rst", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.unrenumber.rst", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size.rst", "api_docs/api/cugraph.symmetrize.rst", "api_docs/api/cugraph.symmetrize_ddf.rst", "api_docs/api/cugraph.symmetrize_df.rst", "api_docs/api/cugraph.to_numpy_array.rst", "api_docs/api/cugraph.to_numpy_matrix.rst", "api_docs/api/cugraph.to_pandas_adjacency.rst", "api_docs/api/cugraph.to_pandas_edgelist.rst", "api_docs/api/cugraph/cugraph.BiPartiteGraph.rst", "api_docs/api/cugraph/cugraph.Graph.rst", "api_docs/api/cugraph/cugraph.Graph.add_internal_vertex_id.rst", "api_docs/api/cugraph/cugraph.Graph.add_nodes_from.rst", "api_docs/api/cugraph/cugraph.Graph.clear.rst", "api_docs/api/cugraph/cugraph.Graph.from_cudf_adjlist.rst", "api_docs/api/cugraph/cugraph.Graph.from_cudf_edgelist.rst", "api_docs/api/cugraph/cugraph.Graph.from_dask_cudf_edgelist.rst", "api_docs/api/cugraph/cugraph.Graph.from_numpy_array.rst", "api_docs/api/cugraph/cugraph.Graph.from_numpy_matrix.rst", "api_docs/api/cugraph/cugraph.Graph.from_pandas_adjacency.rst", "api_docs/api/cugraph/cugraph.Graph.from_pandas_edgelist.rst", "api_docs/api/cugraph/cugraph.Graph.has_isolated_vertices.rst", "api_docs/api/cugraph/cugraph.Graph.is_bipartite.rst", "api_docs/api/cugraph/cugraph.Graph.is_directed.rst", "api_docs/api/cugraph/cugraph.Graph.is_multigraph.rst", "api_docs/api/cugraph/cugraph.Graph.is_multipartite.rst", "api_docs/api/cugraph/cugraph.Graph.is_renumbered.rst", "api_docs/api/cugraph/cugraph.Graph.is_weighted.rst", "api_docs/api/cugraph/cugraph.Graph.lookup_internal_vertex_id.rst", "api_docs/api/cugraph/cugraph.Graph.to_directed.rst", "api_docs/api/cugraph/cugraph.Graph.to_undirected.rst", "api_docs/api/cugraph/cugraph.Graph.unrenumber.rst", "api_docs/api/cugraph/cugraph.MultiGraph.rst", "api_docs/api/cugraph/cugraph.analyzeClustering_edge_cut.rst", "api_docs/api/cugraph/cugraph.analyzeClustering_modularity.rst", "api_docs/api/cugraph/cugraph.analyzeClustering_ratio_cut.rst", "api_docs/api/cugraph/cugraph.batched_ego_graphs.rst", "api_docs/api/cugraph/cugraph.betweenness_centrality.rst", "api_docs/api/cugraph/cugraph.bfs.rst", "api_docs/api/cugraph/cugraph.bfs_edges.rst", "api_docs/api/cugraph/cugraph.centrality.eigenvector_centrality.rst", "api_docs/api/cugraph/cugraph.connected_components.rst", "api_docs/api/cugraph/cugraph.core_number.rst", "api_docs/api/cugraph/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality.rst", "api_docs/api/cugraph/cugraph.dask.centrality.katz_centrality.katz_centrality.rst", "api_docs/api/cugraph/cugraph.dask.common.read_utils.get_chunksize.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.destroy.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_2D_partition.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_comms.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_default_handle.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_handle.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_session_id.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_worker_id.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.get_workers.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.initialize.rst", "api_docs/api/cugraph/cugraph.dask.comms.comms.is_initialized.rst", "api_docs/api/cugraph/cugraph.dask.community.louvain.louvain.rst", "api_docs/api/cugraph/cugraph.dask.components.connectivity.weakly_connected_components.rst", "api_docs/api/cugraph/cugraph.dask.link_analysis.hits.hits.rst", "api_docs/api/cugraph/cugraph.dask.link_analysis.pagerank.pagerank.rst", "api_docs/api/cugraph/cugraph.dask.traversal.bfs.bfs.rst", "api_docs/api/cugraph/cugraph.dask.traversal.sssp.sssp.rst", "api_docs/api/cugraph/cugraph.degree_centrality.rst", "api_docs/api/cugraph/cugraph.dense_hungarian.rst", "api_docs/api/cugraph/cugraph.ecg.rst", "api_docs/api/cugraph/cugraph.edge_betweenness_centrality.rst", "api_docs/api/cugraph/cugraph.ego_graph.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.add_edge_data.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.add_vertex_data.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.annotate_dataframe.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.edge_props_to_graph.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.extract_subgraph.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_edge_data.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_num_edges.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_num_vertices.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_vertex_data.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.get_vertices.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.has_duplicate_edges.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.is_multigraph.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.renumber_edges_by_type.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.renumber_vertices_by_type.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.select_edges.rst", "api_docs/api/cugraph/cugraph.experimental.PropertyGraph.select_vertices.rst", "api_docs/api/cugraph/cugraph.experimental.PropertySelection.rst", "api_docs/api/cugraph/cugraph.filter_unreachable.rst", "api_docs/api/cugraph/cugraph.force_atlas2.rst", "api_docs/api/cugraph/cugraph.from_adjlist.rst", "api_docs/api/cugraph/cugraph.from_cudf_edgelist.rst", "api_docs/api/cugraph/cugraph.from_edgelist.rst", "api_docs/api/cugraph/cugraph.from_numpy_array.rst", "api_docs/api/cugraph/cugraph.from_numpy_matrix.rst", "api_docs/api/cugraph/cugraph.from_pandas_adjacency.rst", "api_docs/api/cugraph/cugraph.from_pandas_edgelist.rst", "api_docs/api/cugraph/cugraph.generators.rmat.rst", "api_docs/api/cugraph/cugraph.hits.rst", "api_docs/api/cugraph/cugraph.hungarian.rst", "api_docs/api/cugraph/cugraph.hypergraph.rst", "api_docs/api/cugraph/cugraph.jaccard.rst", "api_docs/api/cugraph/cugraph.jaccard_coefficient.rst", "api_docs/api/cugraph/cugraph.jaccard_w.rst", "api_docs/api/cugraph/cugraph.k_core.rst", "api_docs/api/cugraph/cugraph.k_truss.rst", "api_docs/api/cugraph/cugraph.katz_centrality.rst", "api_docs/api/cugraph/cugraph.ktruss_subgraph.rst", "api_docs/api/cugraph/cugraph.leiden.rst", "api_docs/api/cugraph/cugraph.louvain.rst", "api_docs/api/cugraph/cugraph.node2vec.rst", "api_docs/api/cugraph/cugraph.overlap.rst", "api_docs/api/cugraph/cugraph.overlap_coefficient.rst", "api_docs/api/cugraph/cugraph.overlap_w.rst", "api_docs/api/cugraph/cugraph.pagerank.rst", "api_docs/api/cugraph/cugraph.random_walks.rst", "api_docs/api/cugraph/cugraph.shortest_path.rst", "api_docs/api/cugraph/cugraph.shortest_path_length.rst", "api_docs/api/cugraph/cugraph.sorensen.rst", "api_docs/api/cugraph/cugraph.sorensen_coefficient.rst", "api_docs/api/cugraph/cugraph.sorensen_w.rst", "api_docs/api/cugraph/cugraph.spectralBalancedCutClustering.rst", "api_docs/api/cugraph/cugraph.spectralModularityMaximizationClustering.rst", "api_docs/api/cugraph/cugraph.sssp.rst", "api_docs/api/cugraph/cugraph.strongly_connected_components.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.MultiGPU.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.SingleGPU.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.add_internal_vertex_id.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.compute_vals.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.compute_vals_types.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.from_internal_vertex_id.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.generate_unused_column_name.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.renumber.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.renumber_and_segment.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.set_renumbered_col_names.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.to_internal_vertex_id.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.unrenumber.rst", "api_docs/api/cugraph/cugraph.structure.NumberMap.vertex_column_size.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.degree.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.degrees.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.edges.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.has_node.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.nodes.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list.rst", "api_docs/api/cugraph/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list.rst", "api_docs/api/cugraph/cugraph.subgraph.rst", "api_docs/api/cugraph/cugraph.symmetrize.rst", "api_docs/api/cugraph/cugraph.symmetrize_ddf.rst", "api_docs/api/cugraph/cugraph.symmetrize_df.rst", "api_docs/api/cugraph/cugraph.to_numpy_array.rst", "api_docs/api/cugraph/cugraph.to_numpy_matrix.rst", "api_docs/api/cugraph/cugraph.to_pandas_adjacency.rst", "api_docs/api/cugraph/cugraph.to_pandas_edgelist.rst", "api_docs/api/cugraph/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree.rst", "api_docs/api/cugraph/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree.rst", "api_docs/api/cugraph/cugraph.triangle_count.rst", "api_docs/api/cugraph/cugraph.uniform_neighbor_sample.rst", "api_docs/api/cugraph/cugraph.weakly_connected_components.rst", "api_docs/api/plc/pylibcugraph.bfs.rst", "api_docs/api/plc/pylibcugraph.eigenvector_centrality.rst", "api_docs/api/plc/pylibcugraph.hits.rst", "api_docs/api/plc/pylibcugraph.katz_centrality.rst", "api_docs/api/plc/pylibcugraph.node2vec.rst", "api_docs/api/plc/pylibcugraph.pagerank.rst", "api_docs/api/plc/pylibcugraph.sssp.rst", "api_docs/api/plc/pylibcugraph.strongly_connected_components.rst", "api_docs/api/plc/pylibcugraph.weakly_connected_components.rst", "api_docs/api/service/cugraph_service_client.client.CugraphServiceClient.rst", "api_docs/api/service/cugraph_service_client.client.DeviceArrayAllocator.rst", "api_docs/api/service/cugraph_service_client.client.RunAsyncioThread.rst", "api_docs/api/service/cugraph_service_client.client.run_async.rst", "api_docs/api/service/cugraph_service_client.remote_graph.RemoteGraph.rst", "api_docs/api/service/cugraph_service_client.remote_graph_utils.rst", "api_docs/api/service/cugraph_service_client.types.GraphVertexEdgeIDWrapper.rst", "api_docs/api/service/cugraph_service_client.types.UnionWrapper.rst", "api_docs/api/service/cugraph_service_client.types.ValueWrapper.rst", "api_docs/api/service/cugraph_service_server.cugraph_handler.CugraphHandler.rst", "api_docs/api/service/cugraph_service_server.cugraph_handler.ExtensionServerFacade.rst", "api_docs/api/service/cugraph_service_server.cugraph_handler.call_algo.rst", "api_docs/cugraph-dgl/cugraph_dgl.rst", "api_docs/cugraph-pyg/cugraph_pyg.rst", "api_docs/cugraph/centrality.rst", "api_docs/cugraph/community.rst", "api_docs/cugraph/components.rst", "api_docs/cugraph/cores.rst", "api_docs/cugraph/cugraph_top.rst", "api_docs/cugraph/dask-cugraph.rst", "api_docs/cugraph/generator.rst", "api_docs/cugraph/graph_implementation.rst", "api_docs/cugraph/helper_functions.rst", "api_docs/cugraph/layout.rst", "api_docs/cugraph/linear_assignment.rst", "api_docs/cugraph/link_analysis.rst", "api_docs/cugraph/link_prediction.rst", "api_docs/cugraph/property_graph.rst", "api_docs/cugraph/sampling.rst", "api_docs/cugraph/structure.rst", "api_docs/cugraph/traversal.rst", "api_docs/cugraph/tree.rst", "api_docs/cugraph_c/c_and_cpp.rst", "api_docs/index.rst", "api_docs/plc/pylibcugraph.rst", "api_docs/service/cugraph_service_client.rst", "api_docs/service/cugraph_service_server.rst", "api_docs/structure.rst", "basics/coming_soon.md", "basics/cugraph_cascading.md", "basics/cugraph_intro.md", "basics/cugraph_toc.md", "basics/index.rst", "basics/nx_transition.rst", "dev_resources/API.rst", "dev_resources/index.rst", "graph_support/DGL_support.md", "graph_support/PyG_support.md", "graph_support/algorithms.md", "graph_support/compatibility.rst", "graph_support/cugraph_service.rst", "graph_support/cugraphops_support.rst", "graph_support/datastores.rst", "graph_support/feature_stores.md", "graph_support/gnn_support.rst", "graph_support/graph_algorithms.rst", "graph_support/index.rst", "graph_support/knowledge_stores.md", "graph_support/property_graph.md", "graph_support/wholegraph_support.rst", "index.rst", "installation/getting_cugraph.md", "installation/index.rst", "installation/source_build.md", "references/cugraph_ref.rst", "references/datasets.rst", "references/index.rst", "references/licenses.rst", "releases/index.rst", "tutorials/community_resources.md", "tutorials/cugraph_blogs.rst", "tutorials/cugraph_notebooks.md", "tutorials/how_to_guides.md", "tutorials/index.rst"], "titles": ["cugraph_dgl.convert.cugraph_storage_from_heterograph", "cugraph_dgl.cugraph_storage.CuGraphStorage", "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore", "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler", "cugraph.BiPartiteGraph", "cugraph.Graph", "cugraph.Graph.add_internal_vertex_id", "cugraph.Graph.add_nodes_from", "cugraph.Graph.clear", "cugraph.Graph.from_cudf_adjlist", "cugraph.Graph.from_cudf_edgelist", "cugraph.Graph.from_dask_cudf_edgelist", "cugraph.Graph.from_numpy_array", "cugraph.Graph.from_numpy_matrix", "cugraph.Graph.from_pandas_adjacency", "cugraph.Graph.from_pandas_edgelist", "cugraph.Graph.has_isolated_vertices", "cugraph.Graph.is_bipartite", "cugraph.Graph.is_directed", "cugraph.Graph.is_multigraph", "cugraph.Graph.is_multipartite", "cugraph.Graph.is_renumbered", "cugraph.Graph.is_weighted", "cugraph.Graph.lookup_internal_vertex_id", "cugraph.Graph.to_directed", "cugraph.Graph.to_undirected", "cugraph.Graph.unrenumber", "cugraph.MultiGraph", "cugraph.from_adjlist", "cugraph.from_cudf_edgelist", "cugraph.from_edgelist", "cugraph.from_numpy_array", "cugraph.from_numpy_matrix", "cugraph.from_pandas_adjacency", "cugraph.from_pandas_edgelist", "cugraph.hypergraph", "cugraph.structure.NumberMap", "cugraph.structure.NumberMap.MultiGPU", "cugraph.structure.NumberMap.SingleGPU", "cugraph.structure.NumberMap.add_internal_vertex_id", "cugraph.structure.NumberMap.compute_vals", "cugraph.structure.NumberMap.compute_vals_types", "cugraph.structure.NumberMap.from_internal_vertex_id", "cugraph.structure.NumberMap.generate_unused_column_name", "cugraph.structure.NumberMap.renumber", "cugraph.structure.NumberMap.renumber_and_segment", "cugraph.structure.NumberMap.set_renumbered_col_names", "cugraph.structure.NumberMap.to_internal_vertex_id", "cugraph.structure.NumberMap.unrenumber", "cugraph.structure.NumberMap.vertex_column_size", "cugraph.symmetrize", "cugraph.symmetrize_ddf", "cugraph.symmetrize_df", "cugraph.to_numpy_array", "cugraph.to_numpy_matrix", "cugraph.to_pandas_adjacency", "cugraph.to_pandas_edgelist", "cugraph.BiPartiteGraph", "cugraph.Graph", "cugraph.Graph.add_internal_vertex_id", "cugraph.Graph.add_nodes_from", "cugraph.Graph.clear", "cugraph.Graph.from_cudf_adjlist", "cugraph.Graph.from_cudf_edgelist", "cugraph.Graph.from_dask_cudf_edgelist", "cugraph.Graph.from_numpy_array", "cugraph.Graph.from_numpy_matrix", "cugraph.Graph.from_pandas_adjacency", "cugraph.Graph.from_pandas_edgelist", "cugraph.Graph.has_isolated_vertices", "cugraph.Graph.is_bipartite", "cugraph.Graph.is_directed", "cugraph.Graph.is_multigraph", "cugraph.Graph.is_multipartite", "cugraph.Graph.is_renumbered", "cugraph.Graph.is_weighted", "cugraph.Graph.lookup_internal_vertex_id", "cugraph.Graph.to_directed", "cugraph.Graph.to_undirected", "cugraph.Graph.unrenumber", "cugraph.MultiGraph", "cugraph.analyzeClustering_edge_cut", "cugraph.analyzeClustering_modularity", "cugraph.analyzeClustering_ratio_cut", "cugraph.batched_ego_graphs", "cugraph.betweenness_centrality", "cugraph.bfs", "cugraph.bfs_edges", "cugraph.centrality.eigenvector_centrality", "cugraph.connected_components", "cugraph.core_number", "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "cugraph.dask.centrality.katz_centrality.katz_centrality", "cugraph.dask.common.read_utils.get_chunksize", "cugraph.dask.comms.comms.destroy", "cugraph.dask.comms.comms.get_2D_partition", "cugraph.dask.comms.comms.get_comms", "cugraph.dask.comms.comms.get_default_handle", "cugraph.dask.comms.comms.get_handle", "cugraph.dask.comms.comms.get_session_id", "cugraph.dask.comms.comms.get_worker_id", "cugraph.dask.comms.comms.get_workers", "cugraph.dask.comms.comms.initialize", "cugraph.dask.comms.comms.is_initialized", "cugraph.dask.community.louvain.louvain", "cugraph.dask.components.connectivity.weakly_connected_components", "cugraph.dask.link_analysis.hits.hits", "cugraph.dask.link_analysis.pagerank.pagerank", "cugraph.dask.traversal.bfs.bfs", "cugraph.dask.traversal.sssp.sssp", "cugraph.degree_centrality", "cugraph.dense_hungarian", "cugraph.ecg", "cugraph.edge_betweenness_centrality", "cugraph.ego_graph", "cugraph.experimental.PropertyGraph", "cugraph.experimental.PropertyGraph.add_edge_data", "cugraph.experimental.PropertyGraph.add_vertex_data", "cugraph.experimental.PropertyGraph.annotate_dataframe", "cugraph.experimental.PropertyGraph.edge_props_to_graph", "cugraph.experimental.PropertyGraph.extract_subgraph", "cugraph.experimental.PropertyGraph.get_edge_data", "cugraph.experimental.PropertyGraph.get_num_edges", "cugraph.experimental.PropertyGraph.get_num_vertices", "cugraph.experimental.PropertyGraph.get_vertex_data", "cugraph.experimental.PropertyGraph.get_vertices", "cugraph.experimental.PropertyGraph.has_duplicate_edges", "cugraph.experimental.PropertyGraph.is_multigraph", "cugraph.experimental.PropertyGraph.renumber_edges_by_type", "cugraph.experimental.PropertyGraph.renumber_vertices_by_type", "cugraph.experimental.PropertyGraph.select_edges", "cugraph.experimental.PropertyGraph.select_vertices", "cugraph.experimental.PropertySelection", "cugraph.filter_unreachable", "cugraph.force_atlas2", "cugraph.from_adjlist", "cugraph.from_cudf_edgelist", "cugraph.from_edgelist", "cugraph.from_numpy_array", "cugraph.from_numpy_matrix", "cugraph.from_pandas_adjacency", "cugraph.from_pandas_edgelist", "cugraph.generators.rmat", "cugraph.hits", "cugraph.hungarian", "cugraph.hypergraph", "cugraph.jaccard", "cugraph.jaccard_coefficient", "cugraph.jaccard_w", "cugraph.k_core", "cugraph.k_truss", "cugraph.katz_centrality", "cugraph.ktruss_subgraph", "cugraph.leiden", "cugraph.louvain", "cugraph.node2vec", "cugraph.overlap", "cugraph.overlap_coefficient", "cugraph.overlap_w", "cugraph.pagerank", "cugraph.random_walks", "cugraph.shortest_path", "cugraph.shortest_path_length", "cugraph.sorensen", "cugraph.sorensen_coefficient", "cugraph.sorensen_w", "cugraph.spectralBalancedCutClustering", "cugraph.spectralModularityMaximizationClustering", "cugraph.sssp", "cugraph.strongly_connected_components", "cugraph.structure.NumberMap", "cugraph.structure.NumberMap.MultiGPU", "cugraph.structure.NumberMap.SingleGPU", "cugraph.structure.NumberMap.add_internal_vertex_id", "cugraph.structure.NumberMap.compute_vals", "cugraph.structure.NumberMap.compute_vals_types", "cugraph.structure.NumberMap.from_internal_vertex_id", "cugraph.structure.NumberMap.generate_unused_column_name", "cugraph.structure.NumberMap.renumber", "cugraph.structure.NumberMap.renumber_and_segment", "cugraph.structure.NumberMap.set_renumbered_col_names", "cugraph.structure.NumberMap.to_internal_vertex_id", "cugraph.structure.NumberMap.unrenumber", "cugraph.structure.NumberMap.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.degree", "cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.edges", "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "cugraph.subgraph", "cugraph.symmetrize", "cugraph.symmetrize_ddf", "cugraph.symmetrize_df", "cugraph.to_numpy_array", "cugraph.to_numpy_matrix", "cugraph.to_pandas_adjacency", "cugraph.to_pandas_edgelist", "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "cugraph.triangle_count", "cugraph.uniform_neighbor_sample", "cugraph.weakly_connected_components", "pylibcugraph.bfs", "pylibcugraph.eigenvector_centrality", "pylibcugraph.hits", "pylibcugraph.katz_centrality", "pylibcugraph.node2vec", "pylibcugraph.pagerank", "pylibcugraph.sssp", "pylibcugraph.strongly_connected_components", "pylibcugraph.weakly_connected_components", "cugraph_service_client.client.CugraphServiceClient", "cugraph_service_client.client.DeviceArrayAllocator", "cugraph_service_client.client.RunAsyncioThread", "cugraph_service_client.client.run_async", "cugraph_service_client.remote_graph.RemoteGraph", "cugraph_service_client.remote_graph_utils", "cugraph_service_client.types.GraphVertexEdgeIDWrapper", "cugraph_service_client.types.UnionWrapper", "cugraph_service_client.types.ValueWrapper", "cugraph_service_server.cugraph_handler.CugraphHandler", "cugraph_service_server.cugraph_handler.ExtensionServerFacade", "cugraph_service_server.cugraph_handler.call_algo", "cugraph-dgl API Reference", "cugraph-pyg API Reference", "Centrality", "Community", "Components", "Cores", "cugraph API Reference", "Multi-GPU with cuGraph", "Generator", "Graph Implementation", "DASK MG Helper functions", "Layout", "Linear Assignment", "Link Analysis", "Link Prediction", "Property Graph", "Sampling", "Graph Classes", "Traversal", "Tree", "CuGraph C and C++ API Links", "Python API reference", "pylibcugraph API reference", "cugraph-service-client API Reference", "cugraph-service-server API Reference", "Graph Classes", "&lt;no title&gt;", "Method Cascading and cuGraph", "cuGraph Introduction", "&lt;no title&gt;", "Basics", "NetworkX Compatibility and Transition", "API", "Developer Resources", "cugraph_dgl", "cugraph_pyg", "List of Supported and Planned Algorithms", "Compatibility", "CuGraph Service", "cugraphops Support", "Data Stores", "&lt;no title&gt;", "Graph Neural Network Support", "Algorithms", "Graph Support", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Welcome to cuGraph\u2019s documentation!", "Getting cuGraph Packages", "Installation", "Building from Source", "References", "&lt;no title&gt;", "References", "&lt;no title&gt;", "Releases", "Commmunity Resources", "cuGraph Blogs and Presentations", "cuGraph Notebooks", "How To Guides", "Tutorials"], "terms": {"g": [0, 1, 2, 5, 9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 51, 52, 53, 54, 55, 56, 58, 62, 63, 68, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 110, 111, 112, 113, 114, 118, 119, 120, 130, 131, 134, 135, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 182, 184, 185, 194, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 238, 246, 266, 267, 270, 285, 290], "dgl": [0, 260, 273, 281, 283, 287, 288, 290, 297], "dglgraph": [0, 273], "single_gpu": [0, 1], "bool": [0, 1, 2, 6, 9, 10, 11, 15, 26, 29, 30, 34, 35, 48, 50, 51, 52, 59, 62, 63, 64, 68, 79, 84, 85, 86, 89, 102, 106, 108, 109, 110, 113, 114, 119, 120, 123, 126, 127, 134, 136, 137, 141, 142, 143, 145, 152, 155, 160, 169, 182, 206, 207, 208, 213, 214, 216, 217, 220, 224], "true": [0, 1, 5, 6, 9, 10, 11, 15, 16, 18, 19, 21, 22, 24, 25, 26, 29, 30, 34, 35, 39, 42, 48, 50, 51, 52, 58, 59, 62, 63, 64, 68, 69, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 118, 119, 120, 123, 126, 127, 130, 134, 136, 137, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 173, 176, 182, 191, 192, 193, 205, 206, 207, 208, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 236, 246, 266, 273, 275, 285], "cugraphstorag": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 245, 246, 270, 275, 281, 283, 287, 288, 289, 298], "graph": [0, 1, 2, 4, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 50, 51, 52, 53, 54, 55, 56, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 182, 184, 185, 188, 191, 192, 193, 194, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 237, 238, 245, 260, 267, 269, 273, 274, 278, 282, 285, 287, 291, 297, 298, 299], "class": [1, 2, 3, 4, 5, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 57, 58, 80, 85, 113, 115, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 170, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 245, 260, 266, 273], "data_dict": 1, "dict": [1, 2, 35, 85, 113, 116, 117, 145, 159], "tupl": [1, 2, 3, 86, 87, 95, 118, 160, 168, 216, 218, 219, 220, 222, 223, 224, 226], "str": [1, 2, 3, 10, 11, 15, 34, 35, 42, 50, 51, 52, 56, 63, 64, 68, 81, 82, 83, 89, 90, 112, 124, 128, 129, 141, 145, 149, 159, 160, 162, 169, 176, 206, 207, 208, 212, 217], "union": [1, 2, 85, 113, 146, 148, 216, 234, 235], "datafram": [1, 6, 10, 11, 14, 15, 23, 26, 29, 30, 33, 34, 35, 39, 42, 47, 48, 50, 51, 52, 55, 56, 59, 63, 64, 67, 68, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 188, 190, 194, 196, 200, 203, 205, 206, 207, 208, 211, 212, 215, 216, 217, 218, 267, 270, 285, 287], "num_nodes_dict": [1, 2], "int": [1, 2, 85, 87, 88, 89, 91, 92, 102, 106, 107, 111, 113, 121, 122, 123, 142, 143, 149, 150, 151, 152, 155, 159, 160, 162, 168, 169, 216, 217, 220, 225, 227], "device_id": 1, "0": [1, 2, 9, 10, 11, 15, 24, 25, 26, 28, 29, 30, 34, 39, 42, 48, 50, 52, 62, 63, 64, 68, 77, 78, 79, 85, 86, 87, 88, 89, 91, 92, 104, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 134, 135, 136, 137, 141, 142, 144, 151, 153, 154, 155, 159, 166, 167, 168, 169, 173, 176, 182, 184, 185, 194, 200, 202, 204, 205, 206, 208, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 246, 270, 273, 285, 290, 297, 298], "idtyp": 1, "none": [1, 2, 5, 9, 10, 11, 12, 15, 23, 24, 25, 28, 29, 30, 34, 35, 39, 42, 47, 48, 50, 51, 52, 58, 62, 63, 64, 65, 68, 76, 77, 78, 84, 85, 86, 87, 89, 92, 98, 99, 100, 101, 102, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 173, 176, 181, 182, 184, 185, 190, 194, 200, 202, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 220, 221, 223, 225, 226, 246, 266, 270], "duck": [1, 2, 3, 273], "type": [1, 2, 3, 5, 9, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 58, 62, 85, 86, 87, 89, 109, 111, 113, 116, 117, 120, 121, 122, 123, 124, 126, 128, 129, 131, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153, 160, 162, 168, 169, 173, 175, 176, 202, 203, 204, 216, 217, 220, 221, 222, 223, 224, 231, 260, 273, 275, 285], "version": [1, 2, 3, 29, 134, 136, 151, 221, 238, 246, 273, 288, 290, 297, 298], "dglheterograph": 1, "made": 1, "cugraph": [1, 2, 218, 223, 260, 265, 268, 269, 270, 271, 273, 274, 278, 281, 283, 285, 289, 295, 299, 300], "store": [1, 2, 7, 9, 10, 11, 29, 30, 50, 51, 52, 60, 62, 63, 64, 109, 115, 116, 117, 136, 137, 146, 168, 203, 206, 207, 208, 267, 270, 273, 283, 285, 287], "structur": [1, 28, 29, 30, 31, 32, 33, 34, 35, 50, 51, 52, 135, 136, 137, 138, 139, 140, 141, 142, 145, 206, 207, 208, 267, 270, 273, 285, 291, 298], "node": [1, 2, 7, 12, 24, 25, 35, 60, 65, 77, 78, 84, 85, 88, 90, 91, 92, 102, 106, 113, 114, 134, 143, 145, 148, 149, 151, 155, 158, 160, 165, 192, 199, 203, 216, 219, 220, 221, 222, 246, 267, 270, 273, 275, 285, 297], "edg": [1, 2, 9, 10, 15, 22, 24, 25, 27, 28, 29, 30, 33, 34, 35, 50, 51, 52, 56, 62, 63, 68, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 184, 187, 191, 194, 197, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 231, 266, 267, 270, 273, 275, 285, 298], "featur": [1, 2, 155, 246, 273, 290, 291, 297], "data": [1, 3, 6, 28, 35, 39, 51, 52, 59, 84, 85, 88, 89, 90, 91, 92, 104, 105, 106, 107, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 158, 159, 163, 164, 165, 166, 167, 168, 169, 173, 207, 208, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 245, 246, 260, 267, 269, 270, 273, 275, 283, 285, 287, 288, 290, 293, 297, 298], "thi": [1, 2, 9, 10, 15, 17, 20, 23, 24, 26, 29, 30, 34, 35, 39, 42, 47, 48, 50, 51, 52, 62, 63, 68, 70, 73, 76, 77, 79, 82, 83, 85, 86, 88, 89, 90, 91, 92, 97, 102, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 120, 131, 132, 134, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 163, 164, 165, 167, 169, 173, 176, 181, 182, 184, 185, 194, 198, 200, 202, 203, 204, 205, 206, 207, 208, 215, 216, 217, 218, 220, 221, 223, 224, 225, 228, 229, 230, 234, 236, 237, 260, 265, 266, 267, 270, 285, 288, 290, 298], "object": [1, 5, 9, 10, 11, 15, 28, 34, 42, 58, 62, 63, 64, 68, 84, 85, 86, 87, 89, 108, 114, 130, 131, 132, 135, 141, 142, 168, 169, 176, 205, 217, 225, 226, 227, 234, 235, 269, 285], "i": [1, 2, 5, 9, 10, 11, 15, 17, 18, 19, 20, 21, 26, 28, 29, 30, 34, 35, 39, 42, 48, 50, 51, 52, 58, 62, 63, 64, 68, 70, 71, 72, 73, 74, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 99, 101, 102, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 182, 184, 185, 190, 194, 198, 200, 202, 203, 204, 206, 207, 208, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 234, 235, 236, 237, 238, 246, 265, 266, 267, 270, 285, 287, 288, 290, 297, 298], "wrapper": [1, 234], "around": 1, "": [1, 2, 3, 6, 29, 30, 35, 51, 52, 59, 92, 100, 108, 109, 113, 136, 137, 145, 151, 168, 203, 207, 208, 216, 221, 246, 290, 291, 297], "multi": [1, 2, 23, 26, 48, 50, 51, 52, 76, 79, 102, 144, 148, 155, 158, 160, 165, 182, 196, 205, 206, 207, 208, 219, 220, 221, 223, 224, 245, 260, 267, 275, 297], "gpu": [1, 2, 5, 23, 26, 48, 50, 58, 76, 79, 84, 85, 88, 89, 90, 91, 92, 93, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 134, 142, 143, 146, 147, 148, 151, 152, 153, 154, 156, 158, 159, 163, 164, 165, 166, 167, 169, 182, 184, 185, 194, 200, 206, 215, 216, 217, 219, 220, 221, 223, 224, 236, 245, 260, 267, 270, 273, 275, 285, 287, 290, 291, 297, 298], "multigraph": [1, 5, 19, 58, 72, 120, 270, 275], "return": [1, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 35, 39, 42, 47, 48, 50, 53, 54, 55, 56, 59, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 188, 190, 191, 192, 193, 194, 196, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 236, 266, 270], "sampl": [1, 2, 35, 85, 113, 145, 148, 155, 158, 165, 216, 222, 245, 260, 274, 275, 298], "conform": 1, "see": [1, 91, 92, 105, 106, 107, 108, 109, 112, 147, 157, 161, 164, 235, 270, 288, 290, 298], "http": [1, 15, 34, 50, 51, 52, 68, 91, 92, 104, 105, 106, 107, 108, 109, 112, 141, 151, 152, 154, 155, 206, 207, 208, 267, 271, 272, 278, 281, 283, 287, 288, 290, 291, 297, 298], "doc": [1, 91, 92, 105, 106, 107, 108, 109, 271, 272, 287, 290], "rapid": [1, 29, 91, 92, 105, 106, 107, 108, 109, 136, 246, 267, 270, 271, 272, 273, 274, 285, 287, 288, 290, 291, 296, 300], "ai": [1, 91, 92, 105, 106, 107, 108, 109, 271, 272, 287, 291, 297], "api": [1, 10, 11, 63, 64, 86, 91, 92, 105, 106, 107, 108, 109, 111, 161, 169, 217, 227, 270, 272, 285, 287, 290], "nightli": [1, 271, 273], "api_doc": [1, 271], "html": [1, 91, 92, 105, 106, 107, 108, 109, 271], "attribut": [1, 3, 24, 28, 29, 30, 31, 32, 33, 34, 35, 77, 114, 115, 119, 120, 135, 136, 137, 138, 139, 140, 141, 145, 150, 159, 213, 214, 229, 231, 233, 234, 235, 236, 237, 289], "canonical_etyp": 1, "devic": [1, 218, 219, 220, 221, 222, 223, 224, 226, 228, 273], "get": [1, 93, 124, 146, 197, 199, 246, 268, 285, 287, 289, 290, 298], "etyp": [1, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131], "all": [1, 35, 50, 51, 52, 84, 85, 102, 107, 109, 111, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 131, 144, 145, 146, 147, 148, 150, 156, 158, 159, 162, 163, 164, 165, 168, 184, 185, 188, 194, 196, 200, 206, 207, 208, 213, 214, 218, 221, 224, 260, 266, 267, 275, 285, 288, 290, 297, 298], "name": [1, 6, 10, 11, 12, 15, 23, 26, 34, 35, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 55, 56, 59, 63, 64, 65, 68, 76, 79, 81, 82, 83, 91, 92, 105, 106, 107, 108, 109, 113, 116, 117, 118, 120, 126, 128, 129, 130, 131, 141, 145, 152, 173, 174, 175, 176, 177, 180, 181, 182, 206, 207, 208, 211, 212, 231, 246, 267, 270, 288, 290], "ntype": 1, "num_canonical_edges_dict": 1, "total_number_of_edg": 1, "total_number_of_nod": 1, "method": [1, 2, 3, 4, 5, 9, 10, 15, 27, 34, 36, 57, 58, 62, 63, 68, 80, 104, 107, 115, 116, 132, 141, 153, 154, 159, 161, 166, 167, 168, 170, 184, 185, 194, 200, 223, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 245, 260, 269, 287], "cugraph_e_id_to_dgl_id": 1, "cugraph_n_id_to_dgl_id": 1, "dgl_e_id_to_cugraph_id": 1, "dgl_n_id_to_cugraph_id": 1, "get_corresponding_canonical_etyp": 1, "__init__": [1, 2, 3, 4, 5, 27, 36, 57, 58, 80, 115, 132, 170, 227, 228, 229, 231, 233, 234, 235, 236, 237], "constructor": [1, 245], "creat": [1, 9, 28, 29, 30, 31, 32, 33, 34, 35, 50, 51, 52, 62, 86, 107, 108, 116, 117, 119, 120, 132, 135, 136, 137, 138, 139, 140, 141, 145, 148, 155, 158, 159, 165, 206, 207, 208, 216, 227, 228, 237, 246, 266, 270, 281, 285, 289, 298], "instanc": [1, 28, 29, 30, 31, 32, 33, 34, 96, 101, 108, 116, 117, 118, 119, 120, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 156, 158, 162, 163, 164, 165, 228, 237], "also": [1, 35, 51, 52, 102, 109, 145, 168, 207, 208, 213, 246, 266, 267, 270, 275, 288, 290], "cugraph_storage_from_heterograph": [1, 273], "convert": [1, 6, 10, 11, 23, 26, 39, 42, 47, 48, 59, 63, 64, 76, 79, 86, 89, 116, 117, 169, 173, 176, 181, 182, 217, 273], "from": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 48, 50, 51, 52, 58, 59, 62, 63, 64, 65, 66, 67, 68, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 182, 200, 205, 206, 207, 208, 213, 214, 216, 217, 218, 222, 224, 225, 226, 227, 234, 237, 245, 246, 266, 270, 275, 281, 283, 285, 287, 288, 289, 291, 297, 298], "paramet": [1, 2, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 194, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230], "The": [1, 2, 7, 9, 10, 11, 15, 23, 26, 28, 35, 39, 42, 46, 47, 48, 50, 55, 60, 62, 63, 64, 68, 76, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 123, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 173, 176, 180, 181, 182, 184, 185, 190, 194, 200, 202, 204, 205, 206, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 246, 266, 267, 270, 285, 288, 290, 291, 297, 298], "dictionari": [1, 2, 35, 85, 88, 89, 90, 110, 112, 113, 145, 151, 169, 217, 270], "construct": [1, 2, 115, 120, 130, 131, 142, 146, 163, 228, 235, 270], "heterogen": 1, "kei": [1, 84, 89, 114, 116, 117, 152, 169, 217], "ar": [1, 10, 11, 15, 26, 29, 30, 34, 35, 42, 46, 48, 50, 51, 52, 63, 64, 68, 79, 84, 85, 88, 89, 90, 91, 92, 102, 106, 107, 108, 109, 111, 113, 114, 116, 117, 119, 120, 122, 123, 124, 126, 131, 132, 134, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 176, 180, 182, 184, 185, 190, 194, 200, 202, 203, 204, 205, 206, 207, 208, 215, 217, 218, 220, 222, 223, 224, 225, 226, 237, 266, 267, 275, 288, 290, 297, 298], "form": [1, 120, 218], "string": [1, 6, 23, 26, 29, 30, 35, 39, 42, 47, 48, 51, 52, 59, 76, 79, 116, 117, 118, 119, 120, 122, 123, 126, 130, 131, 136, 137, 145, 173, 176, 181, 182, 207, 208, 213, 214, 227], "triplet": 1, "src_type": 1, "edge_typ": [1, 35, 145, 216, 231], "dst_type": 1, "specifi": [1, 6, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 59, 81, 82, 83, 84, 85, 92, 102, 104, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 158, 163, 164, 165, 166, 167, 168, 169, 173, 176, 184, 185, 194, 200, 205, 216, 217, 224, 290, 298], "destin": [1, 9, 10, 11, 15, 29, 30, 34, 50, 51, 52, 55, 56, 62, 63, 64, 68, 84, 91, 92, 105, 106, 107, 108, 109, 113, 116, 118, 121, 126, 127, 136, 137, 141, 146, 147, 163, 164, 188, 202, 203, 204, 206, 207, 208, 211, 212, 215, 216, 218, 246], "valu": [1, 9, 28, 35, 46, 50, 51, 52, 62, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 134, 135, 142, 143, 144, 145, 146, 148, 149, 151, 155, 158, 159, 160, 162, 165, 168, 169, 180, 202, 203, 204, 205, 206, 207, 208, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 235, 266, 270], "2": [1, 2, 9, 10, 15, 28, 29, 30, 34, 50, 62, 63, 68, 84, 85, 86, 87, 88, 89, 91, 92, 105, 113, 114, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 146, 150, 151, 152, 155, 166, 167, 168, 169, 205, 206, 215, 217, 218, 219, 222, 223, 224, 225, 226, 245, 266, 270, 275, 290, 291, 297, 298], "column": [1, 6, 9, 10, 11, 12, 15, 23, 26, 29, 30, 34, 35, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 55, 56, 59, 62, 63, 64, 65, 68, 76, 79, 81, 82, 83, 85, 86, 87, 89, 102, 104, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 141, 144, 145, 146, 147, 148, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 173, 174, 175, 176, 177, 180, 181, 182, 190, 196, 202, 203, 204, 205, 206, 207, 208, 211, 212, 217, 270, 275], "\ud835\udc48": 1, "\ud835\udc49": 1, "where": [1, 2, 10, 11, 15, 29, 30, 34, 42, 50, 51, 52, 63, 64, 68, 85, 89, 90, 92, 102, 113, 136, 137, 141, 142, 146, 147, 149, 150, 151, 152, 163, 164, 169, 176, 206, 207, 208, 217, 219, 220, 222, 223, 224, 227, 266, 267, 290, 297], "\ud835\udc56": 1, "id": [1, 2, 6, 9, 10, 11, 15, 23, 26, 34, 35, 39, 42, 47, 48, 51, 52, 59, 62, 63, 64, 68, 76, 79, 81, 82, 83, 85, 86, 87, 104, 108, 109, 111, 112, 116, 117, 119, 121, 124, 125, 128, 129, 133, 141, 142, 144, 145, 146, 147, 148, 153, 154, 156, 158, 162, 163, 164, 165, 168, 173, 176, 181, 182, 184, 185, 190, 194, 200, 207, 208, 216, 225, 233, 298], "number": [1, 2, 9, 10, 11, 15, 29, 30, 34, 42, 62, 63, 64, 68, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 102, 104, 106, 107, 111, 112, 113, 122, 123, 134, 136, 137, 141, 142, 143, 146, 149, 151, 153, 154, 159, 166, 167, 169, 176, 184, 194, 197, 199, 200, 202, 204, 215, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 236, 245, 266, 270, 275, 285, 298], "some": [1, 35, 51, 52, 112, 145, 207, 208, 290], "which": [1, 28, 42, 84, 86, 87, 88, 89, 91, 92, 107, 108, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 135, 151, 155, 159, 160, 168, 169, 176, 184, 216, 217, 218, 223, 226, 227, 236, 246, 273, 285], "map": [1, 2, 10, 11, 15, 34, 35, 63, 64, 68, 85, 113, 141, 145, 235], "t": [1, 90, 116, 117, 149, 290, 291, 297], "whether": [1, 2, 9, 10, 15, 34, 35, 62, 63, 68, 86, 132, 134, 141, 142, 145, 152, 216, 218, 246], "properti": [1, 5, 51, 52, 58, 115, 116, 117, 118, 119, 120, 121, 124, 125, 130, 131, 132, 159, 207, 208, 216, 223, 231, 245, 260, 285, 299], "singl": [1, 10, 11, 15, 23, 26, 34, 48, 50, 63, 64, 68, 76, 79, 84, 85, 86, 87, 113, 114, 124, 134, 141, 142, 155, 160, 162, 168, 182, 206, 219, 220, 221, 223, 224, 245, 246, 267, 270, 275, 297, 298], "multipl": [1, 29, 35, 50, 51, 52, 107, 114, 120, 126, 131, 136, 142, 145, 148, 158, 165, 206, 207, 208, 216, 236, 246, 267, 275, 285, 290, 298], "fals": [1, 2, 4, 5, 6, 9, 10, 11, 15, 17, 18, 19, 20, 26, 27, 34, 35, 39, 42, 44, 45, 48, 50, 51, 52, 57, 58, 59, 62, 63, 64, 68, 70, 71, 72, 73, 79, 80, 84, 85, 87, 89, 102, 103, 105, 107, 114, 119, 120, 123, 126, 130, 134, 141, 142, 145, 159, 160, 169, 173, 176, 178, 179, 182, 197, 206, 207, 208, 213, 214, 216, 217, 218, 219, 222, 223, 224, 226, 246, 273, 275, 285], "If": [1, 2, 9, 10, 11, 15, 26, 28, 29, 30, 34, 35, 39, 42, 47, 48, 50, 51, 52, 62, 63, 64, 68, 79, 85, 86, 87, 88, 89, 91, 92, 102, 107, 108, 109, 110, 113, 114, 116, 117, 119, 120, 122, 123, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148, 149, 151, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 173, 176, 181, 182, 184, 185, 194, 196, 200, 203, 205, 206, 207, 208, 216, 217, 218, 220, 221, 222, 223, 224, 226, 230, 236, 238, 246, 270, 290], "must": [1, 9, 10, 11, 62, 63, 64, 102, 107, 108, 109, 116, 118, 149, 166, 167, 217, 218, 224], "integ": [1, 10, 11, 15, 29, 30, 34, 63, 64, 68, 81, 82, 83, 84, 85, 86, 87, 104, 108, 109, 111, 112, 113, 114, 124, 134, 136, 137, 141, 144, 153, 154, 166, 167], "have": [1, 2, 35, 82, 83, 107, 109, 114, 117, 118, 120, 123, 142, 145, 146, 150, 159, 167, 168, 213, 214, 218, 224, 246, 267, 274, 290], "result": [1, 28, 35, 81, 82, 85, 88, 91, 92, 102, 105, 106, 110, 112, 113, 115, 118, 120, 121, 133, 135, 143, 145, 146, 151, 160, 190, 215, 216, 275, 285], "being": [1, 90, 116, 117, 121, 134, 149, 238, 267, 270, 285, 288, 290, 298], "framework": [1, 155, 267, 278], "specif": [1, 42, 130, 131, 132, 150, 152, 176, 228, 298], "relat": 1, "inform": [1, 7, 10, 12, 13, 14, 15, 31, 32, 33, 34, 60, 63, 65, 66, 67, 68, 84, 86, 87, 88, 89, 91, 92, 95, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 134, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 162, 163, 164, 165, 168, 169, 213, 214, 215, 216, 217, 268, 270, 291], "can": [1, 9, 10, 11, 15, 28, 29, 30, 31, 32, 33, 34, 35, 46, 62, 63, 64, 68, 85, 86, 87, 88, 89, 90, 91, 92, 102, 107, 110, 111, 113, 115, 117, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 149, 151, 152, 155, 159, 160, 168, 169, 180, 205, 217, 223, 225, 227, 228, 235, 246, 266, 270, 285, 288, 290], "torch": 1, "int32": [1, 9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 36, 48, 50, 51, 52, 62, 63, 68, 77, 78, 91, 92, 105, 106, 107, 108, 109, 135, 136, 137, 141, 145, 155, 170, 182, 184, 185, 194, 200, 205, 206, 207, 208, 215, 216, 218, 219, 222, 223, 224, 225, 226, 246], "int64": [1, 125], "pytorch": [1, 273, 274, 290], "default": [1, 2, 5, 6, 9, 10, 11, 12, 15, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 48, 50, 51, 52, 56, 58, 59, 62, 63, 64, 65, 68, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 173, 176, 182, 184, 185, 194, 200, 206, 207, 208, 212, 213, 214, 216, 217, 220, 223, 227, 270, 290], "instal": [1, 281, 287, 288, 298], "exampl": [1, 5, 9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 58, 62, 63, 68, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 182, 184, 185, 194, 200, 205, 206, 207, 208, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 237, 245, 266, 267, 270, 285, 288, 290, 298, 299], "follow": [1, 29, 30, 107, 136, 137, 146, 159, 223, 266, 270, 290], "us": [1, 2, 9, 10, 11, 15, 26, 29, 30, 34, 35, 42, 46, 47, 48, 51, 52, 62, 63, 64, 68, 79, 85, 86, 87, 88, 89, 91, 92, 98, 102, 104, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 126, 130, 131, 132, 134, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 176, 180, 181, 182, 188, 207, 208, 213, 214, 215, 216, 217, 218, 221, 223, 227, 228, 230, 234, 235, 237, 246, 266, 267, 269, 273, 274, 275, 278, 285, 287, 288, 289, 291, 297, 298, 299], "import": [1, 48, 50, 51, 52, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 182, 205, 206, 207, 208, 213, 214, 217, 219, 222, 223, 224, 225, 226, 227, 246, 270, 273, 285, 288], "cudf": [1, 6, 7, 9, 10, 23, 24, 25, 26, 28, 29, 30, 35, 39, 42, 47, 48, 50, 52, 59, 60, 62, 63, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 188, 190, 194, 196, 200, 202, 203, 204, 205, 206, 208, 215, 216, 217, 218, 266, 285, 288, 297, 298], "drug": 1, "3": [1, 86, 87, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 150, 152, 155, 160, 205, 219, 222, 223, 224, 225, 266, 270, 285, 288, 290, 298], "gene": 1, "diseas": 1, "1": [1, 2, 9, 10, 15, 24, 25, 26, 28, 29, 30, 34, 39, 42, 47, 48, 50, 52, 62, 63, 68, 77, 78, 79, 84, 85, 86, 88, 89, 90, 91, 92, 102, 104, 106, 107, 109, 112, 113, 114, 117, 118, 119, 120, 121, 124, 125, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 150, 151, 152, 153, 154, 155, 159, 166, 168, 169, 173, 176, 181, 182, 184, 185, 194, 200, 202, 204, 205, 206, 208, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 236, 266, 270, 285, 290, 291, 297], "drug_interacts_drug_df": 1, "src": [1, 35, 50, 51, 56, 91, 92, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 145, 203, 206, 207, 212, 218, 219, 222, 223, 224, 226, 246, 285], "dst": [1, 35, 50, 51, 56, 91, 92, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 145, 203, 206, 207, 212, 218, 219, 222, 223, 224, 226, 246, 285], "drug_interacts_gen": 1, "drug_treats_diseas": 1, "interact": [1, 267], "treat": [1, 218], "add_node_data": 1, "feat_nam": 1, "node_feat": 1, "feat_obj": 1, "as_tensor": 1, "add_edge_data": [1, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 285], "edge_feat": 1, "4": [1, 117, 120, 122, 124, 125, 128, 129, 130, 131, 146, 150, 152, 225, 226, 246, 288, 290, 291, 297, 298], "sample_neighbor": 1, "num_nod": 1, "num_edg": [1, 142, 225, 246], "metagraph": 1, "get_node_storag": 1, "fetch": [1, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 110, 112, 113, 114, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 205, 213, 214, 217, 285], "tensor": 1, "1000": [1, 134, 219, 270], "2000": 1, "3000": 1, "cuda": [1, 150, 152, 246, 267, 288, 289, 297, 298], "dtype": [1, 9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 62, 63, 68, 77, 78, 91, 92, 105, 106, 107, 108, 109, 111, 125, 135, 136, 137, 141, 144, 145, 155, 182, 184, 185, 194, 200, 205, 206, 207, 208, 215, 218, 219, 222, 223, 224, 225, 226, 246], "float64": [1, 85, 113, 119, 120], "e": [1, 2, 9, 51, 52, 62, 104, 113, 146, 147, 148, 152, 154, 156, 158, 163, 164, 165, 202, 203, 204, 207, 208, 267, 270, 273, 290, 291, 297], "get_edge_storag": 1, "4000": 1, "f": [2, 152, 225, 226, 291], "featurestor": [2, 274], "ndarrai": [2, 86, 87, 89, 168, 169, 217], "seri": [2, 7, 9, 23, 28, 39, 42, 47, 50, 60, 62, 76, 84, 85, 88, 89, 90, 91, 92, 104, 105, 106, 107, 110, 111, 112, 113, 114, 124, 125, 132, 135, 143, 144, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 173, 176, 181, 184, 185, 190, 194, 196, 200, 202, 203, 204, 205, 206, 215, 216, 217, 218], "multi_gpu": 2, "pyg": [2, 3, 260, 274, 281, 283, 287, 288, 290, 297], "graphstor": [2, 274], "get_vertex_index": 2, "put_tensor": 2, "new": [2, 6, 28, 29, 30, 46, 51, 52, 59, 92, 116, 117, 135, 136, 137, 151, 180, 207, 208, 221, 229, 230, 267, 268, 270, 290, 291], "cugraphstor": [2, 3], "provid": [2, 11, 28, 39, 64, 85, 102, 107, 114, 116, 117, 135, 144, 146, 147, 148, 156, 158, 159, 161, 163, 164, 165, 173, 184, 185, 194, 200, 205, 218, 229, 234, 235, 260, 267, 273, 278, 288, 290, 297], "argument": [2, 9, 10, 11, 15, 29, 30, 34, 62, 63, 64, 68, 116, 117, 120, 136, 137, 141, 219, 221, 229, 230], "gnn": [2, 278, 285, 297, 299], "requir": [2, 6, 9, 10, 11, 42, 59, 62, 63, 64, 86, 92, 108, 120, 142, 144, 151, 155, 176, 216, 267, 270, 273, 288, 290], "contain": [2, 6, 9, 10, 12, 13, 14, 15, 23, 26, 27, 29, 30, 31, 32, 33, 34, 39, 42, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 62, 63, 65, 66, 67, 68, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 188, 191, 192, 194, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 285, 288, 298], "lexicograph": 2, "order": [2, 6, 23, 26, 39, 47, 48, 59, 76, 79, 85, 111, 113, 118, 130, 131, 146, 147, 148, 149, 156, 158, 163, 164, 165, 173, 181, 182, 184, 185, 194, 200, 225, 237, 270, 290, 291], "convent": 2, "should": [2, 11, 29, 30, 42, 51, 52, 64, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 116, 117, 134, 136, 137, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 176, 205, 207, 208, 215, 217, 218, 220, 221, 223, 288, 297], "match": [2, 26, 48, 51, 52, 79, 111, 120, 125, 130, 131, 144, 151, 182, 207, 208, 218, 267, 290], "tensortyp": 2, "indic": [2, 5, 9, 10, 11, 15, 28, 29, 30, 34, 55, 58, 62, 63, 64, 68, 85, 108, 113, 135, 136, 137, 141, 148, 158, 161, 165, 168, 202, 204, 211, 216, 225, 226, 266, 270], "option": [2, 5, 6, 9, 10, 11, 12, 15, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 47, 48, 50, 51, 52, 56, 58, 59, 62, 63, 64, 65, 68, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 194, 200, 206, 207, 208, 212, 216, 217, 220, 288, 289], "memori": [2, 35, 134, 145, 146, 246, 266, 267, 297], "pass": [2, 9, 10, 28, 29, 30, 31, 32, 33, 34, 50, 62, 63, 85, 113, 119, 135, 136, 137, 138, 139, 140, 141, 206, 235, 237, 238, 290], "author": [2, 106, 143, 220, 298], "write": [2, 298], "paper": [2, 293, 300], "affili": 2, "institut": 2, "manipul": [2, 298], "call": [2, 9, 10, 15, 17, 20, 34, 50, 51, 52, 62, 63, 68, 70, 73, 81, 82, 85, 90, 102, 104, 113, 118, 120, 125, 130, 131, 141, 149, 153, 154, 206, 207, 208, 216, 218, 228, 229, 230, 237, 238, 266, 267, 270, 275, 287], "possibl": [2, 85, 113, 267, 290], "case": [2, 47, 84, 144, 155, 159, 160, 181, 266, 267], "ha": [2, 16, 22, 35, 69, 75, 85, 90, 107, 113, 120, 126, 127, 145, 152, 159, 193, 218, 223, 224, 236, 266, 267, 285], "alreadi": [2, 89, 104, 105, 106, 112, 143, 146, 147, 148, 153, 154, 156, 158, 159, 163, 164, 165, 169, 217, 290], "been": [2, 118, 120, 267], "done": [2, 102, 152, 216, 266, 267], "were": [2, 123], "written": 2, "disk": 2, "note": [2, 11, 17, 19, 20, 23, 26, 39, 47, 48, 51, 52, 64, 70, 72, 73, 76, 79, 85, 86, 89, 92, 107, 108, 111, 113, 120, 123, 134, 146, 150, 151, 152, 155, 159, 169, 173, 181, 182, 203, 207, 208, 216, 217, 225, 270, 275, 288, 290], "intern": [2, 6, 23, 26, 39, 40, 41, 42, 47, 48, 59, 76, 79, 92, 132, 134, 149, 151, 155, 173, 174, 175, 176, 181, 182, 203, 267, 291, 297], "represent": [2, 24, 77, 111], "offset": [2, 9, 28, 62, 84, 135, 155, 202, 204, 216, 225, 226], "vertex": [2, 6, 9, 10, 11, 15, 23, 26, 27, 34, 39, 42, 47, 48, 59, 62, 63, 64, 68, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 123, 124, 125, 129, 132, 133, 134, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 154, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 181, 182, 184, 185, 190, 194, 200, 205, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 231, 267, 270, 275, 285, 298], "A": [2, 4, 5, 6, 10, 12, 13, 14, 15, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 39, 42, 48, 57, 58, 59, 63, 65, 66, 67, 68, 76, 77, 78, 79, 80, 85, 90, 102, 106, 111, 114, 116, 117, 118, 119, 120, 125, 130, 131, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 163, 164, 165, 173, 176, 182, 185, 194, 200, 205, 213, 214, 218, 219, 220, 221, 222, 223, 224, 226, 267, 275, 285, 291, 297, 298], "each": [2, 9, 24, 25, 35, 62, 77, 78, 84, 85, 86, 87, 89, 92, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 128, 129, 134, 143, 145, 146, 147, 148, 150, 151, 152, 155, 156, 158, 159, 160, 163, 165, 168, 169, 202, 203, 204, 216, 217, 218, 220, 221, 222, 224, 225, 226, 267, 285, 289, 298], "count": [2, 84, 85, 122, 152, 215, 245, 270, 275, 291, 298], "back": [2, 285, 290], "dask": [2, 51, 207, 216, 236, 245, 246, 260, 267, 299], "set": [2, 24, 35, 46, 50, 51, 52, 77, 86, 88, 91, 92, 106, 107, 109, 120, 134, 142, 143, 144, 145, 146, 148, 149, 151, 155, 156, 158, 159, 163, 165, 168, 169, 180, 184, 185, 194, 200, 205, 206, 207, 208, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 231, 246, 285, 289, 293], "up": [2, 94, 102, 118, 246], "uniform_neighbor": 3, "kwarg": [3, 115, 132, 229, 230, 234, 238], "basesampl": 3, "edge_permut": 3, "sample_from_edg": 3, "direct": [4, 5, 9, 18, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 50, 51, 52, 57, 58, 62, 71, 77, 78, 80, 85, 86, 87, 88, 89, 90, 91, 92, 105, 106, 107, 108, 109, 110, 113, 118, 120, 130, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 149, 151, 155, 160, 161, 163, 164, 168, 169, 203, 205, 206, 207, 208, 217, 237, 275, 285], "bipartit": [4, 17, 57, 70, 111, 144, 270], "m_graph": [5, 58], "base": [5, 40, 42, 58, 86, 87, 88, 89, 90, 91, 106, 120, 143, 146, 148, 149, 151, 152, 156, 158, 162, 168, 169, 174, 176, 216, 217, 220, 221, 225, 234, 238, 246, 267, 273, 277, 285, 288, 290], "other": [5, 35, 46, 51, 52, 58, 84, 102, 116, 117, 134, 144, 145, 180, 207, 208, 245, 246, 266, 267, 270, 275, 278, 285, 288, 290, 293, 298, 300], "initi": [5, 9, 10, 11, 12, 13, 14, 15, 28, 31, 32, 33, 34, 58, 62, 63, 64, 65, 66, 67, 68, 85, 92, 94, 97, 99, 101, 103, 106, 107, 113, 134, 135, 138, 139, 140, 141, 143, 151, 159, 220, 223, 246, 267], "boolean": [5, 39, 42, 58, 87, 132, 173, 176], "undirect": [5, 9, 11, 18, 25, 58, 62, 64, 71, 78, 84, 85, 86, 88, 89, 90, 91, 92, 104, 105, 110, 113, 114, 146, 147, 149, 150, 151, 152, 153, 154, 155, 160, 163, 164, 169, 203, 205, 213, 214, 215, 217, 218, 275], "df": [6, 10, 15, 23, 26, 29, 30, 33, 34, 35, 39, 41, 42, 44, 45, 47, 48, 50, 52, 56, 59, 63, 68, 76, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 106, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 176, 178, 179, 181, 182, 184, 185, 190, 194, 200, 203, 206, 208, 212, 216, 217, 266, 270, 285], "internal_column_nam": [6, 42, 59, 176], "external_column_nam": [6, 42, 59, 176], "drop": [6, 39, 42, 50, 51, 52, 59, 148, 158, 165, 173, 176, 206, 207, 208], "preserve_ord": [6, 26, 39, 44, 45, 48, 59, 79, 173, 178, 179, 182], "given": [6, 23, 26, 35, 39, 42, 47, 48, 59, 76, 79, 81, 82, 83, 84, 114, 116, 117, 120, 122, 123, 145, 146, 147, 148, 150, 152, 156, 158, 163, 164, 165, 166, 167, 173, 176, 181, 182, 184, 185, 194, 200, 205, 229, 230], "extern": [6, 10, 11, 15, 23, 26, 34, 39, 40, 42, 47, 48, 59, 63, 64, 68, 76, 79, 81, 82, 83, 141, 173, 174, 176, 181, 182, 190], "identifi": [6, 23, 26, 39, 42, 47, 48, 59, 76, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 104, 105, 106, 107, 110, 111, 112, 113, 118, 134, 143, 144, 148, 149, 151, 153, 154, 158, 159, 165, 166, 167, 169, 173, 176, 181, 182, 217, 220, 223, 224, 285, 298], "preserv": [6, 26, 39, 48, 59, 79, 173, 182], "origin": [6, 10, 11, 15, 26, 34, 35, 42, 48, 59, 63, 64, 68, 79, 119, 141, 145, 176, 182, 285, 290], "dask_cudf": [6, 10, 11, 23, 26, 30, 39, 42, 47, 48, 50, 51, 59, 63, 64, 76, 79, 91, 92, 93, 104, 105, 106, 107, 108, 109, 137, 142, 173, 176, 181, 182, 206, 207, 246], "list": [6, 7, 9, 10, 12, 15, 29, 30, 34, 35, 39, 42, 47, 48, 50, 51, 52, 56, 59, 60, 62, 63, 65, 68, 82, 84, 85, 86, 89, 104, 105, 106, 107, 108, 109, 112, 113, 114, 116, 117, 121, 124, 126, 136, 137, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 169, 173, 176, 181, 182, 184, 185, 186, 187, 194, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 216, 217, 231, 260, 268, 270, 282, 283, 288, 290, 298], "frame": [6, 51, 52, 59, 84, 85, 88, 89, 90, 91, 92, 104, 105, 106, 107, 110, 112, 113, 134, 143, 146, 147, 148, 151, 153, 154, 156, 158, 159, 163, 164, 165, 166, 167, 169, 207, 208, 215, 216, 217], "an": [6, 9, 10, 11, 15, 18, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 43, 47, 50, 59, 62, 63, 64, 68, 71, 78, 79, 85, 86, 88, 89, 91, 92, 106, 107, 112, 113, 116, 117, 118, 120, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 155, 156, 158, 159, 162, 163, 164, 165, 169, 173, 176, 177, 181, 190, 198, 203, 206, 213, 214, 217, 220, 223, 226, 228, 235, 237, 266, 267, 270, 285, 290, 291, 298], "extra": [6, 39, 59, 173, 288], "sort": [6, 26, 39, 59, 79, 173, 190, 225], "add": [7, 26, 60, 79, 116, 117, 118, 120, 266, 285, 297], "empti": [8, 35, 61, 116, 117, 120, 145, 155, 218, 222], "offset_col": [9, 62, 202, 204], "index_col": [9, 62, 202, 204], "value_col": [9, 62, 202, 204], "renumb": [9, 10, 11, 15, 21, 26, 29, 30, 34, 36, 48, 62, 63, 64, 68, 74, 79, 107, 119, 120, 128, 129, 136, 137, 141, 159, 170, 182, 203, 218, 219, 222, 223, 224, 226, 275, 298], "store_transpos": [9, 10, 11, 44, 45, 62, 63, 64, 178, 179, 218, 219, 222, 223, 224, 226], "adjac": [9, 10, 11, 12, 13, 14, 28, 31, 32, 33, 53, 54, 55, 62, 63, 64, 65, 66, 67, 89, 104, 105, 106, 112, 135, 138, 139, 140, 142, 143, 146, 147, 148, 153, 154, 156, 158, 159, 163, 164, 165, 169, 184, 185, 186, 194, 200, 202, 204, 209, 210, 211, 213, 217], "It": [9, 10, 15, 34, 62, 63, 68, 102, 104, 112, 134, 141, 153, 154, 188, 228, 266, 270, 288, 290], "error": [9, 10, 15, 34, 62, 63, 68, 104, 134, 141, 153, 154, 219, 221, 235], "wrap": [9, 10, 62, 63, 102, 202, 203, 204, 267], "gdf_column": [9, 10, 62, 63, 202, 204], "repres": [9, 10, 28, 35, 51, 52, 62, 63, 86, 87, 89, 90, 95, 102, 107, 111, 112, 114, 118, 130, 131, 132, 135, 145, 146, 147, 148, 149, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 203, 207, 208, 217, 222, 223, 225, 226, 267], "format": [9, 10, 62, 63, 245], "unweight": [9, 28, 62, 120, 135, 161, 168, 202, 204], "weight": [9, 10, 11, 15, 22, 24, 25, 28, 29, 30, 34, 35, 50, 51, 52, 62, 63, 64, 68, 75, 77, 78, 82, 83, 84, 85, 86, 87, 89, 90, 92, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 119, 120, 134, 135, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 188, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 270, 275, 298], "both": [9, 50, 51, 52, 62, 86, 89, 90, 106, 125, 131, 143, 146, 147, 149, 160, 163, 164, 169, 184, 203, 205, 206, 207, 208, 217, 266, 267, 270, 290, 298], "size": [9, 62, 85, 88, 89, 90, 91, 92, 104, 106, 107, 110, 112, 113, 134, 143, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 184, 185, 194, 200, 202, 204, 217, 222, 225, 228, 246], "v": [9, 10, 11, 15, 24, 25, 29, 30, 34, 51, 52, 62, 63, 64, 68, 77, 78, 85, 88, 89, 90, 91, 92, 104, 106, 107, 110, 112, 134, 136, 137, 141, 142, 143, 144, 149, 151, 153, 154, 159, 166, 167, 169, 191, 202, 204, 207, 208, 217, 290, 291], "vertic": [9, 10, 11, 15, 16, 29, 30, 34, 62, 63, 64, 68, 69, 85, 88, 89, 90, 91, 92, 104, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 120, 123, 124, 125, 131, 132, 133, 136, 137, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 184, 185, 194, 196, 200, 202, 204, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 298], "gdf": [9, 62, 202, 204, 215, 266], "rang": [9, 10, 11, 15, 29, 30, 34, 62, 63, 64, 68, 112, 118, 136, 137, 141, 148, 158, 165, 202, 204], "index": [9, 10, 11, 15, 26, 29, 30, 34, 62, 63, 64, 68, 79, 87, 116, 117, 136, 137, 141, 148, 151, 158, 162, 163, 165, 168, 202, 203, 204, 224, 246, 271, 287, 288, 291], "pointer": [9, 29, 30, 62, 136, 137, 202, 204, 220, 222], "expect": [9, 62, 102, 202, 204, 267], "element": [9, 39, 51, 52, 62, 88, 91, 113, 173, 202, 204, 207, 208, 223, 224, 267, 270], "float": [9, 62, 81, 82, 83, 84, 86, 87, 88, 91, 92, 104, 106, 107, 111, 112, 114, 134, 142, 143, 144, 151, 153, 154, 155, 159, 162, 166, 167, 168, 202, 204, 220], "point": [9, 46, 62, 84, 86, 87, 89, 104, 114, 134, 153, 154, 162, 168, 169, 180, 194, 200, 202, 204, 217, 267], "transpos": [9, 10, 11, 62, 63, 64, 159, 204], "matrix": [9, 10, 11, 12, 13, 14, 28, 31, 32, 33, 53, 54, 55, 62, 63, 64, 65, 66, 67, 84, 86, 87, 89, 111, 114, 135, 138, 139, 140, 142, 146, 162, 168, 169, 203, 209, 210, 211, 217, 225, 226, 267], "certain": [9, 10, 11, 62, 63, 64], "algorithm": [9, 10, 11, 62, 63, 64, 81, 82, 85, 86, 89, 102, 104, 106, 107, 108, 109, 111, 112, 113, 115, 118, 120, 134, 142, 143, 144, 146, 147, 148, 152, 153, 154, 155, 156, 158, 163, 164, 165, 168, 169, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 267, 268, 269, 273, 283, 287, 293, 297, 298], "read_csv": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 62, 63, 68, 77, 78, 91, 92, 93, 105, 106, 107, 108, 109, 135, 136, 137, 141, 145, 182, 184, 185, 194, 200, 206, 207, 208, 215, 218, 246, 270], "datasets_path": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 52, 62, 63, 68, 77, 78, 91, 92, 93, 105, 106, 107, 108, 109, 135, 136, 137, 141, 145, 182, 184, 185, 194, 200, 206, 208, 215, 218], "karat": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 62, 63, 68, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 134, 135, 136, 137, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 182, 184, 185, 194, 200, 205, 206, 207, 208, 215, 217, 218, 285, 291], "csv": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 62, 63, 68, 77, 78, 91, 92, 93, 105, 106, 107, 108, 109, 135, 136, 137, 141, 145, 182, 184, 185, 194, 200, 206, 207, 208, 215, 218, 246], "delimit": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 62, 63, 68, 77, 78, 91, 92, 105, 106, 107, 108, 109, 135, 136, 137, 141, 145, 182, 184, 185, 194, 200, 206, 207, 208, 215, 218], "float32": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 51, 52, 62, 63, 68, 77, 78, 85, 91, 92, 105, 106, 107, 108, 109, 113, 135, 136, 137, 141, 145, 182, 184, 185, 194, 200, 206, 207, 208, 215, 218, 219, 222, 223, 224, 226], "header": [9, 10, 15, 24, 25, 28, 29, 30, 34, 35, 48, 50, 52, 62, 63, 68, 77, 78, 135, 136, 137, 141, 145, 182, 184, 185, 194, 200, 206, 208, 215, 218], "m": [9, 24, 25, 28, 29, 30, 35, 50, 52, 62, 77, 78, 135, 136, 137, 145, 151, 152, 160, 184, 185, 194, 200, 206, 208, 218, 221, 291], "to_panda": [9, 62], "scipi": [9, 28, 62, 84, 86, 87, 89, 114, 135, 168, 169, 217, 225, 226, 267, 287, 297], "spars": [9, 28, 62, 84, 86, 87, 89, 114, 134, 135, 162, 168, 169, 217, 225, 226, 267, 287], "coo_matrix": [9, 28, 62, 135], "tocsr": [9, 28, 62, 135], "indptr": [9, 28, 62, 135, 225, 226], "input_df": [10, 50, 63, 206], "edge_attr": [10, 11, 15, 29, 30, 34, 63, 64, 68, 91, 105, 106, 107, 108, 109, 136, 137, 141, 159, 215, 218], "legacy_renum_onli": [10, 11, 44, 45, 63, 64, 86, 108, 155, 178, 179, 216], "By": [10, 11, 15, 34, 63, 64, 68, 141, 184, 185, 194, 200], "enabl": [10, 11, 15, 34, 63, 64, 68, 86, 108, 141, 155, 216, 274, 285, 290], "input": [10, 11, 15, 26, 34, 35, 39, 48, 51, 52, 63, 64, 68, 79, 86, 87, 89, 90, 102, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 141, 145, 149, 153, 154, 159, 162, 168, 169, 173, 182, 203, 207, 208, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 246, 270, 290], "disabl": [10, 11, 15, 34, 63, 64, 68, 141], "present": [10, 15, 34, 63, 68, 84, 86, 87, 89, 104, 105, 106, 112, 114, 134, 141, 143, 146, 147, 148, 153, 154, 156, 158, 159, 162, 163, 164, 165, 168, 169, 203, 217, 225, 268, 287, 300], "reinterpret": [10, 63], "For": [10, 35, 63, 86, 89, 116, 117, 145, 147, 157, 160, 164, 169, 188, 202, 203, 204, 205, 217, 223, 224, 225, 267, 270, 290], "distribut": [10, 11, 50, 51, 63, 64, 92, 102, 105, 106, 134, 206, 207, 245, 290, 298], "path": [10, 63, 85, 86, 87, 89, 108, 109, 113, 133, 155, 160, 162, 168, 169, 216, 217, 222, 224, 245, 269, 275, 290, 291, 298], "pleas": [10, 63, 85, 113, 146, 288, 298], "from_dask_cudf_edgelist": [10, 63, 91, 92, 105, 106, 107, 108, 109, 246], "arrai": [10, 11, 12, 15, 31, 34, 53, 56, 63, 64, 65, 68, 86, 87, 116, 117, 124, 138, 141, 155, 209, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 270], "like": [10, 11, 12, 15, 34, 56, 63, 64, 65, 68, 116, 117, 141, 155, 212, 222, 270, 285], "skip": [10, 11, 35, 63, 64, 145], "c": [10, 11, 63, 64, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 144, 151, 246, 267, 273, 275, 288, 289, 291, 298, 299], "step": [10, 11, 63, 64, 142, 267], "pylibcugraph": [10, 11, 63, 64, 86, 108, 155, 216, 260, 287, 288, 290, 299], "yet": [10, 11, 63, 64, 125, 152, 220], "input_ddf": [11, 64], "edgelist": [11, 34, 50, 56, 64, 85, 107, 141, 142, 159, 203, 206, 212, 218, 285], "current": [11, 17, 19, 20, 64, 70, 72, 73, 85, 87, 90, 102, 104, 105, 113, 116, 146, 147, 149, 150, 152, 153, 154, 155, 160, 163, 164, 168, 205, 215, 216, 220, 225, 230, 246, 265, 268, 270, 290, 298], "support": [11, 29, 64, 84, 85, 88, 89, 90, 91, 92, 104, 105, 113, 114, 120, 125, 136, 149, 151, 152, 153, 154, 155, 160, 168, 205, 215, 220, 224, 225, 226, 235, 246, 266, 267, 282, 287, 288, 290], "refer": [11, 64, 151, 152, 155, 287], "np_arrai": [12, 65], "numpi": [12, 13, 31, 32, 36, 53, 54, 65, 66, 85, 86, 87, 89, 113, 138, 139, 168, 169, 170, 209, 210, 217, 219, 222, 223, 224, 225, 226], "act": [12, 65], "label": [12, 26, 42, 48, 65, 79, 89, 105, 169, 176, 182, 217, 225, 226, 267, 273], "np_matrix": [13, 66], "pdf": [14, 15, 28, 67, 68, 135, 291], "panda": [14, 15, 28, 30, 33, 34, 55, 56, 67, 68, 84, 86, 87, 116, 117, 118, 119, 124, 125, 132, 135, 137, 140, 141, 168, 211, 212, 270], "download": [15, 34, 50, 51, 52, 68, 91, 92, 105, 106, 107, 108, 109, 141, 206, 207, 208, 288, 290, 298], "dataset": [15, 34, 50, 51, 52, 68, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 134, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 205, 206, 207, 208, 213, 214, 217, 246, 285, 290], "github": [15, 34, 50, 51, 52, 68, 91, 92, 105, 106, 107, 108, 109, 141, 206, 207, 208, 267, 278, 281, 283, 290, 298], "com": [15, 34, 50, 51, 52, 68, 91, 92, 105, 106, 107, 108, 109, 141, 206, 207, 208, 267, 278, 281, 283, 288, 290, 291, 297, 298], "rapidsai": [15, 34, 50, 51, 52, 68, 91, 92, 105, 106, 107, 108, 109, 141, 206, 207, 208, 267, 273, 277, 278, 281, 283, 288, 290, 295, 298], "pd": [15, 28, 34, 68, 135, 141, 270], "isol": [16, 69, 107, 142, 159], "check": [17, 20, 70, 73, 120, 219, 221, 245], "sole": [17, 20, 70, 73], "reli": [17, 20, 70, 73, 113], "user": [17, 20, 70, 73, 113, 116, 117, 146, 148, 156, 158, 159, 163, 165, 237, 266, 267, 273, 274, 290, 297, 299], "add_nodes_from": [17, 20, 70, 73], "doe": [17, 20, 23, 26, 29, 47, 48, 70, 73, 76, 79, 85, 90, 97, 107, 113, 136, 149, 159, 181, 182, 188, 205, 213, 216, 266, 267, 270], "pars": [17, 20, 70, 73], "implement": [17, 19, 20, 70, 72, 73, 85, 87, 90, 104, 105, 106, 113, 143, 146, 147, 149, 151, 152, 153, 154, 160, 163, 164, 168, 205, 215, 221, 245, 260], "alwai": [17, 19, 20, 70, 72, 73, 92, 151, 267], "els": [19, 35, 72, 145, 148, 156, 158, 160, 165], "multipartit": [20, 73], "partit": [20, 23, 26, 39, 47, 48, 73, 76, 79, 81, 82, 83, 93, 95, 102, 104, 107, 108, 109, 112, 142, 144, 153, 154, 166, 167, 173, 181, 182, 246, 285, 291], "column_nam": [23, 26, 40, 41, 43, 48, 76, 79, 174, 175, 177, 182], "function": [23, 24, 26, 29, 40, 41, 43, 48, 76, 77, 79, 87, 107, 136, 150, 152, 159, 174, 175, 177, 182, 198, 229, 230, 232, 237, 238, 245, 246, 260, 266, 267], "guarante": [23, 26, 39, 47, 48, 76, 79, 92, 151, 153, 173, 181, 182, 291], "mode": [23, 26, 48, 76, 79, 134, 182, 281, 290], "view": [24, 77, 188, 285], "same": [24, 25, 26, 35, 48, 51, 52, 77, 78, 79, 85, 116, 120, 126, 127, 145, 182, 203, 207, 208, 224, 266], "u": [24, 25, 51, 52, 77, 78, 191, 207, 208, 267, 291], "replac": [24, 25, 26, 46, 48, 77, 78, 79, 119, 120, 180, 182, 216, 270, 288], "two": [24, 50, 77, 85, 86, 87, 88, 89, 90, 91, 92, 104, 106, 107, 110, 112, 132, 134, 143, 144, 146, 147, 148, 149, 151, 153, 154, 156, 158, 159, 163, 164, 165, 166, 167, 169, 190, 206, 216, 217, 220, 226, 266, 275, 285, 298], "from_cudf_edgelist": [24, 25, 48, 77, 78, 182, 184, 185, 194, 200, 215, 218, 266], "dig": [24, 25, 77, 78], "copi": [25, 78, 114, 118, 120, 150, 213, 214, 266, 298], "get_column_nam": [26, 48, 79, 182], "output": [26, 42, 48, 51, 52, 79, 90, 133, 134, 149, 152, 176, 182, 207, 208, 230, 290], "through": [26, 35, 48, 79, 85, 113, 145, 182, 236, 260, 274, 290], "n": [26, 42, 48, 79, 84, 85, 113, 114, 148, 151, 153, 158, 165, 176, 182, 184, 185, 192, 194, 195, 200, 221, 273, 290, 291], "suffix": [26, 48, 79, 182], "_column_nam": [26, 48, 79, 182], "you": [26, 79, 134, 146, 151, 246, 288, 290, 298], "wish": [26, 79, 290], "row": [26, 35, 48, 55, 79, 102, 111, 114, 118, 126, 132, 145, 182, 211, 225, 226, 270], "exist": [26, 42, 46, 48, 50, 51, 52, 79, 123, 176, 180, 182, 205, 206, 207, 208, 270, 290, 298], "unmodifi": [26, 42, 48, 79, 176, 182], "dentifi": [26, 79], "ad": [26, 29, 35, 42, 48, 79, 86, 92, 116, 117, 118, 123, 136, 145, 151, 169, 176, 182, 198, 217, 221, 245, 270, 285, 290], "remov": [26, 48, 79, 133, 182, 290], "more": [27, 39, 47, 80, 85, 90, 104, 108, 109, 113, 116, 117, 120, 125, 127, 134, 149, 153, 154, 155, 173, 181, 218, 220, 222, 223, 224, 226, 246, 266, 270, 298], "than": [27, 80, 85, 92, 102, 104, 107, 113, 134, 151, 153, 154, 159, 166, 221, 223, 246, 266, 267, 270, 285], "one": [27, 35, 80, 85, 86, 107, 108, 109, 113, 120, 124, 125, 127, 132, 144, 145, 162, 190, 213, 216, 218, 246, 267, 270, 288, 290], "between": [27, 35, 80, 85, 86, 87, 88, 91, 92, 107, 113, 134, 142, 145, 146, 147, 148, 151, 156, 158, 159, 163, 164, 165, 168, 223, 234, 245, 267, 270, 275, 291, 298], "pair": [27, 35, 50, 80, 85, 113, 127, 145, 146, 147, 148, 156, 158, 163, 164, 165, 190, 203, 206, 270, 275], "create_us": [28, 29, 30, 31, 32, 33, 34, 118, 119, 120, 130, 135, 136, 137, 138, 139, 140, 141, 142, 246, 285], "graph_class": [28, 29, 30, 31, 32, 33, 34, 35, 135, 136, 137, 138, 139, 140, 141, 142, 145], "csr": [28, 135, 225, 226], "consid": [28, 35, 109, 111, 113, 116, 135, 144, 145, 168, 224, 237, 266, 270], "representaion": [29, 30, 136, 137], "networkx": [29, 30, 82, 84, 85, 86, 87, 88, 89, 90, 91, 106, 110, 112, 113, 114, 119, 136, 137, 143, 146, 147, 149, 150, 151, 154, 155, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 198, 203, 213, 214, 215, 217, 267, 269, 287, 297], "compat": [29, 85, 86, 112, 114, 116, 117, 136, 147, 157, 159, 161, 164, 169, 198, 217, 269, 283, 287, 290, 297], "from_pandas_edge_list": [29, 136], "But": [29, 136, 146, 270], "target": [29, 30, 35, 136, 137, 145, 162, 290], "terminologi": [29, 30, 136, 137, 269, 287], "core": [30, 85, 90, 113, 137, 149, 245, 260, 270, 275, 291, 298], "dropna": [35, 145], "categori": [35, 145, 275], "drop_edge_attr": [35, 145], "categorical_metadata": [35, 145], "delim": [35, 145], "nodeid": [35, 145], "node_id": [35, 145], "eventid": [35, 145], "event_id": [35, 145], "attribid": [35, 145], "attrib_id": [35, 145], "nodetyp": [35, 145], "node_typ": [35, 145], "edgetyp": [35, 145], "out": [35, 92, 107, 132, 145, 149, 151, 155, 159, 184, 185, 194, 200, 205, 216, 222, 246, 270], "compon": [35, 86, 89, 108, 145, 169, 217, 225, 226, 245, 260, 270, 275, 298], "transform": [35, 113, 145], "reveal": [35, 145], "relationship": [35, 145, 267], "uniqu": [35, 39, 46, 47, 125, 145, 173, 180, 181, 218], "event": [35, 145, 229, 230, 300], "high": [35, 85, 113, 145, 152, 267, 291, 297], "dimension": [35, 145], "everi": [35, 85, 92, 113, 145, 151, 159, 221, 223, 266, 298], "turn": [35, 92, 145, 151, 267], "entri": [35, 145], "within": [35, 84, 98, 100, 114, 145, 237, 267, 270, 285], "connect": [35, 84, 86, 87, 88, 89, 91, 92, 104, 106, 107, 108, 109, 110, 112, 114, 134, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 162, 163, 164, 165, 168, 169, 213, 214, 215, 216, 217, 225, 226, 227, 245, 270, 275, 291, 298], "its": [35, 85, 88, 91, 145, 149, 152, 266, 267], "anoth": [35, 145, 267], "correspond": [35, 42, 85, 88, 89, 90, 91, 92, 106, 107, 110, 113, 115, 118, 143, 144, 145, 148, 149, 151, 158, 159, 165, 166, 167, 169, 176, 184, 185, 194, 200, 216, 217, 219, 220, 222, 223, 226], "distinct": [35, 145], "metadata": [35, 145], "about": [35, 116, 117, 120, 145, 290], "common": [35, 145], "thei": [35, 85, 90, 134, 145, 149, 150, 152], "transit": [35, 145, 269, 287], "those": [35, 118, 145, 146, 163, 184, 185, 194, 200, 267, 270], "convers": [35, 145, 234, 245], "onli": [35, 50, 51, 52, 86, 89, 90, 104, 105, 108, 113, 114, 120, 121, 123, 124, 130, 131, 132, 133, 134, 142, 144, 145, 149, 150, 152, 153, 154, 155, 160, 168, 169, 190, 203, 205, 206, 207, 208, 215, 217, 218, 221, 225, 235, 270, 275, 288, 290, 298], "best": [35, 145, 267, 270], "non": [35, 86, 88, 89, 91, 92, 102, 107, 145, 146, 151, 159, 169, 217, 223, 266], "categor": [35, 145], "group": [35, 145, 150, 152, 291], "kind": [35, 145, 298], "sequenc": [35, 145, 216, 266], "process": [35, 85, 87, 102, 145, 215, 270], "do": [35, 39, 85, 88, 91, 92, 102, 107, 113, 120, 145, 146, 151, 159, 173, 213, 214, 223, 266, 290, 298], "includ": [35, 84, 85, 114, 116, 117, 121, 123, 124, 142, 145, 205, 216, 235, 267, 275, 288, 290, 298], "null": [35, 145], "omit": [35, 145], "hypernod": [35, 145], "instead": [35, 50, 51, 52, 116, 117, 145, 205, 206, 207, 208, 216, 218, 290], "strongli": [35, 89, 145, 169, 225, 270, 275, 298], "appear": [35, 51, 52, 145, 207, 208], "gener": [35, 43, 46, 85, 89, 105, 113, 116, 118, 145, 169, 177, 180, 217, 222, 225, 226, 245, 246, 260, 268, 270, 275, 290, 291], "exclud": [35, 145, 146], "categoricaldtyp": [35, 145], "These": [35, 145, 290], "typic": [35, 145, 152, 270], "larg": [35, 104, 145, 146, 154, 290, 291, 297, 298], "low": [35, 145, 278], "cardin": [35, 145], "save": [35, 128, 129, 145], "signific": [35, 145], "amount": [35, 145, 152, 270], "when": [35, 102, 104, 111, 113, 116, 117, 120, 126, 134, 144, 145, 146, 153, 154, 159, 213, 214, 216, 221, 223, 267, 290], "select": [35, 115, 120, 125, 130, 131, 132, 145, 285, 297], "make": [35, 134, 145, 155, 160, 216, 222, 246, 266, 267, 290, 297], "join": [35, 145], "entiti": [35, 145], "found": [35, 112, 145], "hyper": [35, 145], "renumber_id_typ": [36, 170], "unrenumbered_id_typ": [36, 170], "multigpu": [36, 170], "singlegpu": [36, 170], "renumber_and_seg": [36, 170], "vertex_column_s": [36, 170], "id_column_nam": [39, 173], "col_nam": [39, 47, 173, 181], "collect": [39, 42, 47, 121, 124, 173, 176, 181, 267, 273, 285, 298], "combin": [39, 173], "otherwis": [39, 86, 103, 119, 122, 123, 155, 173, 222, 236, 238, 290], "appli": [39, 120, 173, 285, 288, 290], "work": [39, 102, 111, 144, 173, 205, 266, 267, 270, 288, 290], "addit": [39, 117, 118, 126, 173, 285], "static": [40, 41, 43, 44, 45, 174, 175, 177, 178, 179, 267], "helper": [40, 41, 43, 174, 175, 177, 245, 246, 260], "comput": [40, 41, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 104, 105, 106, 107, 109, 110, 112, 113, 114, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 184, 185, 190, 194, 200, 202, 203, 204, 205, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 246, 267, 270, 273, 278, 291, 297, 298], "ignor": [42, 85, 113, 114, 116, 117, 120, 155, 159, 176, 270], "defin": [42, 85, 88, 91, 113, 144, 146, 148, 150, 151, 152, 156, 158, 163, 165, 176, 190, 221, 227, 290], "external_column": [42, 176], "start_with_nam": [43, 177], "col": [43, 177, 226], "unus": [43, 111, 144, 177], "src_col_nam": [44, 45, 178, 179], "dst_col_nam": [44, 45, 178, 179], "src_col_names_to_replac": [46, 180], "dst_col_names_to_replac": [46, 180], "all_col_nam": [46, 180], "self": [46, 90, 134, 142, 149, 180, 193, 266], "renumbered_src_col_nam": [46, 48, 180, 182], "renumbered_dst_col_nam": [46, 48, 180, 182], "collid": [46, 180], "ani": [46, 51, 52, 102, 107, 148, 158, 159, 165, 180, 205, 207, 208, 267, 270, 275, 285, 298], "start": [46, 84, 85, 86, 87, 107, 108, 109, 113, 119, 128, 129, 133, 159, 162, 168, 180, 216, 218, 229, 230, 288, 290, 298], "vertex_id": [47, 124, 181], "matter": [47, 181], "add_internal_vertex_id": [47, 181], "ourder": [48, 182], "number_map": [48, 182], "pr": [48, 92, 107, 159, 182], "pagerank": [48, 182, 236, 245, 246, 266, 270, 275, 285, 290, 291, 297, 298], "alpha": [48, 92, 107, 151, 159, 182, 221, 223], "85": [48, 107, 159, 182, 223, 291], "max_it": [48, 88, 91, 92, 104, 106, 107, 134, 143, 151, 153, 154, 159, 182, 220, 270], "500": [48, 134, 159, 182, 223], "tol": [48, 88, 91, 92, 106, 107, 143, 151, 159, 182, 220, 246], "0e": [48, 88, 91, 92, 106, 107, 143, 151, 159, 182, 220, 223], "05": [48, 106, 107, 112, 143, 159, 166, 167, 182, 246], "source_col_nam": [50, 206], "dest_col_nam": [50, 206], "value_col_nam": [50, 206], "take": [50, 51, 52, 152, 206, 207, 208, 290], "along": [50, 52, 89, 106, 134, 143, 169, 206, 208, 217], "associ": [50, 51, 52, 117, 206, 207, 208, 291], "coo": [50, 51, 52, 162, 206, 207, 208], "three": [50, 106, 113, 134, 143, 206, 215], "dest": [50, 206], "di": [50, 51, 52, 206, 207, 208], "allow": [50, 51, 52, 86, 108, 119, 131, 134, 206, 207, 208, 218, 234, 235, 237, 266, 267, 270, 273, 285, 287], "them": [50, 51, 52, 116, 117, 152, 206, 207, 208], "perform": [50, 51, 52, 85, 97, 102, 107, 108, 109, 111, 113, 120, 152, 159, 206, 207, 208, 218, 220, 223, 224, 226, 267, 268, 270, 291, 297], "duplic": [50, 51, 52, 119, 120, 126, 142, 148, 158, 165, 206, 207, 208], "val": [50, 206, 233, 235, 266], "ddf": [51, 91, 92, 104, 105, 106, 107, 108, 109, 207, 215], "src_name": [51, 52, 207, 208], "dst_name": [51, 52, 207, 208], "weight_nam": [51, 52, 207, 208], "symmetr": [51, 52, 144, 203, 207, 208, 218, 245, 275, 298], "so": [51, 52, 102, 134, 146, 151, 207, 208, 267, 270, 290], "replic": [51, 52, 207, 208], "That": [51, 52, 207, 208, 270, 285], "data1": [51, 52, 207, 208], "data2": [51, 52, 207, 208], "code": [51, 52, 111, 144, 207, 208, 237, 266, 270, 290, 297], "arbitrarili": [51, 52, 207, 208], "pick": [51, 52, 207, 208, 270, 288], "smaller": [51, 52, 104, 153, 154, 156, 158, 207, 208, 221], "keep": [51, 52, 207, 208], "desir": [51, 52, 107, 150, 152, 159, 207, 208, 290], "caller": [51, 52, 207, 208, 234], "correct": [51, 52, 118, 207, 208, 218, 235], "prior": [51, 52, 118, 120, 131, 207, 208, 290], "dcg": [51, 91, 92, 93, 105, 106, 107, 108, 109, 207], "init": [51, 91, 92, 105, 106, 107, 108, 109, 207], "cluster": [51, 81, 82, 83, 91, 92, 102, 105, 106, 107, 108, 109, 112, 134, 166, 167, 207, 236, 245, 246, 270, 275, 291, 297, 298], "chunksiz": [51, 91, 92, 93, 105, 106, 107, 108, 109, 207, 246], "get_chunks": [51, 91, 92, 105, 106, 107, 108, 109, 207, 246], "sym_ddf": [51, 207], "sym_df": [52, 208], "denot": [55, 109, 168, 211, 224], "n_cluster": [81, 82, 83], "vertex_col_nam": [81, 82, 83, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 285], "cluster_col_nam": [81, 82, 83], "cut": [81, 83, 166, 275, 298], "score": [81, 82, 83, 85, 92, 104, 106, 107, 113, 143, 151, 153, 154, 159, 219, 221, 223, 270, 291, 297, 298], "assumpt": [81, 82], "special": [81, 82], "descriptor": [81, 82, 83, 88, 91, 92, 104, 105, 106, 107, 109, 110, 112, 114, 134, 143, 144, 149, 150, 151, 152, 153, 154, 159, 162, 166, 167, 205, 213, 214, 215], "assign": [81, 82, 83, 104, 111, 112, 116, 117, 144, 153, 154, 166, 167, 245, 260, 270, 275, 291], "analyz": [81, 82, 83, 246], "experiment": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 110, 112, 113, 114, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 205, 213, 214, 217, 285], "get_graph": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 110, 112, 113, 114, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 205, 213, 214, 217, 237, 285], "spectralbalancedcutclust": [81, 82, 83], "5": [81, 82, 83, 84, 92, 106, 107, 111, 112, 117, 120, 124, 125, 127, 128, 129, 130, 131, 134, 143, 144, 155, 159, 166, 167, 220, 223, 225, 246, 273, 290, 298], "modular": [82, 104, 153, 154, 167, 275, 298], "ratio": [83, 146, 148, 156, 158, 163, 165], "seed": [84, 85, 113, 142, 216, 222, 246, 298], "radiu": [84, 114], "center": [84, 114, 134], "distanc": [84, 86, 87, 108, 109, 114, 133, 162, 168, 218, 224, 270], "induc": [84, 114, 205], "subgraph": [84, 90, 114, 120, 149, 150, 152, 245, 270, 275, 285, 291, 298], "neighbor": [84, 88, 91, 114, 146, 148, 156, 158, 216, 275], "cupi": [84, 86, 87, 89, 114, 162, 168, 169, 217, 218, 219, 222, 223, 224, 225, 226, 228, 267, 287], "doubl": [84, 86, 87, 104, 109, 111, 113, 114, 134, 144, 153, 154, 162, 168, 219, 220, 221, 222, 223, 224], "precis": [84, 86, 87, 114, 134, 162, 168], "egonet": [84, 245, 275], "hop": [84, 146, 190, 216, 270, 275], "ego_edge_list": 84, "seeds_offset": 84, "b_ego_graph": 84, "k": [85, 90, 113, 149, 150, 151, 152, 166, 167, 245, 270, 275, 291, 298], "normal": [85, 88, 91, 92, 106, 110, 113, 134, 143, 151, 220], "endpoint": [85, 102, 270], "random_st": [85, 216], "result_dtyp": [85, 113], "central": [85, 110, 113, 151, 219, 221, 245, 260, 270, 273, 275, 291, 298], "measur": [85, 113], "shortest": [85, 86, 87, 89, 109, 113, 162, 168, 169, 217, 224, 245, 270, 275, 291, 298], "therefor": [85, 92, 113, 151, 152], "believ": [85, 113], "To": [85, 113, 266, 267, 270, 287, 288, 290, 300], "improv": [85, 113, 270], "rather": [85, 113, 266, 267, 270, 285], "seen": [85, 113, 146, 148, 156, 158, 285], "either": [85, 88, 89, 91, 92, 110, 113, 116, 151, 155, 160, 169, 219, 220, 221, 223, 224, 226, 270, 285, 290, 298], "parallel": [85, 90, 102, 149, 213, 214, 246, 275, 290, 291], "variat": 85, "brand": [85, 291], "2001": [85, 151, 291], "exact": [85, 134], "approxim": [85, 88, 91, 92, 106, 107, 113, 134, 143, 151, 159, 220, 223], "estim": [85, 106, 113, 143, 220], "higher": [85, 104, 112, 113, 153, 154, 155, 222, 291], "give": [85, 108, 109, 111, 113, 133, 134, 144, 162, 168, 237], "better": [85, 88, 91, 92, 107, 113, 151, 159, 223, 235, 267, 270, 290, 298], "content": [85, 86, 87, 113, 168], "obtain": [85, 113, 290, 298], "travers": [85, 86, 87, 113, 133, 205, 218, 222, 245, 260, 270, 275, 298], "insid": [85, 113], "__2": 85, "__": 85, "__1": 85, "ensur": [85, 107, 108, 109, 113, 159, 218, 220, 223, 224, 226, 290], "scale": [85, 113, 134, 142, 246, 266, 267, 275, 297], "highest": [85, 113], "cross": [85, 113], "Not": [85, 113], "creation": [85, 237, 266], "random": [85, 107, 113, 142, 148, 155, 158, 159, 160, 165, 216, 222, 223, 245, 246, 275, 298], "hash": 85, "time": [85, 88, 91, 92, 107, 108, 109, 113, 151, 152, 159, 218, 220, 223, 224, 226, 270, 290], "hostnam": [85, 227], "here": [85, 102, 112, 114, 159, 235, 237, 290, 297, 298], "backward": 85, "ident": [85, 86, 146, 147, 156, 163, 164, 184, 185, 194, 200], "np": [85, 113, 150, 152, 155, 205, 225, 226], "might": [85, 113, 116, 117, 290], "ascend": [85, 113, 285], "bc": [85, 113], "depth_limit": [86, 87, 108, 218], "i_start": 86, "return_predecessor": [86, 161, 168], "find": [86, 87, 89, 99, 107, 108, 150, 152, 159, 162, 166, 167, 169, 213, 214, 217, 223, 266, 291, 298], "predecessor": [86, 87, 108, 109, 133, 168, 218, 224, 270], "breadth": [86, 87, 108, 218, 245, 267, 270, 275, 298], "first": [86, 87, 108, 114, 142, 146, 147, 148, 152, 156, 158, 163, 164, 165, 190, 218, 219, 220, 222, 223, 224, 245, 267, 270, 275, 298], "wa": [86, 103, 107, 108, 109, 133, 150, 152, 155, 159, 168, 216, 267], "begin": [86, 108], "per": [86, 102, 107, 108, 109, 216, 246, 270], "limit": [86, 87, 88, 91, 92, 107, 108, 151, 159, 218, 223, 267, 298], "depth": [86, 87, 108, 155, 160, 218], "search": [86, 87, 108, 218, 245, 270, 275, 287, 298], "eg": [86, 89, 120, 131, 169, 217, 290], "rais": [86, 89, 169, 217], "typeerror": [86, 89, 169, 217], "th": [86, 87, 88, 91, 133, 144], "posit": [86, 87, 134, 155], "immedi": [86, 87], "preced": [86, 87, 224], "equival": [86, 87, 168], "describ": [86, 87, 104, 116, 117, 153, 154, 168, 267, 290], "abov": [86, 87, 134, 168, 225, 267, 270, 290], "reconstruct": [86, 87, 168, 216], "return_sp_count": [86, 87], "plu": [86, 87, 126], "sp_counter": [86, 87], "lead": [86, 87, 88, 91, 92, 104, 107, 151, 153, 154, 159, 223], "revers": [87, 151], "sort_neighbor": 87, "100": [88, 91, 92, 104, 106, 107, 111, 134, 143, 144, 146, 151, 153, 154, 159, 166, 167, 220, 223, 270], "1e": [88, 91, 92, 106, 107, 111, 143, 144, 151, 159, 166, 167, 219, 246], "06": [88, 91, 92, 151], "eigenvector": [88, 91, 159, 166, 167, 219, 223, 245, 275, 291, 298], "vector": [88, 91, 116, 117], "x": [88, 91, 134], "equat": [88, 91], "maximum": [88, 91, 92, 104, 106, 107, 109, 134, 143, 151, 153, 154, 155, 159, 160, 166, 167, 168, 213, 219, 220, 221, 222, 223, 224, 245, 270, 275], "iter": [88, 91, 92, 104, 106, 107, 134, 143, 146, 151, 152, 153, 154, 159, 166, 167, 184, 185, 194, 200, 219, 220, 221, 223, 270], "befor": [88, 91, 92, 106, 107, 128, 129, 133, 143, 151, 159, 190, 220, 223, 270, 298], "answer": [88, 91, 92, 106, 107, 143, 151, 159, 220, 223, 267], "execut": [88, 91, 92, 107, 111, 144, 151, 152, 159, 223, 270, 290], "earli": [88, 91, 92, 104, 107, 151, 153, 154, 159, 223, 267, 288], "exit": [88, 91, 92, 107, 151, 159, 223], "solver": [88, 91, 92, 107, 151, 159, 166, 167, 223], "reach": [88, 91, 92, 107, 108, 109, 133, 151, 159, 168, 223], "converg": [88, 91, 92, 107, 134, 151, 159, 219, 221, 223], "toler": [88, 91, 92, 106, 107, 143, 151, 159, 166, 167, 219, 220, 221, 223], "6": [88, 91, 92, 111, 117, 120, 124, 125, 128, 129, 130, 131, 144, 151, 219, 223, 273, 285], "small": [88, 91, 92, 106, 107, 143, 146, 151, 159, 220, 223, 291], "magnitud": [88, 91, 92, 106, 107, 143, 151, 159, 220, 223, 270], "lower": [88, 91, 92, 104, 107, 134, 142, 151, 153, 154, 155, 159, 166, 167, 222, 223], "0f": [88, 91, 92, 107, 151, 159, 223], "too": [88, 91, 92, 107, 151, 159, 223], "due": [88, 91, 92, 107, 151, 159, 223], "numer": [88, 91, 92, 107, 151, 159, 223, 267], "roundoff": [88, 91, 92, 107, 151, 159, 223], "usual": [88, 91, 92, 107, 112, 151, 159, 223, 267], "accept": [88, 91, 92, 107, 151, 159, 223, 270], "ec": [88, 91], "weak": [89, 217], "return_label": [89, 169, 217], "weakli": [89, 105, 152, 217, 226, 270, 275, 298], "attach": [89, 105, 169, 217, 225, 226], "fit": [89, 169, 217, 246], "32b": [89, 169, 217], "move": [89, 169, 217], "j": [89, 104, 111, 151, 152, 153, 154, 155, 169, 217, 290, 291, 297], "csgraph": [89, 169, 217], "progress": [89, 169, 217, 270], "strong": [89, 134, 169], "python": [89, 90, 112, 116, 117, 130, 131, 169, 217, 231, 235, 246, 266, 267, 275, 287, 288, 289, 298], "shape": [89, 169, 217], "num": [89, 169, 217], "degree_typ": [90, 149], "bidirect": [90, 149], "maxim": [90, 149, 150, 152, 167, 275], "degre": [90, 92, 110, 142, 149, 151, 194, 200, 216, 245, 275, 298], "belong": 90, "loop": [90, 142, 149, 193, 229, 230], "while": [90, 134, 149, 155, 222, 266, 270], "don": [90, 149], "particip": [90, 149], "calcul": [90, 92, 93, 149, 151], "determin": [90, 111, 112, 144, 149, 237], "valid": [90, 102, 149, 297], "incom": [90, 106, 143, 149, 220], "outgo": [90, 106, 107, 143, 149, 155, 159, 160, 220, 222, 223], "respect": [90, 149, 220, 226, 290], "input_graph": [91, 92, 104, 105, 106, 107, 108, 109, 112, 134, 146, 148, 156, 158, 163, 165], "stabl": [91, 92, 105, 106, 107, 108, 109], "dg": [91, 92, 105, 106, 107, 108, 109], "beta": [92, 151, 221, 270], "nstart": [92, 106, 107, 143, 151, 159], "katz": [92, 151, 221, 245, 270, 275, 291, 298], "attenu": [92, 151, 221], "factor": [92, 102, 107, 142, 151, 155, 159, 221, 222, 223, 267], "degree_max": [92, 151], "alpha_max": [92, 151], "lambda_max": [92, 151], "largest": [92, 151, 266], "eigenvalu": [92, 151, 221], "sinc": [92, 151, 203, 266, 267, 270], "lesser": [92, 151], "equal": [92, 93, 102, 107, 151, 159, 166, 167, 223], "greater": [92, 107, 151, 159, 166, 223], "never": [92, 151], "exce": [92, 151], "thu": [92, 107, 134, 151, 159, 223], "fulfil": [92, 151], "scalar": [92, 151], "guess": [92, 106, 107, 143, 151, 159, 220, 223], "input_path": 93, "appropri": [93, 238], "netscienc": [93, 213, 214, 291], "shut": 94, "down": [94, 267], "clean": [94, 102, 246, 270, 290, 297], "resourc": [94, 102, 218, 219, 220, 221, 222, 223, 224, 226, 246, 285, 287, 300], "2d": [95, 102], "prow": [95, 102], "pcol": [95, 102], "partition_typ": [95, 102], "raft": [96, 102, 289], "handl": [97, 98, 102, 218, 219, 220, 221, 222, 223, 224, 226, 236], "nccl": [97, 102], "sid": [98, 100], "dask_work": [98, 100], "worker": [98, 99, 100, 101, 102, 111, 144, 218], "sessionst": [98, 99], "sessionid": [99, 100], "p2p": [102, 246], "commun": [102, 153, 154, 245, 260, 273, 275, 290, 291, 296, 298], "right": [102, 298], "after": [102, 104, 134, 153, 154, 290, 298], "client": [102, 246, 260, 285, 287, 288, 299], "run": [102, 108, 109, 112, 118, 155, 160, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 246, 266, 267, 270, 281, 285, 288, 289, 297, 298], "manag": [102, 218, 267, 285], "underli": [102, 219, 220, 221, 222, 223, 224, 226], "ucx": [102, 299], "across": [102, 142, 146, 246, 298], "recommend": 102, "destroi": [102, 246], "longer": 102, "need": [102, 113, 120, 134, 146, 202, 203, 204, 219, 220, 221, 222, 223, 224, 226, 237, 267, 290, 297], "pre": 102, "mnmg": [102, 275, 299], "total": [102, 122, 123, 184, 267, 270], "p": [102, 152, 155, 222, 290, 291], "dask_cuda": [102, 246], "localcudaclust": [102, 246], "close": [102, 111, 144, 246], "resolut": [104, 153, 154, 285], "optim": [104, 107, 153, 154, 159, 223], "vd": [104, 154, 291], "blondel": [104, 154, 291], "l": [104, 151, 152, 153, 154, 291], "guillaum": [104, 154, 291], "r": [104, 142, 154, 291, 297], "lambiott": [104, 154, 291], "lefebvr": [104, 154, 291], "fast": [104, 152, 154, 291], "unfold": [104, 154, 291], "hierarchi": [104, 154, 291], "network": [104, 134, 152, 154, 155, 159, 223, 267, 270, 283, 287, 291], "stat": [104, 154, 291], "mech": [104, 154, 291], "p10008": [104, 154, 291], "2008": [104, 152, 154, 291], "arxiv": [104, 112, 154, 155], "org": [104, 112, 151, 152, 154, 155, 291, 298], "ab": [104, 112, 154, 155], "0803": [104, 154], "0476": [104, 154], "control": [104, 134, 142, 153, 154], "level": [104, 134, 153, 154, 216, 278], "termin": [104, 134, 153, 154], "No": [104, 134, 153, 154, 220], "occur": [104, 134, 142, 153, 154], "manner": [104, 134, 153, 154], "gamma": [104, 153, 154], "formula": [104, 153, 154], "chang": [104, 111, 153, 154, 266, 267, 270, 290], "fewer": [104, 153, 154], "larger": [104, 112, 153, 154, 246, 270, 290], "part": [104, 112, 142, 146, 150, 152, 153, 154, 265, 266, 270, 285, 290], "modularity_scor": [104, 153, 154], "global": [104, 153, 154], "wcc": 105, "hub": [106, 134, 143, 220, 298], "link": [106, 143, 220, 245, 260, 275, 298], "norm": [106, 143], "flag": [106, 142, 143, 216, 219, 221, 266, 290], "hubsandauthor": [106, 143], "50": [106, 134, 143], "person": [107, 159, 270, 275], "precomputed_vertex_out_weight": [107, 159, 223], "power": [107, 159, 223, 267], "damp": [107, 159, 223], "probabl": [107, 142, 159, 223], "standard": [107, 159, 223], "teleport": [107, 159, 223], "strictli": [107, 159, 223], "subset": [107, 131, 159, 223, 266], "precomput": [107, 149, 159, 223], "sum": [107, 109, 159, 168, 223, 224], "01": [107, 159, 223], "00001": [107, 159, 166, 167, 223], "from_": [107, 159], "_edgelist": [107, 159], "assum": [107, 123, 159, 290], "contigu": [107, 128, 129, 159], "actual": [107, 146, 159, 205], "gap": [107, 159], "zero": [107, 111, 144, 146, 159, 205, 225], "miss": [107, 159], "behavior": [107, 113, 146, 159, 291], "return_dist": 108, "check_start": 108, "extens": [108, 109, 218, 220, 223, 224, 226, 237, 285, 290], "test": [108, 109, 126, 218, 220, 223, 224, 226, 281, 289], "validit": [108, 109, 218, 220, 223, 224, 226], "expens": [108, 109, 120, 218, 219, 220, 221, 223, 224, 226], "increas": [108, 109, 159, 218, 220, 223, 224, 226], "cutoff": [109, 168, 224, 275], "check_sourc": 109, "unreach": [109, 133, 168, 224], "infin": [109, 168, 224], "dc": 110, "cost": [111, 144], "num_row": 111, "num_column": 111, "epsilon": [111, 144, 219, 221, 223], "hungarian": [111, 245, 275, 291], "against": [111, 131, 144, 267, 290, 297], "dens": [111, 146], "unstabl": 111, "subject": 111, "lowest": [111, 144], "exactli": [111, 144], "job": [111, 144, 290], "major": [111, 266], "task": 111, "enough": [111, 144, 146], "overal": [111, 120, 144, 266], "util": [111, 144, 267, 288], "create_random_bipartit": [111, 144], "costs_flatten": 111, "flatten": 111, "min_weight": 112, "ensemble_s": 112, "16": [112, 142, 270], "ensembl": [112, 245, 270, 275, 298], "truncat": 112, "louvain": [112, 153, 245, 270, 275, 285, 290, 291, 297, 298], "permut": 112, "final": 112, "full": [112, 288], "1809": 112, "05578": 112, "further": [112, 155, 222], "minimum": [112, 114, 214, 245, 275], "edgeweight": 112, "left": [112, 218], "mai": [112, 116, 117, 120, 203, 298], "produc": [112, 267], "qualiti": [112, 134], "over": [113, 114, 150, 213, 214, 267, 290], "bf": [113, 133, 270, 275, 298], "system": [113, 150, 152, 285, 290, 298], "automat": [113, 116, 235, 246], "switch": [113, 134, 267], "differ": [113, 146, 148, 158, 165, 203, 269, 290], "taken": 114, "g_ego": 114, "span": [114, 213, 214, 245, 267, 275, 290], "tree": [114, 245, 260, 275], "forest": [114, 213, 214], "arg": [115, 132, 229, 230, 234, 290], "individu": [115, 290], "later": [115, 267], "annot": 115, "edge_id_col_nam": [116, 127, 128], "type_nam": [116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131], "property_column": [116, 117], "vector_properti": [116, 117], "interfac": [116, 117, 225, 226, 267, 274], "effici": [116, 117, 270], "unspecifi": 116, "transact": [116, 291], "won": [116, 117], "edge_vector_property_to_arrai": 116, "often": [116, 117], "conveni": [116, 117], "some_properti": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "99": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "22": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 275, 297], "98": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "34": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "b": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 246, 291, 297], "97": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131], "56": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131], "96": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "88": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "d": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 290, 291, 297], "pg": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 285], "get_num_vertic": [116, 122, 236], "8": [116, 117, 120, 123, 124, 128, 129, 130, 131, 155, 288, 290, 291, 298], "vertex_vector_property_to_arrai": 117, "vert_df": [117, 120, 124, 130, 131], "vert_id": [117, 120, 124, 129, 130, 131], "v_prop": [117, 120, 124, 129, 130, 131], "7": [117, 120, 124, 125, 127, 128, 129, 130, 131, 151, 225, 291], "vtype": [117, 120, 124, 130, 131], "get_vertex_data": 117, "sort_index": [117, 118, 121, 124], "axi": [117, 118, 121, 124], "_type_": [117, 118, 120, 121, 124, 130, 131], "_vertex_": [117, 124], "edge_vertex_col_nam": 118, "subclass": [118, 119], "extract_subgraph": [118, 130, 131, 132, 285], "meta": [118, 120, 285], "look": 118, "algo_result": 118, "len": [118, 148, 158, 165, 225, 226], "algo_result2": 118, "print": [118, 120, 130, 131, 134, 225, 226, 285, 290], "_edge_id_": [118, 121], "edge_prop_df": 119, "edge_weight_properti": [119, 120], "default_edge_weight": [119, 120], "check_multi_edg": [119, 120], "renumber_graph": [119, 120, 130], "conain": 119, "na": [119, 160], "prevent": [119, 134, 266], "maintain": [119, 266, 272, 287], "relev": [120, 221], "propertyselect": [120, 125, 130, 131], "select_vertic": [120, 125, 285], "select_edg": [120, 125], "could": [120, 203, 266, 267], "whose": [120, 229], "field": [120, 235, 267], "verifi": 120, "manual": 120, "algo": [120, 238, 290], "extract": [120, 132, 150, 152, 205, 245, 270, 275, 285, 298], "futur": [120, 275], "annotate_datafram": 120, "add_vertex_data": [120, 124, 129, 130, 131, 285], "edge_id": [121, 127, 128, 216], "_dst_": 121, "_src_": 121, "include_edge_data": 123, "constrain": 123, "get_num_edg": [123, 236], "slice": 124, "classmethod": [126, 127], "get_edge_data": [126, 127], "11": [127, 128, 150, 152, 288, 290, 298], "prev_id_column": [128, 129], "stop": [128, 129, 218], "inclus": [128, 129], "df2": [128, 266], "95": 128, "24": 128, "94": 128, "36": 128, "93": 128, "etype1": 128, "etype2": 128, "vert_df1": 129, "vtype1": 129, "vert_df2": 129, "vtype2": 129, "expr": [130, 131], "evalu": [130, 131], "express": [130, 131, 298], "criteria": 130, "oper": [130, 131, 152, 218, 219, 220, 221, 223, 224, 266, 278, 285, 290], "from_previous_select": 131, "intersect": [131, 146, 148, 156, 158, 163, 165], "number_of_vertic": [131, 198, 231], "propertygraph": [132, 285], "select_": 132, "vertex_selection_seri": 132, "edge_selection_seri": 132, "sssp": [133, 161, 162, 270, 275, 298], "filter": [133, 184, 185, 194, 200], "reachabl": 133, "pos_list": 134, "outbound_attraction_distribut": 134, "lin_log_mod": 134, "prevent_overlap": 134, "edge_weight_influ": 134, "jitter_toler": 134, "barnes_hut_optim": 134, "barnes_hut_theta": 134, "scaling_ratio": 134, "strong_gravity_mod": 134, "graviti": 134, "verbos": [134, 290], "callback": 134, "forceatlas2": 134, "continu": [134, 290], "layout": [134, 245, 260, 275, 298], "handi": 134, "visual": [134, 297, 298], "peak": 134, "alloc": [134, 228, 270], "30": [134, 246, 291], "forc": [134, 245, 270, 275, 290, 298], "atla": [134, 245, 270, 275], "good": [134, 267, 285], "short": 134, "term": [134, 267], "achiev": [134, 270, 298], "discourag": 134, "y": 134, "attract": 134, "outbound": 134, "less": [134, 155, 222], "push": [134, 290], "border": 134, "model": [134, 266, 270, 285, 291, 297, 299], "lin": 134, "log": 134, "tight": 134, "overlap": [134, 157, 158, 245, 270, 275, 297, 298], "how": [134, 237, 268, 270, 287, 288, 298, 300], "much": 134, "influenc": [134, 275], "swing": 134, "speed": [134, 267], "barn": 134, "hut": 134, "slower": 134, "tradeoff": 134, "accuraci": 134, "repuls": 134, "want": [134, 246, 288], "regular": 134, "linlog": 134, "readjust": 134, "distant": 134, "sometim": [134, 270], "domin": 134, "island": 134, "drift": 134, "awai": 134, "info": 134, "inter": 134, "graphbaseddimredcallback": 134, "intercept": 134, "state": [134, 237, 297], "train": [134, 297], "usag": [134, 281, 283], "customcallback": 134, "def": 134, "on_preprocess_end": 134, "copy_to_host": 134, "on_epoch_end": 134, "on_train_end": 134, "po": 134, "clip_and_flip": [142, 246], "scramble_vertex_id": [142, 246], "mg": [142, 160, 237, 238, 245, 260, 275, 290], "recurs": 142, "mat": 142, "second": [142, 146, 147, 148, 156, 158, 163, 164, 165, 190, 219, 220, 222, 223, 224], "third": [142, 220, 222, 224], "triangular": [142, 146, 203], "diagon": [142, 146], "scrambl": 142, "bit": 142, "break": [142, 267], "correl": 142, "benchmark": [142, 297], "raw": 142, "potenti": [142, 237], "10": [142, 148, 151, 152, 153, 158, 165, 218, 266, 273, 288, 290, 291], "edgefactor": 142, "57": [142, 291], "19": 142, "42": 142, "As": 144, "disjoint": 144, "variabl": [144, 289], "reflect": 144, "particular": [144, 228, 266, 290, 297], "In": [144, 146, 148, 152, 155, 156, 158, 160, 267, 270, 291, 297], "implicitli": 144, "vertex_pair": [146, 147, 148, 156, 158, 163, 164, 165], "similar": [146, 148, 156, 158, 165, 275, 297, 298], "arbitrari": [146, 148, 156, 158, 163, 165], "volum": [146, 148, 156, 158, 163, 165], "divid": [146, 148, 156, 158, 163, 165], "context": [146, 148, 156, 158], "neighborhood": [146, 148, 156, 158, 216, 275], "strength": [146, 148, 156, 158], "rel": [146, 147, 148, 156, 158, 163, 164, 165, 184, 185, 194, 200], "vice": [146, 148, 156, 158, 163], "versa": [146, 148, 156, 158, 163], "except": [146, 148, 156, 158, 163, 235, 298], "thrown": [146, 148, 156, 158, 163, 235], "jaccard_coeffici": 146, "absenc": [146, 163], "coeffici": [146, 147, 148, 156, 158, 163, 164, 165, 245, 270, 275, 297, 298], "upper": [146, 203], "well": [146, 153, 267, 288, 291], "directli": [146, 237], "technic": [146, 152, 291], "lazi": 146, "dereferenc": 146, "feasibl": 146, "000": 146, "would": [146, 222, 246, 266], "9": [146, 153, 184, 185, 194, 200, 225, 290, 291], "billion": [146, 267], "your": [146, 246, 270, 290, 297], "patienc": 146, "interest": [146, 297], "solut": [146, 152, 246, 267], "get_two_hop_neighbor": 146, "rememb": [146, 290], "fill": 146, "entir": [146, 184, 185, 194, 200, 215], "request": [146, 218, 228, 236, 290], "ll": 146, "consist": [146, 147, 148, 156, 158, 160, 163, 164, 165, 267], "jaccard_coeff": [146, 147, 148], "ebunch": [147, 157, 164], "jaccard": [147, 148, 245, 270, 275, 297, 298], "avoid": [148, 158, 165, 270], "drop_dupl": [148, 158, 165], "reset": [148, 158, 165], "reset_index": [148, 158, 165], "inplac": [148, 158, 165, 266, 290], "w": [148, 158, 165], "core_numb": 149, "neg": [149, 168, 218, 224], "main": [149, 266, 298], "kcoregraph": 149, "truss": [150, 152, 245, 270, 275, 291, 298], "avail": [150, 152, 236, 246, 288, 290, 298], "least": [150, 152, 218], "triangl": [150, 152, 203, 215, 245, 270, 275, 291, 298], "tighlti": [150, 152], "knit": [150, 152], "relax": [150, 151, 152, 221], "cliqu": [150, 152], "computation": [150, 152], "demand": [150, 152], "known": [150, 152, 267], "hard": [150, 152], "g_truss": [150, 152], "NOT": 150, "k_subgraph": [150, 152], "foster": [151, 221, 291], "reduc": [151, 221, 270], "complex": [151, 221, 267], "o": [151, 152, 221, 291, 297], "On": [151, 291], "opposit": 151, "flip": 151, "muth": [151, 291], "q": [151, 155, 222, 291], "potterat": [151, 291], "et": [151, 152, 291], "al": [151, 152, 291], "mathemat": [151, 267, 291], "organ": [151, 291], "theori": [151, 267, 291], "275": [151, 291], "doi": [151, 152, 153, 291], "1023": 151, "1013470632383": 151, "1953": [151, 291], "statu": [151, 291, 297], "deriv": [151, 234, 285, 291], "sociometr": [151, 291], "analysi": [151, 152, 245, 260, 267, 270, 275, 285, 291, 297, 298], "psychometrika": [151, 291], "18": [151, 291], "39": [151, 291], "43": [151, 291], "kc": 151, "use_weight": 152, "contrast": 152, "tractabl": 152, "build": [152, 269, 281, 283, 287, 288, 289, 299], "block": [152, 270], "polnymomi": 152, "mani": [152, 267, 297], "monoton": 152, "shrink": [152, 291], "fairli": 152, "reason": [152, 266], "shown": 152, "cohen": [152, 291], "cohes": [152, 291], "social": [152, 267, 291], "nation": [152, 291], "secur": [152, 291], "agenc": [152, 291], "report": [152, 153, 291], "green": [152, 291, 297], "fox": [152, 291], "kim": [152, 291], "busato": [152, 291], "quickli": [152, 291], "haystack": [152, 291], "ieee": [152, 291, 297], "extrem": [152, 291, 297], "confer": [152, 155, 291, 300], "hpec": [152, 291, 297], "2017": [152, 291], "1109": [152, 291], "8091038": [152, 291], "yalamanchili": [152, 291], "munguia": [152, 291], "irregular": [152, 291], "applic": [152, 267, 291, 298], "architectur": [152, 267, 290, 293, 298], "ia3": [152, 291], "2014": [152, 291], "traag": [153, 291], "waltman": [153, 291], "van": [153, 291], "eck": [153, 291], "2019": [153, 291, 298, 300], "scientif": [153, 291], "5233": 153, "1038": 153, "s41598": 153, "019": 153, "41695": 153, "z": 153, "start_vertic": [155, 160, 190], "max_depth": [155, 160, 222], "compress_result": [155, 222], "walk": [155, 160, 222, 245, 275, 297, 298], "under": [155, 222, 265, 298], "coalesc": [155, 160], "pad": [155, 160, 222], "likelihood": [155, 222], "backtrack": [155, 222], "previou": [155, 224], "previous": [155, 222], "visit": [155, 222, 298], "local": [155, 222, 275, 290, 291], "closer": [155, 222], "likeli": [155, 222], "vertex_path": [155, 160], "edge_weight_path": [155, 160], "grover": 155, "leskovec": [155, 291], "scalabl": 155, "learn": [155, 267, 297], "proceed": [155, 291, 297], "22nd": 155, "acm": [155, 291, 297], "sigkdd": [155, 291, 297], "knowledg": [155, 291, 297], "discoveri": [155, 291, 297], "mine": [155, 291, 297], "1607": 155, "00653": 155, "path_siz": 155, "overlap_coeff": [156, 158], "dangl": 159, "depend": [159, 162, 223, 273, 290, 298], "itself": [159, 223], "descreas": [159, 223], "toward": [159, 223], "free": 159, "random_walks_typ": 160, "uniform": [160, 275], "use_pad": 160, "legacy_result_typ": 160, "fixm": [160, 220], "sg": [160, 205, 218, 237, 238, 290], "bias": [160, 275], "node2vec": [160, 236, 245, 275], "max_path_length": 160, "length": [160, 215, 298], "get_edgelist": 160, "_": [160, 266, 273, 274, 281, 283, 285, 290], "overwrit": [161, 168], "alia": [161, 198], "detail": 161, "twice": [163, 165], "sorensen_coeff": [163, 164, 165], "sorensen": [164, 165, 245, 275], "num_clust": [166, 167], "num_eigen_vect": [166, 167], "evs_toler": [166, 167], "evs_max_it": [166, 167], "kmean_toler": [166, 167], "kmean_max_it": [166, 167], "spectral": [166, 167, 245, 270, 275, 298], "balanc": [166, 275, 298], "eigensolv": [166, 167], "mean": [166, 167, 225, 237, 266], "cycl": [168, 215, 224], "vertex_subset": [184, 185, 194, 200], "incid": [184, 205], "displai": [184, 185, 194, 200, 202, 203, 204], "all_df": 184, "subset_df": 184, "12": [184, 185, 194, 200, 275, 291], "in_degre": 185, "out_degre": 185, "delet": [186, 187], "view_edge_list": 188, "apart": 190, "directed_edg": 197, "trianglar": 203, "networx": 203, "henc": 203, "swap": 203, "cusd": 203, "simpli": [205, 266, 267, 270, 290, 298], "pull": [205, 290], "vert": 205, "svert": 205, "boruvka": [213, 214], "ignore_nan": [213, 214], "mst": [213, 214], "msf": [213, 214], "g_mst": [213, 214], "start_list": [215, 216], "fanout_v": 216, "with_replac": 216, "with_edge_properti": 216, "batch_id_list": 216, "return_offset": 216, "fanout": 216, "branch": [216, 278, 281, 283, 289], "fan": 216, "batch": 216, "edge_weight": 216, "batch_id": 216, "hop_id": 216, "offsets_df": 216, "resourcehandl": [218, 219, 220, 221, 222, 223, 224, 226], "_gpugraph": [218, 219, 220, 221, 222, 223, 224, 226], "bool_t": [218, 219, 220, 221, 222, 223, 224, 226], "direction_optim": 218, "int32_t": 218, "compute_predecessor": [218, 224], "do_expensive_check": [218, 219, 220, 221, 222, 223, 224, 226], "respons": 218, "sggraph": [218, 219, 220, 221, 222, 223, 224, 226], "mggraph": [218, 219, 220, 221, 223, 224, 226], "upon": 218, "long": [218, 291], "without": [218, 237, 270, 298], "blank": 218, "edgelist_df": [218, 285], "resource_handl": [218, 219, 220, 221, 222, 223, 224, 226], "graph_properti": 218, "graphproperti": [218, 219, 222, 223, 224, 226], "is_multigraph": [218, 219, 222, 223, 224, 226, 231], "src_arrai": 218, "dst_arrai": 218, "weight_arrai": 218, "re": [218, 246, 288], "pylibcugraph_bf": 218, "final_result": 218, "size_t": [219, 220, 221, 222, 223, 224], "max_iter": [219, 221, 223], "referenc": [219, 220, 221, 222, 223, 224, 226], "eignevector": 219, "item": [219, 220, 222, 223, 224], "asarrai": [219, 222, 223, 224, 225, 226], "graph_prop": [219, 222, 223, 224, 226], "is_symmetr": [219, 222, 223, 224, 226], "initial_hubs_guess_vertic": 220, "initial_hubs_guess_valu": 220, "invers": 221, "constant": 221, "seed_arrai": 222, "procedur": 222, "unpad": 222, "max": 222, "min": 222, "compress": [222, 225, 226], "precomputed_vertex_out_weight_vertic": 223, "precomputed_vertex_out_weight_sum": 223, "initial_guess_vertic": 223, "initial_guess_valu": 223, "ith": [223, 224], "11615585": 223, "21488841": 223, "2988108": 223, "3701449": 223, "releas": [224, 267, 270, 275, 287, 290], "999": 224, "4028235e": 224, "38": 224, "0000000e": 224, "00": 224, "num_vert": 225, "__cuda_array_interface__": [225, 226], "unsupport": 225, "becaus": 225, "popul": 225, "labl": 225, "cp": [225, 226], "csr_matrix": [225, 226], "scipy_csr": [225, 226], "get_shap": 225, "nnz": 225, "cp_offset": [225, 226], "cp_indic": [225, 226], "cp_label": [225, 226], "tolist": [225, 226], "nonzero": 226, "host": [227, 285], "localhost": 227, "port": 227, "9090": 227, "results_port": 227, "9091": 227, "cugraph_servic": [227, 236], "access": [227, 236, 237, 260, 273, 274, 277, 285], "server": [227, 236, 237, 260, 277, 285, 287, 288, 290, 299], "get_edge_ids_for_vertic": 227, "127": 227, "listen": 227, "callabl": 228, "repeatedli": 228, "byte": [228, 266], "func": [229, 230], "thread": [229, 230, 290], "purpos": 229, "keyword": [229, 230], "asyncio": 230, "cgs_client": 231, "cgs_graph_id": 231, "edge_property_nam": 231, "graph_info": 231, "has_properti": 231, "vertex_property_nam": 231, "vertex_typ": 231, "has_isolated_vertic": 231, "is_bipartit": 231, "is_direct": 231, "is_multi_gpu": [231, 236, 237], "is_multipartit": 231, "is_remot": 231, "is_weight": 231, "number_of_edg": 231, "to_direct": 231, "to_undirect": 231, "val_nam": [233, 235], "easi": [234, 235, 266, 269, 288], "py": [234, 235, 290], "obj": [234, 235], "thrift": [234, 235], "below": [234, 285, 288], "togeth": 234, "go": 234, "abstract": 235, "cugraph_service_thrift": 235, "messag": 235, "invalid": 235, "rpc": 236, "via": [236, 288, 298], "num_gpu": 236, "get_graph_edge_property_nam": 236, "get_graph_edge_typ": 236, "get_graph_vertex_property_nam": 236, "get_graph_vertex_typ": 236, "is_edge_properti": 236, "is_vertex_properti": 236, "renumber_edges_by_typ": 236, "renumber_vertices_by_typ": 236, "uniform_neighbor_sampl": 236, "variou": [237, 298], "aspect": 237, "cugraph_service_cli": [237, 260], "providea": 237, "insul": 237, "cugraphhandl": [237, 260], "end": [237, 297], "queri": [237, 266], "abil": [237, 267, 274], "unsaf": 237, "add_graph": 237, "get_graph_id": 237, "get_server_info": 237, "sg_algo_func": 238, "numbermap": 245, "ecg": [245, 270, 298], "leiden": [245, 270, 275, 291, 298], "linear": [245, 260, 275, 291], "hit": [245, 270, 275, 298], "predict": [245, 260, 275, 298], "rmat": [245, 246, 275], "analyt": [245, 267, 270, 273, 285, 290, 297, 298, 299], "leverag": [246, 266], "flexibl": 246, "librari": [246, 267, 278, 287, 288, 289, 298], "workflow": [246, 266, 270, 291, 297], "smooth": 246, "simpl": [246, 266, 270], "project": [246, 267, 285, 290], "abl": 246, "machin": [246, 267, 297], "let": 246, "far": 246, "With": 246, "nvidia": [246, 267, 273, 288, 290, 297, 298, 299], "smoothli": 246, "intellig": 246, "workload": 246, "comfort": 246, "dask_cugraph": 246, "comm": 246, "input_data_path": 246, "input_data": 246, "400": 246, "65": 246, "456": 246, "to_csv": 246, "reader": 246, "chunk": 246, "e_list": 246, "digraph": [246, 270, 297], "pr_df": 246, "page": [260, 287, 299], "publicli": 260, "modul": [260, 270], "namespac": 260, "cugraph_pyg": 260, "cugraph_stor": 260, "experimental__cugraphstor": 260, "sampler": [260, 273, 274], "cugraph_sampl": 260, "experimental__cugraphsampl": 260, "servic": [260, 283, 285, 287, 288, 290, 299], "runasynciothread": 260, "run_async": 260, "devicearrayalloc": 260, "cugraphservicecli": 260, "remote_graph_util": 260, "remote_graph": 260, "remotegraph": 260, "unionwrapp": 260, "valuewrapp": 260, "graphvertexedgeidwrapp": 260, "cugraph_service_serv": 260, "cugraph_handl": 260, "call_algo": 260, "extensionserverfacad": 260, "document": [265, 267, 276, 289], "develop": [265, 266, 267, 268, 281, 287, 290], "bluf": 266, "popular": 266, "program": 266, "concept": 266, "great": [266, 285], "wai": [266, 288], "readabl": 266, "most": [266, 267, 270], "There": [266, 288, 290], "built": [266, 270, 285], "load": [266, 270, 285], "ye": 266, "from_panda": 266, "200": 266, "nlargest": 266, "va": 266, "orient": 266, "natur": 266, "place": 266, "fact": 266, "design": 266, "why": [266, 299], "focus": [266, 267, 298], "big": [266, 297], "problem": [266, 267, 291, 298], "million": 266, "trillion": 266, "giga": 266, "terabyt": 266, "At": [266, 267], "becom": 266, "ineffici": 266, "modifi": [266, 290], "howev": [266, 267, 270], "open": 266, "misinterpret": 266, "flow": [266, 275, 291, 299], "sens": 266, "confus": 266, "g2": 266, "g3": 266, "g1": [266, 285], "obviou": 266, "opt": 266, "return_self": 266, "explicitli": 266, "awar": 266, "just": [266, 267, 270, 297], "pattern": 266, "independ": [266, 289], "benefit": [266, 285], "simplifi": [266, 270], "usabl": 266, "cannot": 266, "scientist": [267, 287, 297], "techniqu": 267, "proverbi": 267, "toolbox": 267, "engin": 267, "statist": 267, "among": 267, "commonli": [267, 278], "focu": 267, "question": 267, "pose": 267, "euler": 267, "1736": 267, "seven": 267, "bridg": 267, "konigsberg": 267, "laid": 267, "foundat": 267, "cover": [267, 298], "wide": 267, "varieti": 267, "market": 267, "biologi": 267, "physic": [267, 291], "scienc": [267, 270, 287, 291, 297, 298], "sociologi": [267, 291], "cyber": 267, "few": [267, 270, 297], "seamlessli": [267, 287], "integr": [267, 287, 290], "ecosystem": [267, 285, 287], "easili": [267, 287], "even": [267, 287, 290], "ubiquit": [267, 297], "think": 267, "technologi": 267, "goal": [267, 270], "team": [267, 297], "almost": 267, "twenti": 267, "year": 267, "attempt": 267, "solv": 267, "tend": 267, "scope": 267, "shift": 267, "dynam": 267, "came": 267, "eas": 267, "choos": [267, 288], "suit": 267, "paradigm": 267, "acceler": [267, 269, 273, 291, 297], "unifi": [267, 297], "now": [267, 270, 290], "latest": [267, 268, 298], "pascal": [267, 290, 298], "1000x": 267, "faster": [267, 291], "averag": 267, "moreov": 267, "rapidli": 267, "restrict": 267, "sever": [267, 290], "we": [267, 270, 297], "emerg": 267, "de": 267, "facto": 267, "languag": [267, 298], "familiar": 267, "approach": 267, "mention": 267, "etl": [267, 270, 297], "thing": 267, "lot": 267, "area": 267, "favor": 267, "our": 267, "own": 267, "argot": 267, "jargon": 267, "try": [267, 270], "mostli": 267, "prefer": 267, "tool": 267, "layer": 267, "robust": 267, "complet": [267, 270, 290, 298], "pictur": 267, "everyth": [267, 290], "captur": 267, "issu": [267, 270], "epic": 267, "subtask": 267, "imag": 267, "post": [267, 297], "readi": [267, 288], "board": 267, "28": 267, "basic": [268, 287, 299], "blog": [268, 270, 287, 300], "guid": [268, 270, 287, 300], "contribut": [268, 290], "packag": [268, 287, 289], "introduct": [269, 287], "vision": [269, 287, 297], "roadmap": [269, 270, 287], "last": [269, 291], "updat": [269, 273, 288, 289], "cascad": [269, 287], "updatr": 270, "flesh": 270, "One": 270, "mimic": 270, "prep": 270, "portion": [270, 290], "encourag": 270, "fulli": 270, "easier": 270, "oct": 270, "14th": 270, "2020": [270, 291, 300], "expans": 270, "medium": [270, 297], "complic": 270, "unchang": 270, "still": 270, "signif": 270, "cnx": 270, "text": [270, 290], "highlight": 270, "yellow": 270, "next": [270, 290, 297], "rich": [270, 285], "etc": [270, 290], "versu": [270, 297], "fix": 270, "biggest": 270, "insert": 270, "record": 270, "read": [270, 285], "data_fil": 270, "nx": 270, "iterrow": 270, "add_edg": 270, "perfectli": 270, "fine": 270, "problemat": 270, "someth": 270, "resiz": 270, "veri": 270, "suggest": 270, "rewrit": 270, "bulk": 270, "backend": 273, "detect": 273, "command": [273, 288, 290], "mamba": 273, "forg": [273, 288], "dglteam": 273, "env": [273, 290], "cugraph_dgl_dev": 273, "file": [273, 290, 298], "cugraph_dgl_dev_11": 273, "yml": [273, 290], "pip": [273, 289, 290], "pytest": [273, 290], "cugraph_g": 273, "dgl_g": 273, "dataload": 273, "neighborsampl": 273, "15": 273, "prefetch_node_feat": 273, "feat": 273, "prefetch_label": 273, "train_dataload": 273, "train_idx": 273, "batch_siz": 273, "1024": 273, "shuffl": 273, "drop_last": 273, "num_work": 273, "storag": [274, 285], "geometr": 274, "descript": [275, 281, 283, 298], "ital": 275, "23": [275, 278, 281, 283], "02": [275, 290], "maxflow": 275, "readm": [275, 278, 281, 283], "12direct": 275, "rw": 275, "assp": 275, "apsp": 275, "ssp": 275, "barabasi": 275, "albert": 275, "come": 276, "soon": 276, "remot": [277, 285], "op": [278, 281, 283, 290], "aim": 278, "agnost": 278, "primit": 278, "blob": [278, 281, 283, 290], "04": [278, 281, 283], "md": [278, 281, 283, 290], "conda": [281, 283, 289, 298], "environ": [281, 289], "edit": [281, 290], "cugraphop": [281, 283], "plan": [282, 283], "neural": [283, 287], "realli": [285, 297], "encapsul": 285, "instanti": 285, "stem": 285, "databas": 285, "conceptu": 285, "onto": 285, "datavers": 285, "definit": 285, "centric": 285, "share": 285, "stage": 285, "accordingli": 285, "primari": 285, "partition_info": 285, "g0": 285, "pageranks0": 285, "pageranks1": 285, "sort_valu": 285, "head": 285, "matric": [287, 291], "tutori": [287, 297], "commmun": [287, 300], "quick": 288, "repo": [288, 289, 298], "Or": [288, 290], "checkout": 288, "selector": 288, "repositori": [288, 290, 296, 298], "tag": [288, 290], "notebook": [288, 300], "showcas": 288, "cuml": 288, "minim": 288, "miniconda": 288, "anaconda": 288, "libcugraph": [288, 289], "numba": 288, "cudatoolkit": 288, "linux": [288, 290], "cu11": 288, "url": 288, "pypi": 288, "ngc": 288, "2023": 288, "docker": [289, 298], "prerequisit": 289, "clone": 289, "configur": 289, "sh": 289, "script": 289, "section": 289, "activ": 289, "instruct": 290, "correctli": 290, "compil": 290, "gcc": 290, "nvcc": 290, "cmake": 290, "20": [290, 297], "driver": [290, 298], "450": [290, 298], "80": 290, "met": 290, "git": 290, "localt": 290, "cugraph_hom": 290, "export": 290, "pwd": 290, "folk": 290, "cd": 290, "directori": 290, "cugraph_dev": 290, "all_cuda": 290, "118_arch": 290, "x86_64": 290, "yaml": 290, "deactiv": 290, "xxx": 290, "cugraph_dev_cuda11": 290, "breez": 290, "advanc": 290, "artifact": 290, "uninstal": 290, "binari": 290, "libcugraph_etl": 290, "service_cli": 290, "service_serv": 290, "cpp": 290, "mgtest": 290, "mpi": 290, "debug": 290, "success": 290, "pydevelop": 290, "setup": [290, 299], "allgpuarch": 290, "skip_cpp_test": 290, "without_cugraphop": 290, "cmake_default_gener": 290, "ninja": 290, "rebuild": 290, "h": 290, "action": 290, "j4": 290, "parallel_level": 290, "locat": 290, "prefix": 290, "conda_prefix": 290, "cudacxx": 290, "enter": 290, "mkdir": 290, "dcmake_install_prefix": 290, "cmake_install_prefix": 290, "lib": 290, "cpm_raft_sourc": 290, "ci": 290, "bottom": 290, "thirdparti": 290, "get_raft": 290, "pin": 290, "fork": 290, "commit": 290, "rpm_raft_sourc": 290, "find_and_configure_raft": 290, "cugraph_min_version_raft": 290, "your_git_fork": 290, "pinned_tag": 290, "your_git_branch_or_tag": 290, "doesn": 290, "clone_on_pin": 290, "ON": 290, "merg": 290, "revert": 290, "build_ext": 290, "bind": 290, "rapids_dataset_root_dir": 290, "path_to_ccp_test_and_reference_data": 290, "get_test_data": 290, "minut": 290, "1gb": 290, "gb": 290, "uncompress": 290, "stand": 290, "alon": 290, "gtest": 290, "gdfgraph_test": 290, "pagerank_test": 290, "environment": 290, "toolkit": 290, "bin": 290, "ld": 290, "lib64": 290, "help": 290, "anaconda3": 290, "touch": 290, "env_var": 290, "var": 290, "vi": 290, "bash": 290, "usr": 290, "ld_library_path": 290, "unset": 290, "adopt": 290, "master": 290, "kang": [291, 297], "fender": [291, 297], "eaton": [291, 297], "ree": [291, 297], "septemb": [291, 297], "web": [291, 297], "crawl": [291, 297], "dgx": [291, 297], "a100": [291, 297], "pp": [291, 297], "journal": 291, "25": 291, "163": 291, "177": 291, "variant": 291, "136": 291, "145": 291, "mclaughlin": 291, "bader": [291, 297], "2018": [291, 300], "61": 291, "92": 291, "date": 291, "nagi": 291, "2016": 291, "52": 291, "72": 291, "hricik": [291, 297], "zachari": 291, "conflict": 291, "fission": 291, "anthropolog": 291, "research": 291, "33": 291, "452": 291, "473": 291, "1977": 291, "dolphin": 291, "lusseau": 291, "schneider": 291, "boisseau": 291, "haas": 291, "slooten": 291, "dawson": 291, "bottlenos": 291, "doubt": 291, "sound": 291, "proport": 291, "ecologi": 291, "sociobiologi": 291, "54": 291, "396": 291, "405": 291, "2003": 291, "newman": 291, "preprint": 291, "0605087": 291, "2006": 291, "email": 291, "eu": 291, "hao": 291, "yin": 291, "austin": 291, "benson": 291, "jure": 291, "david": 291, "gleich": 291, "23rd": 291, "kleinberg": 291, "faloutso": 291, "evolut": 291, "densif": 291, "diamet": 291, "tkdd": 291, "2007": 291, "www": [291, 298], "cmu": 291, "edu": 291, "pub": 291, "powergrowth": 291, "polbook": 291, "kreb": 291, "unpublish": 291, "orgnet": 291, "deeper": 297, "dive": 297, "ve": 297, "gtc": 297, "video": 297, "slide": 297, "massiv": 297, "kdd": 297, "21": 297, "what": 297, "refactor": 297, "And": 297, "rethink": 297, "tackl": 297, "fall": 297, "goe": 297, "journei": 297, "beyond": 297, "gtc19": 297, "spring": 297, "gtc18": 297, "alex": 297, "brad": 297, "joe": 297, "editor": 297, "crc": 297, "press": 297, "sep": 297, "richardson": 297, "draba": 297, "oldridg": 297, "allen": 297, "august": 297, "expand": 297, "dl": 297, "ml": 297, "interoper": 297, "26th": 297, "3503": 297, "3504": 297, "steroid": 297, "park": 297, "spot": 297, "cell": 297, "genom": 297, "memgraph": 297, "dev": 297, "repost": 297, "demonst": 297, "xgboost": 297, "fraud": 297, "predect": 297, "compar": [297, 298], "jupyt": 298, "outlin": 298, "address": 298, "extend": 298, "folder": 298, "centrail": 298, "atlas2": 298, "51": 298, "2022": [298, 300], "corpor": 298, "reserv": 298, "licens": 298, "apach": 298, "complianc": 298, "unless": 298, "law": 298, "agre": 298, "softwar": 298, "AS": 298, "basi": 298, "warranti": 298, "OR": 298, "condit": 298, "OF": 298, "impli": 298, "govern": 298, "permiss": 298, "rmm": 299, "smi": 299, "2021": 300, "media": 300, "academ": 300}, "objects": {"cugraph": [[57, 0, 1, "", "BiPartiteGraph"], [58, 0, 1, "", "Graph"], [80, 0, 1, "", "MultiGraph"], [81, 2, 1, "", "analyzeClustering_edge_cut"], [82, 2, 1, "", "analyzeClustering_modularity"], [83, 2, 1, "", "analyzeClustering_ratio_cut"], [84, 2, 1, "", "batched_ego_graphs"], [85, 2, 1, "", "betweenness_centrality"], [86, 2, 1, "", "bfs"], [87, 2, 1, "", "bfs_edges"], [89, 2, 1, "", "connected_components"], [90, 2, 1, "", "core_number"], [110, 2, 1, "", "degree_centrality"], [111, 2, 1, "", "dense_hungarian"], [112, 2, 1, "", "ecg"], [113, 2, 1, "", "edge_betweenness_centrality"], [114, 2, 1, "", "ego_graph"], [133, 2, 1, "", "filter_unreachable"], [134, 2, 1, "", "force_atlas2"], [135, 2, 1, "", "from_adjlist"], [136, 2, 1, "", "from_cudf_edgelist"], [137, 2, 1, "", "from_edgelist"], [138, 2, 1, "", "from_numpy_array"], [139, 2, 1, "", "from_numpy_matrix"], [140, 2, 1, "", "from_pandas_adjacency"], [141, 2, 1, "", "from_pandas_edgelist"], [143, 2, 1, "", "hits"], [144, 2, 1, "", "hungarian"], [145, 2, 1, "", "hypergraph"], [146, 2, 1, "", "jaccard"], [147, 2, 1, "", "jaccard_coefficient"], [148, 2, 1, "", "jaccard_w"], [149, 2, 1, "", "k_core"], [150, 2, 1, "", "k_truss"], [151, 2, 1, "", "katz_centrality"], [152, 2, 1, "", "ktruss_subgraph"], [153, 2, 1, "", "leiden"], [154, 2, 1, "", "louvain"], [155, 2, 1, "", "node2vec"], [156, 2, 1, "", "overlap"], [157, 2, 1, "", "overlap_coefficient"], [158, 2, 1, "", "overlap_w"], [159, 2, 1, "", "pagerank"], [160, 2, 1, "", "random_walks"], [161, 2, 1, "", "shortest_path"], [162, 2, 1, "", "shortest_path_length"], [163, 2, 1, "", "sorensen"], [164, 2, 1, "", "sorensen_coefficient"], [165, 2, 1, "", "sorensen_w"], [166, 2, 1, "", "spectralBalancedCutClustering"], [167, 2, 1, "", "spectralModularityMaximizationClustering"], [168, 2, 1, "", "sssp"], [169, 2, 1, "", "strongly_connected_components"], [205, 2, 1, "", "subgraph"], [206, 2, 1, "", "symmetrize"], [207, 2, 1, "", "symmetrize_ddf"], [208, 2, 1, "", "symmetrize_df"], [209, 2, 1, "", "to_numpy_array"], [210, 2, 1, "", "to_numpy_matrix"], [211, 2, 1, "", "to_pandas_adjacency"], [212, 2, 1, "", "to_pandas_edgelist"], [215, 2, 1, "", "triangle_count"], [216, 2, 1, "", "uniform_neighbor_sample"], [217, 2, 1, "", "weakly_connected_components"]], "cugraph.BiPartiteGraph": [[57, 1, 1, "", "__init__"]], "cugraph.Graph": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "add_internal_vertex_id"], [60, 1, 1, "", "add_nodes_from"], [61, 1, 1, "", "clear"], [62, 1, 1, "", "from_cudf_adjlist"], [63, 1, 1, "", "from_cudf_edgelist"], [64, 1, 1, "", "from_dask_cudf_edgelist"], [65, 1, 1, "", "from_numpy_array"], [66, 1, 1, "", "from_numpy_matrix"], [67, 1, 1, "", "from_pandas_adjacency"], [68, 1, 1, "", "from_pandas_edgelist"], [69, 1, 1, "", "has_isolated_vertices"], [70, 1, 1, "", "is_bipartite"], [71, 1, 1, "", "is_directed"], [72, 1, 1, "", "is_multigraph"], [73, 1, 1, "", "is_multipartite"], [74, 1, 1, "", "is_renumbered"], [75, 1, 1, "", "is_weighted"], [76, 1, 1, "", "lookup_internal_vertex_id"], [77, 1, 1, "", "to_directed"], [78, 1, 1, "", "to_undirected"], [79, 1, 1, "", "unrenumber"]], "cugraph.MultiGraph": [[80, 1, 1, "", "__init__"]], "cugraph.centrality": [[88, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.eigenvector_centrality": [[91, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.katz_centrality": [[92, 2, 1, "", "katz_centrality"]], "cugraph.dask.common.read_utils": [[93, 2, 1, "", "get_chunksize"]], "cugraph.dask.comms.comms": [[94, 2, 1, "", "destroy"], [95, 2, 1, "", "get_2D_partition"], [96, 2, 1, "", "get_comms"], [97, 2, 1, "", "get_default_handle"], [98, 2, 1, "", "get_handle"], [99, 2, 1, "", "get_session_id"], [100, 2, 1, "", "get_worker_id"], [101, 2, 1, "", "get_workers"], [102, 2, 1, "", "initialize"], [103, 2, 1, "", "is_initialized"]], "cugraph.dask.community.louvain": [[104, 2, 1, "", "louvain"]], "cugraph.dask.components.connectivity": [[105, 2, 1, "", "weakly_connected_components"]], "cugraph.dask.link_analysis.hits": [[106, 2, 1, "", "hits"]], "cugraph.dask.link_analysis.pagerank": [[107, 2, 1, "", "pagerank"]], "cugraph.dask.traversal.bfs": [[108, 2, 1, "", "bfs"]], "cugraph.dask.traversal.sssp": [[109, 2, 1, "", "sssp"]], "cugraph.experimental": [[115, 0, 1, "", "PropertyGraph"], [132, 0, 1, "", "PropertySelection"]], "cugraph.experimental.PropertyGraph": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "add_edge_data"], [117, 1, 1, "", "add_vertex_data"], [118, 1, 1, "", "annotate_dataframe"], [119, 1, 1, "", "edge_props_to_graph"], [120, 1, 1, "", "extract_subgraph"], [121, 1, 1, "", "get_edge_data"], [122, 1, 1, "", "get_num_edges"], [123, 1, 1, "", "get_num_vertices"], [124, 1, 1, "", "get_vertex_data"], [125, 1, 1, "", "get_vertices"], [126, 1, 1, "", "has_duplicate_edges"], [127, 1, 1, "", "is_multigraph"], [128, 1, 1, "", "renumber_edges_by_type"], [129, 1, 1, "", "renumber_vertices_by_type"], [130, 1, 1, "", "select_edges"], [131, 1, 1, "", "select_vertices"]], "cugraph.experimental.PropertySelection": [[132, 1, 1, "", "__init__"]], "cugraph.generators": [[142, 2, 1, "", "rmat"]], "cugraph.structure": [[170, 0, 1, "", "NumberMap"]], "cugraph.structure.NumberMap": [[170, 1, 1, "", "__init__"], [173, 1, 1, "", "add_internal_vertex_id"], [174, 1, 1, "", "compute_vals"], [175, 1, 1, "", "compute_vals_types"], [176, 1, 1, "", "from_internal_vertex_id"], [177, 1, 1, "", "generate_unused_column_name"], [178, 1, 1, "", "renumber"], [179, 1, 1, "", "renumber_and_segment"], [180, 1, 1, "", "set_renumbered_col_names"], [181, 1, 1, "", "to_internal_vertex_id"], [182, 1, 1, "", "unrenumber"], [183, 1, 1, "", "vertex_column_size"]], "cugraph.structure.graph_implementation.simpleGraphImpl": [[184, 1, 1, "", "degree"], [185, 1, 1, "", "degrees"], [186, 1, 1, "", "delete_adj_list"], [187, 1, 1, "", "delete_edge_list"], [188, 1, 1, "", "edges"], [189, 1, 1, "", "enable_batch"], [190, 1, 1, "", "get_two_hop_neighbors"], [191, 1, 1, "", "has_edge"], [192, 1, 1, "", "has_node"], [193, 1, 1, "", "has_self_loop"], [194, 1, 1, "", "in_degree"], [195, 1, 1, "", "neighbors"], [196, 1, 1, "", "nodes"], [197, 1, 1, "", "number_of_edges"], [198, 1, 1, "", "number_of_nodes"], [199, 1, 1, "", "number_of_vertices"], [200, 1, 1, "", "out_degree"], [201, 1, 1, "", "vertex_column_size"], [202, 1, 1, "", "view_adj_list"], [203, 1, 1, "", "view_edge_list"], [204, 1, 1, "", "view_transposed_adj_list"]], "cugraph.tree.minimum_spanning_tree": [[213, 2, 1, "", "maximum_spanning_tree"], [214, 2, 1, "", "minimum_spanning_tree"]], "cugraph_dgl.convert": [[0, 2, 1, "", "cugraph_storage_from_heterograph"]], "cugraph_dgl.cugraph_storage": [[1, 0, 1, "", "CuGraphStorage"]], "cugraph_dgl.cugraph_storage.CuGraphStorage": [[1, 1, 1, "", "__init__"]], "cugraph_pyg.data.cugraph_store": [[2, 0, 1, "", "EXPERIMENTAL__CuGraphStore"]], "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore": [[2, 1, 1, "", "__init__"]], "cugraph_pyg.sampler.cugraph_sampler": [[3, 0, 1, "", "EXPERIMENTAL__CuGraphSampler"]], "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler": [[3, 1, 1, "", "__init__"]], "cugraph_service_client.client": [[227, 0, 1, "", "CugraphServiceClient"], [228, 0, 1, "", "DeviceArrayAllocator"], [229, 0, 1, "", "RunAsyncioThread"], [230, 2, 1, "", "run_async"]], "cugraph_service_client.client.CugraphServiceClient": [[227, 1, 1, "", "__init__"]], "cugraph_service_client.client.DeviceArrayAllocator": [[228, 1, 1, "", "__init__"]], "cugraph_service_client.client.RunAsyncioThread": [[229, 1, 1, "", "__init__"]], "cugraph_service_client.remote_graph": [[231, 0, 1, "", "RemoteGraph"]], "cugraph_service_client.remote_graph.RemoteGraph": [[231, 1, 1, "", "__init__"]], "cugraph_service_client": [[232, 3, 0, "-", "remote_graph_utils"]], "cugraph_service_client.types": [[233, 0, 1, "", "GraphVertexEdgeIDWrapper"], [234, 0, 1, "", "UnionWrapper"], [235, 0, 1, "", "ValueWrapper"]], "cugraph_service_client.types.GraphVertexEdgeIDWrapper": [[233, 1, 1, "", "__init__"]], "cugraph_service_client.types.UnionWrapper": [[234, 1, 1, "", "__init__"]], "cugraph_service_client.types.ValueWrapper": [[235, 1, 1, "", "__init__"]], "cugraph_service_server.cugraph_handler": [[236, 0, 1, "", "CugraphHandler"], [237, 0, 1, "", "ExtensionServerFacade"], [238, 2, 1, "", "call_algo"]], "cugraph_service_server.cugraph_handler.CugraphHandler": [[236, 1, 1, "", "__init__"]], "cugraph_service_server.cugraph_handler.ExtensionServerFacade": [[237, 1, 1, "", "__init__"]], "pylibcugraph": [[218, 2, 1, "", "bfs"], [219, 2, 1, "", "eigenvector_centrality"], [220, 2, 1, "", "hits"], [221, 2, 1, "", "katz_centrality"], [222, 2, 1, "", "node2vec"], [223, 2, 1, "", "pagerank"], [224, 2, 1, "", "sssp"], [225, 2, 1, "", "strongly_connected_components"], [226, 2, 1, "", "weakly_connected_components"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"cugraph_dgl": [0, 1, 273], "convert": 0, "cugraph_storage_from_heterograph": 0, "cugraph_storag": 1, "cugraphstorag": 1, "cugraph_pyg": [2, 3, 274], "data": [2, 256, 264, 266, 279, 291], "cugraph_stor": 2, "experimental__cugraphstor": 2, "sampler": 3, "cugraph_sampl": 3, "experimental__cugraphsampl": 3, "cugraph": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 239, 240, 245, 246, 259, 262, 263, 266, 267, 277, 287, 288, 290, 297, 298], "bipartitegraph": [4, 57], "graph": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 242, 246, 248, 254, 256, 264, 266, 270, 275, 281, 283], "add_internal_vertex_id": [6, 39, 59, 173], "add_nodes_from": [7, 60], "clear": [8, 61], "from_cudf_adjlist": [9, 62], "from_cudf_edgelist": [10, 29, 63, 136], "from_dask_cudf_edgelist": [11, 64], "from_numpy_arrai": [12, 31, 65, 138], "from_numpy_matrix": [13, 32, 66, 139], "from_pandas_adjac": [14, 33, 67, 140], "from_pandas_edgelist": [15, 34, 68, 141], "has_isolated_vertic": [16, 69], "is_bipartit": [17, 70], "is_direct": [18, 71], "is_multigraph": [19, 72, 127], "is_multipartit": [20, 73], "is_renumb": [21, 74], "is_weight": [22, 75], "lookup_internal_vertex_id": [23, 76], "to_direct": [24, 77], "to_undirect": [25, 78], "unrenumb": [26, 48, 79, 182], "multigraph": [27, 80], "from_adjlist": [28, 135], "from_edgelist": [30, 137], "hypergraph": [35, 145], "structur": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "numbermap": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 256, 264], "multigpu": [37, 171], "singlegpu": [38, 172], "compute_v": [40, 174], "compute_vals_typ": [41, 175], "from_internal_vertex_id": [42, 176], "generate_unused_column_nam": [43, 177], "renumb": [44, 178], "renumber_and_seg": [45, 179], "set_renumbered_col_nam": [46, 180], "to_internal_vertex_id": [47, 181], "vertex_column_s": [49, 183, 201], "symmetr": [50, 206, 256, 264], "symmetrize_ddf": [51, 207], "symmetrize_df": [52, 208], "to_numpy_arrai": [53, 209], "to_numpy_matrix": [54, 210], "to_pandas_adjac": [55, 211], "to_pandas_edgelist": [56, 212], "analyzeclustering_edge_cut": 81, "analyzeclustering_modular": 82, "analyzeclustering_ratio_cut": 83, "batched_ego_graph": 84, "betweenness_centr": 85, "bf": [86, 108, 218], "bfs_edg": 87, "central": [88, 91, 92, 241], "eigenvector_centr": [88, 91, 219], "connected_compon": 89, "core_numb": 90, "dask": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 249], "katz_centr": [92, 151, 221], "common": 93, "read_util": 93, "get_chunks": 93, "comm": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "destroi": 94, "get_2d_partit": 95, "get_comm": 96, "get_default_handl": 97, "get_handl": 98, "get_session_id": 99, "get_worker_id": 100, "get_work": 101, "initi": 102, "is_initi": 103, "commun": [104, 242], "louvain": [104, 154, 242], "compon": [105, 243], "connect": [105, 243], "weakly_connected_compon": [105, 217, 226], "link_analysi": [106, 107], "hit": [106, 143, 220, 252], "pagerank": [107, 159, 223, 252], "travers": [108, 109, 257], "sssp": [109, 168, 224], "degree_centr": 110, "dense_hungarian": 111, "ecg": [112, 242], "edge_betweenness_centr": 113, "ego_graph": 114, "experiment": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "propertygraph": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "add_edge_data": 116, "add_vertex_data": 117, "annotate_datafram": 118, "edge_props_to_graph": 119, "extract_subgraph": 120, "get_edge_data": 121, "get_num_edg": 122, "get_num_vertic": 123, "get_vertex_data": 124, "get_vertic": 125, "has_duplicate_edg": 126, "renumber_edges_by_typ": 128, "renumber_vertices_by_typ": 129, "select_edg": 130, "select_vertic": 131, "propertyselect": 132, "filter_unreach": 133, "force_atlas2": 134, "gener": [142, 247], "rmat": [142, 247], "hungarian": [144, 251], "jaccard": [146, 253], "jaccard_coeffici": 147, "jaccard_w": 148, "k_core": 149, "k_truss": 150, "ktruss_subgraph": 152, "leiden": [153, 242], "node2vec": [155, 222, 255], "overlap": [156, 253], "overlap_coeffici": 157, "overlap_w": 158, "random_walk": 160, "shortest_path": 161, "shortest_path_length": 162, "sorensen": [163, 253], "sorensen_coeffici": 164, "sorensen_w": 165, "spectralbalancedcutclust": 166, "spectralmodularitymaximizationclust": 167, "strongly_connected_compon": [169, 225], "graph_implement": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "simplegraphimpl": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "degre": [184, 185, 241], "delete_adj_list": 186, "delete_edge_list": 187, "edg": 188, "enable_batch": 189, "get_two_hop_neighbor": 190, "has_edg": 191, "has_nod": 192, "has_self_loop": 193, "in_degre": 194, "neighbor": 195, "node": 196, "number_of_edg": 197, "number_of_nod": 198, "number_of_vertic": 199, "out_degre": 200, "view_adj_list": 202, "view_edge_list": 203, "view_transposed_adj_list": 204, "subgraph": [205, 242], "tree": [213, 214, 258], "minimum_spanning_tre": [213, 214], "maximum_spanning_tre": 213, "triangle_count": 215, "uniform_neighbor_sampl": 216, "pylibcugraph": [218, 219, 220, 221, 222, 223, 224, 225, 226, 261], "cugraph_service_cli": [227, 228, 229, 230, 231, 232, 233, 234, 235], "client": [227, 228, 229, 230, 262], "cugraphservicecli": 227, "devicearrayalloc": 228, "runasynciothread": 229, "run_async": 230, "remote_graph": 231, "remotegraph": 231, "remote_graph_util": 232, "type": [233, 234, 235], "graphvertexedgeidwrapp": 233, "unionwrapp": 234, "valuewrapp": 235, "cugraph_service_serv": [236, 237, 238], "cugraph_handl": [236, 237, 238], "cugraphhandl": 236, "extensionserverfacad": 237, "call_algo": 238, "dgl": 239, "api": [239, 240, 245, 259, 260, 261, 262, 263, 271], "refer": [239, 240, 245, 260, 261, 262, 263, 291, 293], "method": [239, 249, 261, 266], "pyg": 240, "between": 241, "katz": 241, "mg": [241, 242, 243, 249, 252, 257], "eigenvector": 241, "egonet": 242, "ensembl": 242, "cluster": 242, "k": [242, 244], "truss": 242, "spectral": 242, "extract": 242, "triangl": 242, "count": 242, "core": 244, "number": 244, "document": [245, 260, 287, 290], "multi": 246, "gpu": 246, "distribut": 246, "analyt": 246, "exampl": 246, "implement": 248, "helper": 249, "function": 249, "layout": 250, "forc": 250, "atla": 250, "2": 250, "linear": 251, "assign": 251, "link": [252, 253, 259], "analysi": 252, "predict": 253, "coeffici": 253, "properti": 254, "sampl": 255, "random": 255, "walk": 255, "class": [256, 264], "constructor": [256, 264], "ad": [256, 264], "check": [256, 264], "convers": [256, 264], "from": [256, 264, 273, 290], "other": [256, 264, 291, 297], "format": [256, 264], "breadth": 257, "first": 257, "search": 257, "singl": 257, "sourc": [257, 273, 290], "shortest": 257, "path": [257, 270], "minimum": 258, "span": 258, "maximum": 258, "c": [259, 290], "python": [260, 290], "servic": [262, 263, 277], "server": 263, "cascad": 266, "object": [266, 270], "algorithm": [266, 270, 275, 282, 291], "introduct": 267, "vision": 267, "terminologi": 267, "roadmap": 267, "basic": 269, "networkx": 270, "compat": [270, 276], "transit": 270, "last": 270, "updat": [270, 290], "easi": 270, "us": [270, 290], "acceler": 270, "differ": 270, "exactli": 270, "match": 270, "do": 270, "copi": 270, "over": 270, "addit": 270, "attribut": [270, 290], "where": 270, "all": 270, "argument": 270, "ar": 270, "support": [270, 275, 278, 281, 283], "result": 270, "build": [270, 273, 290], "develop": [272, 273], "resourc": [272, 296], "descript": 273, "conda": [273, 288, 290], "creat": [273, 290], "environ": [273, 290], "instal": [273, 289, 290], "edit": 273, "mode": 273, "run": [273, 290], "test": [273, 290], "usag": 273, "list": 275, "plan": 275, "cugraphop": 278, "store": 279, "neural": 281, "network": 281, "welcom": 287, "": 287, "content": 287, "indic": 287, "tabl": 287, "get": 288, "packag": [288, 290], "docker": 288, "pip": 288, "prerequisit": 290, "clone": 290, "repo": 290, "configur": 290, "sh": 290, "script": 290, "each": 290, "section": 290, "independ": 290, "cuda": 290, "libcugraph": 290, "librari": 290, "raft": 290, "branch": 290, "option": 290, "set": [290, 291], "variabl": 290, "activ": 290, "architectur": 291, "paper": [291, 297], "releas": 295, "commmun": 296, "blog": 297, "present": 297, "confer": 297, "2022": 297, "2021": 297, "2020": 297, "2019": 297, "2018": 297, "media": 297, "academ": 297, "rapid": [297, 298], "event": 297, "notebook": [297, 298], "summari": 298, "requir": 298, "copyright": 298, "how": 299, "To": 299, "guid": 299, "tutori": 300}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"cugraph_dgl.convert.cugraph_storage_from_heterograph": [[0, "cugraph-dgl-convert-cugraph-storage-from-heterograph"]], "cugraph_dgl.cugraph_storage.CuGraphStorage": [[1, "cugraph-dgl-cugraph-storage-cugraphstorage"]], "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore": [[2, "cugraph-pyg-data-cugraph-store-experimental-cugraphstore"]], "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler": [[3, "cugraph-pyg-sampler-cugraph-sampler-experimental-cugraphsampler"]], "cugraph.BiPartiteGraph": [[4, "cugraph-bipartitegraph"], [57, "cugraph-bipartitegraph"]], "cugraph.Graph": [[5, "cugraph-graph"], [58, "cugraph-graph"]], "cugraph.Graph.add_internal_vertex_id": [[6, "cugraph-graph-add-internal-vertex-id"], [59, "cugraph-graph-add-internal-vertex-id"]], "cugraph.Graph.add_nodes_from": [[7, "cugraph-graph-add-nodes-from"], [60, "cugraph-graph-add-nodes-from"]], "cugraph.Graph.clear": [[8, "cugraph-graph-clear"], [61, "cugraph-graph-clear"]], "cugraph.Graph.from_cudf_adjlist": [[9, "cugraph-graph-from-cudf-adjlist"], [62, "cugraph-graph-from-cudf-adjlist"]], "cugraph.Graph.from_cudf_edgelist": [[10, "cugraph-graph-from-cudf-edgelist"], [63, "cugraph-graph-from-cudf-edgelist"]], "cugraph.Graph.from_dask_cudf_edgelist": [[11, "cugraph-graph-from-dask-cudf-edgelist"], [64, "cugraph-graph-from-dask-cudf-edgelist"]], "cugraph.Graph.from_numpy_array": [[12, "cugraph-graph-from-numpy-array"], [65, "cugraph-graph-from-numpy-array"]], "cugraph.Graph.from_numpy_matrix": [[13, "cugraph-graph-from-numpy-matrix"], [66, "cugraph-graph-from-numpy-matrix"]], "cugraph.Graph.from_pandas_adjacency": [[14, "cugraph-graph-from-pandas-adjacency"], [67, "cugraph-graph-from-pandas-adjacency"]], "cugraph.Graph.from_pandas_edgelist": [[15, "cugraph-graph-from-pandas-edgelist"], [68, "cugraph-graph-from-pandas-edgelist"]], "cugraph.Graph.has_isolated_vertices": [[16, "cugraph-graph-has-isolated-vertices"], [69, "cugraph-graph-has-isolated-vertices"]], "cugraph.Graph.is_bipartite": [[17, "cugraph-graph-is-bipartite"], [70, "cugraph-graph-is-bipartite"]], "cugraph.Graph.is_directed": [[18, "cugraph-graph-is-directed"], [71, "cugraph-graph-is-directed"]], "cugraph.Graph.is_multigraph": [[19, "cugraph-graph-is-multigraph"], [72, "cugraph-graph-is-multigraph"]], "cugraph.Graph.is_multipartite": [[20, "cugraph-graph-is-multipartite"], [73, "cugraph-graph-is-multipartite"]], "cugraph.Graph.is_renumbered": [[21, "cugraph-graph-is-renumbered"], [74, "cugraph-graph-is-renumbered"]], "cugraph.Graph.is_weighted": [[22, "cugraph-graph-is-weighted"], [75, "cugraph-graph-is-weighted"]], "cugraph.Graph.lookup_internal_vertex_id": [[23, "cugraph-graph-lookup-internal-vertex-id"], [76, "cugraph-graph-lookup-internal-vertex-id"]], "cugraph.Graph.to_directed": [[24, "cugraph-graph-to-directed"], [77, "cugraph-graph-to-directed"]], "cugraph.Graph.to_undirected": [[25, "cugraph-graph-to-undirected"], [78, "cugraph-graph-to-undirected"]], "cugraph.Graph.unrenumber": [[26, "cugraph-graph-unrenumber"], [79, "cugraph-graph-unrenumber"]], "cugraph.MultiGraph": [[27, "cugraph-multigraph"], [80, "cugraph-multigraph"]], "cugraph.from_adjlist": [[28, "cugraph-from-adjlist"], [135, "cugraph-from-adjlist"]], "cugraph.from_cudf_edgelist": [[29, "cugraph-from-cudf-edgelist"], [136, "cugraph-from-cudf-edgelist"]], "cugraph.from_edgelist": [[30, "cugraph-from-edgelist"], [137, "cugraph-from-edgelist"]], "cugraph.from_numpy_array": [[31, "cugraph-from-numpy-array"], [138, "cugraph-from-numpy-array"]], "cugraph.from_numpy_matrix": [[32, "cugraph-from-numpy-matrix"], [139, "cugraph-from-numpy-matrix"]], "cugraph.from_pandas_adjacency": [[33, "cugraph-from-pandas-adjacency"], [140, "cugraph-from-pandas-adjacency"]], "cugraph.from_pandas_edgelist": [[34, "cugraph-from-pandas-edgelist"], [141, "cugraph-from-pandas-edgelist"]], "cugraph.hypergraph": [[35, "cugraph-hypergraph"], [145, "cugraph-hypergraph"]], "cugraph.structure.NumberMap": [[36, "cugraph-structure-numbermap"], [170, "cugraph-structure-numbermap"]], "cugraph.structure.NumberMap.MultiGPU": [[37, "cugraph-structure-numbermap-multigpu"], [171, "cugraph-structure-numbermap-multigpu"]], "cugraph.structure.NumberMap.SingleGPU": [[38, "cugraph-structure-numbermap-singlegpu"], [172, "cugraph-structure-numbermap-singlegpu"]], "cugraph.structure.NumberMap.add_internal_vertex_id": [[39, "cugraph-structure-numbermap-add-internal-vertex-id"], [173, "cugraph-structure-numbermap-add-internal-vertex-id"]], "cugraph.structure.NumberMap.compute_vals": [[40, "cugraph-structure-numbermap-compute-vals"], [174, "cugraph-structure-numbermap-compute-vals"]], "cugraph.structure.NumberMap.compute_vals_types": [[41, "cugraph-structure-numbermap-compute-vals-types"], [175, "cugraph-structure-numbermap-compute-vals-types"]], "cugraph.structure.NumberMap.from_internal_vertex_id": [[42, "cugraph-structure-numbermap-from-internal-vertex-id"], [176, "cugraph-structure-numbermap-from-internal-vertex-id"]], "cugraph.structure.NumberMap.generate_unused_column_name": [[43, "cugraph-structure-numbermap-generate-unused-column-name"], [177, "cugraph-structure-numbermap-generate-unused-column-name"]], "cugraph.structure.NumberMap.renumber": [[44, "cugraph-structure-numbermap-renumber"], [178, "cugraph-structure-numbermap-renumber"]], "cugraph.structure.NumberMap.renumber_and_segment": [[45, "cugraph-structure-numbermap-renumber-and-segment"], [179, "cugraph-structure-numbermap-renumber-and-segment"]], "cugraph.structure.NumberMap.set_renumbered_col_names": [[46, "cugraph-structure-numbermap-set-renumbered-col-names"], [180, "cugraph-structure-numbermap-set-renumbered-col-names"]], "cugraph.structure.NumberMap.to_internal_vertex_id": [[47, "cugraph-structure-numbermap-to-internal-vertex-id"], [181, "cugraph-structure-numbermap-to-internal-vertex-id"]], "cugraph.structure.NumberMap.unrenumber": [[48, "cugraph-structure-numbermap-unrenumber"], [182, "cugraph-structure-numbermap-unrenumber"]], "cugraph.structure.NumberMap.vertex_column_size": [[49, "cugraph-structure-numbermap-vertex-column-size"], [183, "cugraph-structure-numbermap-vertex-column-size"]], "cugraph.symmetrize": [[50, "cugraph-symmetrize"], [206, "cugraph-symmetrize"]], "cugraph.symmetrize_ddf": [[51, "cugraph-symmetrize-ddf"], [207, "cugraph-symmetrize-ddf"]], "cugraph.symmetrize_df": [[52, "cugraph-symmetrize-df"], [208, "cugraph-symmetrize-df"]], "cugraph.to_numpy_array": [[53, "cugraph-to-numpy-array"], [209, "cugraph-to-numpy-array"]], "cugraph.to_numpy_matrix": [[54, "cugraph-to-numpy-matrix"], [210, "cugraph-to-numpy-matrix"]], "cugraph.to_pandas_adjacency": [[55, "cugraph-to-pandas-adjacency"], [211, "cugraph-to-pandas-adjacency"]], "cugraph.to_pandas_edgelist": [[56, "cugraph-to-pandas-edgelist"], [212, "cugraph-to-pandas-edgelist"]], "cugraph.analyzeClustering_edge_cut": [[81, "cugraph-analyzeclustering-edge-cut"]], "cugraph.analyzeClustering_modularity": [[82, "cugraph-analyzeclustering-modularity"]], "cugraph.analyzeClustering_ratio_cut": [[83, "cugraph-analyzeclustering-ratio-cut"]], "cugraph.batched_ego_graphs": [[84, "cugraph-batched-ego-graphs"]], "cugraph.betweenness_centrality": [[85, "cugraph-betweenness-centrality"]], "cugraph.bfs": [[86, "cugraph-bfs"]], "cugraph.bfs_edges": [[87, "cugraph-bfs-edges"]], "cugraph.centrality.eigenvector_centrality": [[88, "cugraph-centrality-eigenvector-centrality"]], "cugraph.connected_components": [[89, "cugraph-connected-components"]], "cugraph.core_number": [[90, "cugraph-core-number"]], "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality": [[91, "cugraph-dask-centrality-eigenvector-centrality-eigenvector-centrality"]], "cugraph.dask.centrality.katz_centrality.katz_centrality": [[92, "cugraph-dask-centrality-katz-centrality-katz-centrality"]], "cugraph.dask.common.read_utils.get_chunksize": [[93, "cugraph-dask-common-read-utils-get-chunksize"]], "cugraph.dask.comms.comms.destroy": [[94, "cugraph-dask-comms-comms-destroy"]], "cugraph.dask.comms.comms.get_2D_partition": [[95, "cugraph-dask-comms-comms-get-2d-partition"]], "cugraph.dask.comms.comms.get_comms": [[96, "cugraph-dask-comms-comms-get-comms"]], "cugraph.dask.comms.comms.get_default_handle": [[97, "cugraph-dask-comms-comms-get-default-handle"]], "cugraph.dask.comms.comms.get_handle": [[98, "cugraph-dask-comms-comms-get-handle"]], "cugraph.dask.comms.comms.get_session_id": [[99, "cugraph-dask-comms-comms-get-session-id"]], "cugraph.dask.comms.comms.get_worker_id": [[100, "cugraph-dask-comms-comms-get-worker-id"]], "cugraph.dask.comms.comms.get_workers": [[101, "cugraph-dask-comms-comms-get-workers"]], "cugraph.dask.comms.comms.initialize": [[102, "cugraph-dask-comms-comms-initialize"]], "cugraph.dask.comms.comms.is_initialized": [[103, "cugraph-dask-comms-comms-is-initialized"]], "cugraph.dask.community.louvain.louvain": [[104, "cugraph-dask-community-louvain-louvain"]], "cugraph.dask.components.connectivity.weakly_connected_components": [[105, "cugraph-dask-components-connectivity-weakly-connected-components"]], "cugraph.dask.link_analysis.hits.hits": [[106, "cugraph-dask-link-analysis-hits-hits"]], "cugraph.dask.link_analysis.pagerank.pagerank": [[107, "cugraph-dask-link-analysis-pagerank-pagerank"]], "cugraph.dask.traversal.bfs.bfs": [[108, "cugraph-dask-traversal-bfs-bfs"]], "cugraph.dask.traversal.sssp.sssp": [[109, "cugraph-dask-traversal-sssp-sssp"]], "cugraph.degree_centrality": [[110, "cugraph-degree-centrality"]], "cugraph.dense_hungarian": [[111, "cugraph-dense-hungarian"]], "cugraph.ecg": [[112, "cugraph-ecg"]], "cugraph.edge_betweenness_centrality": [[113, "cugraph-edge-betweenness-centrality"]], "cugraph.ego_graph": [[114, "cugraph-ego-graph"]], "cugraph.experimental.PropertyGraph": [[115, "cugraph-experimental-propertygraph"]], "cugraph.experimental.PropertyGraph.add_edge_data": [[116, "cugraph-experimental-propertygraph-add-edge-data"]], "cugraph.experimental.PropertyGraph.add_vertex_data": [[117, "cugraph-experimental-propertygraph-add-vertex-data"]], "cugraph.experimental.PropertyGraph.annotate_dataframe": [[118, "cugraph-experimental-propertygraph-annotate-dataframe"]], "cugraph.experimental.PropertyGraph.edge_props_to_graph": [[119, "cugraph-experimental-propertygraph-edge-props-to-graph"]], "cugraph.experimental.PropertyGraph.extract_subgraph": [[120, "cugraph-experimental-propertygraph-extract-subgraph"]], "cugraph.experimental.PropertyGraph.get_edge_data": [[121, "cugraph-experimental-propertygraph-get-edge-data"]], "cugraph.experimental.PropertyGraph.get_num_edges": [[122, "cugraph-experimental-propertygraph-get-num-edges"]], "cugraph.experimental.PropertyGraph.get_num_vertices": [[123, "cugraph-experimental-propertygraph-get-num-vertices"]], "cugraph.experimental.PropertyGraph.get_vertex_data": [[124, "cugraph-experimental-propertygraph-get-vertex-data"]], "cugraph.experimental.PropertyGraph.get_vertices": [[125, "cugraph-experimental-propertygraph-get-vertices"]], "cugraph.experimental.PropertyGraph.has_duplicate_edges": [[126, "cugraph-experimental-propertygraph-has-duplicate-edges"]], "cugraph.experimental.PropertyGraph.is_multigraph": [[127, "cugraph-experimental-propertygraph-is-multigraph"]], "cugraph.experimental.PropertyGraph.renumber_edges_by_type": [[128, "cugraph-experimental-propertygraph-renumber-edges-by-type"]], "cugraph.experimental.PropertyGraph.renumber_vertices_by_type": [[129, "cugraph-experimental-propertygraph-renumber-vertices-by-type"]], "cugraph.experimental.PropertyGraph.select_edges": [[130, "cugraph-experimental-propertygraph-select-edges"]], "cugraph.experimental.PropertyGraph.select_vertices": [[131, "cugraph-experimental-propertygraph-select-vertices"]], "cugraph.experimental.PropertySelection": [[132, "cugraph-experimental-propertyselection"]], "cugraph.filter_unreachable": [[133, "cugraph-filter-unreachable"]], "cugraph.force_atlas2": [[134, "cugraph-force-atlas2"]], "cugraph.generators.rmat": [[142, "cugraph-generators-rmat"]], "cugraph.hits": [[143, "cugraph-hits"]], "cugraph.hungarian": [[144, "cugraph-hungarian"]], "cugraph.jaccard": [[146, "cugraph-jaccard"]], "cugraph.jaccard_coefficient": [[147, "cugraph-jaccard-coefficient"]], "cugraph.jaccard_w": [[148, "cugraph-jaccard-w"]], "cugraph.k_core": [[149, "cugraph-k-core"]], "cugraph.k_truss": [[150, "cugraph-k-truss"]], "cugraph.katz_centrality": [[151, "cugraph-katz-centrality"]], "cugraph.ktruss_subgraph": [[152, "cugraph-ktruss-subgraph"]], "cugraph.leiden": [[153, "cugraph-leiden"]], "cugraph.louvain": [[154, "cugraph-louvain"]], "cugraph.node2vec": [[155, "cugraph-node2vec"]], "cugraph.overlap": [[156, "cugraph-overlap"]], "cugraph.overlap_coefficient": [[157, "cugraph-overlap-coefficient"]], "cugraph.overlap_w": [[158, "cugraph-overlap-w"]], "cugraph.pagerank": [[159, "cugraph-pagerank"]], "cugraph.random_walks": [[160, "cugraph-random-walks"]], "cugraph.shortest_path": [[161, "cugraph-shortest-path"]], "cugraph.shortest_path_length": [[162, "cugraph-shortest-path-length"]], "cugraph.sorensen": [[163, "cugraph-sorensen"]], "cugraph.sorensen_coefficient": [[164, "cugraph-sorensen-coefficient"]], "cugraph.sorensen_w": [[165, "cugraph-sorensen-w"]], "cugraph.spectralBalancedCutClustering": [[166, "cugraph-spectralbalancedcutclustering"]], "cugraph.spectralModularityMaximizationClustering": [[167, "cugraph-spectralmodularitymaximizationclustering"]], "cugraph.sssp": [[168, "cugraph-sssp"]], "cugraph.strongly_connected_components": [[169, "cugraph-strongly-connected-components"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degree": [[184, "cugraph-structure-graph-implementation-simplegraphimpl-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degrees": [[185, "cugraph-structure-graph-implementation-simplegraphimpl-degrees"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list": [[186, "cugraph-structure-graph-implementation-simplegraphimpl-delete-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list": [[187, "cugraph-structure-graph-implementation-simplegraphimpl-delete-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.edges": [[188, "cugraph-structure-graph-implementation-simplegraphimpl-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch": [[189, "cugraph-structure-graph-implementation-simplegraphimpl-enable-batch"]], "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors": [[190, "cugraph-structure-graph-implementation-simplegraphimpl-get-two-hop-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge": [[191, "cugraph-structure-graph-implementation-simplegraphimpl-has-edge"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_node": [[192, "cugraph-structure-graph-implementation-simplegraphimpl-has-node"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop": [[193, "cugraph-structure-graph-implementation-simplegraphimpl-has-self-loop"]], "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree": [[194, "cugraph-structure-graph-implementation-simplegraphimpl-in-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors": [[195, "cugraph-structure-graph-implementation-simplegraphimpl-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.nodes": [[196, "cugraph-structure-graph-implementation-simplegraphimpl-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges": [[197, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes": [[198, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices": [[199, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-vertices"]], "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree": [[200, "cugraph-structure-graph-implementation-simplegraphimpl-out-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size": [[201, "cugraph-structure-graph-implementation-simplegraphimpl-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list": [[202, "cugraph-structure-graph-implementation-simplegraphimpl-view-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list": [[203, "cugraph-structure-graph-implementation-simplegraphimpl-view-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list": [[204, "cugraph-structure-graph-implementation-simplegraphimpl-view-transposed-adj-list"]], "cugraph.subgraph": [[205, "cugraph-subgraph"]], "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree": [[213, "cugraph-tree-minimum-spanning-tree-maximum-spanning-tree"]], "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree": [[214, "cugraph-tree-minimum-spanning-tree-minimum-spanning-tree"]], "cugraph.triangle_count": [[215, "cugraph-triangle-count"]], "cugraph.uniform_neighbor_sample": [[216, "cugraph-uniform-neighbor-sample"]], "cugraph.weakly_connected_components": [[217, "cugraph-weakly-connected-components"]], "pylibcugraph.bfs": [[218, "pylibcugraph-bfs"]], "pylibcugraph.eigenvector_centrality": [[219, "pylibcugraph-eigenvector-centrality"]], "pylibcugraph.hits": [[220, "pylibcugraph-hits"]], "pylibcugraph.katz_centrality": [[221, "pylibcugraph-katz-centrality"]], "pylibcugraph.node2vec": [[222, "pylibcugraph-node2vec"]], "pylibcugraph.pagerank": [[223, "pylibcugraph-pagerank"]], "pylibcugraph.sssp": [[224, "pylibcugraph-sssp"]], "pylibcugraph.strongly_connected_components": [[225, "pylibcugraph-strongly-connected-components"]], "pylibcugraph.weakly_connected_components": [[226, "pylibcugraph-weakly-connected-components"]], "cugraph_service_client.client.CugraphServiceClient": [[227, "cugraph-service-client-client-cugraphserviceclient"]], "cugraph_service_client.client.DeviceArrayAllocator": [[228, "cugraph-service-client-client-devicearrayallocator"]], "cugraph_service_client.client.RunAsyncioThread": [[229, "cugraph-service-client-client-runasynciothread"]], "cugraph_service_client.client.run_async": [[230, "cugraph-service-client-client-run-async"]], "cugraph_service_client.remote_graph.RemoteGraph": [[231, "cugraph-service-client-remote-graph-remotegraph"]], "cugraph_service_client.remote_graph_utils": [[232, "module-cugraph_service_client.remote_graph_utils"]], "cugraph_service_client.types.GraphVertexEdgeIDWrapper": [[233, "cugraph-service-client-types-graphvertexedgeidwrapper"]], "cugraph_service_client.types.UnionWrapper": [[234, "cugraph-service-client-types-unionwrapper"]], "cugraph_service_client.types.ValueWrapper": [[235, "cugraph-service-client-types-valuewrapper"]], "cugraph_service_server.cugraph_handler.CugraphHandler": [[236, "cugraph-service-server-cugraph-handler-cugraphhandler"]], "cugraph_service_server.cugraph_handler.ExtensionServerFacade": [[237, "cugraph-service-server-cugraph-handler-extensionserverfacade"]], "cugraph_service_server.cugraph_handler.call_algo": [[238, "cugraph-service-server-cugraph-handler-call-algo"]], "cugraph-dgl API Reference": [[239, "cugraph-dgl-api-reference"]], "Methods": [[239, "methods"], [249, "methods"], [261, "methods"]], "cugraph-pyg API Reference": [[240, "cugraph-pyg-api-reference"]], "Centrality": [[241, "centrality"]], "Betweenness Centrality": [[241, "betweenness-centrality"]], "Katz Centrality": [[241, "katz-centrality"]], "Katz Centrality (MG)": [[241, "katz-centrality-mg"]], "Degree Centrality": [[241, "degree-centrality"]], "Eigenvector Centrality": [[241, "eigenvector-centrality"]], "Eigenvector Centrality (MG)": [[241, "eigenvector-centrality-mg"]], "Community": [[242, "community"]], "EgoNet": [[242, "egonet"]], "Ensemble clustering for graphs (ECG)": [[242, "ensemble-clustering-for-graphs-ecg"]], "K-Truss": [[242, "k-truss"]], "Leiden": [[242, "leiden"]], "Louvain": [[242, "louvain"]], "Louvain (MG)": [[242, "louvain-mg"]], "Spectral Clustering": [[242, "spectral-clustering"]], "Subgraph Extraction": [[242, "subgraph-extraction"]], "Triangle Counting": [[242, "triangle-counting"]], "Components": [[243, "components"]], "Connected Components": [[243, "connected-components"]], "Connected Components (MG)": [[243, "connected-components-mg"]], "Cores": [[244, "cores"]], "Core Number": [[244, "core-number"]], "K-Core": [[244, "k-core"]], "cugraph API Reference": [[245, "cugraph-api-reference"]], "API Documentation": [[245, null]], "Multi-GPU with cuGraph": [[246, "multi-gpu-with-cugraph"]], "Distributed graph analytics": [[246, "distributed-graph-analytics"]], "Example": [[246, "example"]], "Generator": [[247, "generator"]], "RMAT": [[247, "rmat"]], "Graph Implementation": [[248, "graph-implementation"], [248, "id1"]], "DASK MG Helper functions": [[249, "dask-mg-helper-functions"]], "Layout": [[250, "layout"]], "Force Atlas 2": [[250, "force-atlas-2"]], "Linear Assignment": [[251, "linear-assignment"]], "Hungarian": [[251, "hungarian"]], "Link Analysis": [[252, "link-analysis"]], "HITS": [[252, "hits"]], "HITS (MG)": [[252, "hits-mg"]], "Pagerank": [[252, "pagerank"]], "Pagerank (MG)": [[252, "pagerank-mg"]], "Link Prediction": [[253, "link-prediction"]], "Jaccard Coefficient": [[253, "jaccard-coefficient"]], "Overlap Coefficient": [[253, "overlap-coefficient"]], "Sorensen Coefficient": [[253, "sorensen-coefficient"]], "Property Graph": [[254, "property-graph"], [254, "id1"]], "Sampling": [[255, "sampling"]], "Random Walks": [[255, "random-walks"]], "Node2Vec": [[255, "node2vec"]], "Graph Classes": [[256, "graph-classes"], [264, "graph-classes"]], "Constructors": [[256, "constructors"], [264, "constructors"]], "Adding Data": [[256, "adding-data"], [264, "adding-data"]], "Checks": [[256, "checks"], [264, "checks"]], "Symmetrize": [[256, "symmetrize"], [264, "symmetrize"]], "Conversion from Other Formats": [[256, "conversion-from-other-formats"], [264, "conversion-from-other-formats"]], "NumberMap": [[256, "numbermap"], [264, "numbermap"]], "Other": [[256, "other"], [264, "other"]], "Traversal": [[257, "traversal"]], "Breadth-first-search": [[257, "breadth-first-search"]], "Breadth-first-search (MG)": [[257, "breadth-first-search-mg"]], "Single-source-shortest-path": [[257, "single-source-shortest-path"]], "Single-source-shortest-path (MG)": [[257, "single-source-shortest-path-mg"]], "Tree": [[258, "tree"]], "Minimum Spanning Tree": [[258, "minimum-spanning-tree"]], "Maximum Spanning Tree": [[258, "maximum-spanning-tree"]], "CuGraph C and C++ API Links": [[259, "cugraph-c-and-c-api-links"]], "Python API reference": [[260, "python-api-reference"]], "Python API Documentation": [[260, null]], "pylibcugraph API reference": [[261, "pylibcugraph-api-reference"]], "cugraph-service-client API Reference": [[262, "cugraph-service-client-api-reference"]], "cugraph-service-server API Reference": [[263, "cugraph-service-server-api-reference"]], "Method Cascading and cuGraph": [[266, "method-cascading-and-cugraph"]], "Graph Data Objects": [[266, "graph-data-objects"]], "Algorithms": [[266, "algorithms"], [282, "algorithms"], [291, "algorithms"]], "cuGraph Introduction": [[267, "cugraph-introduction"]], "Vision": [[267, "vision"]], "Terminology": [[267, "terminology"]], "Roadmap": [[267, "roadmap"]], "Basics": [[269, "basics"]], "NetworkX Compatibility and Transition": [[270, "networkx-compatibility-and-transition"]], "Last Update": [[270, "last-update"]], "Easy Path \u2013 Use NetworkX Graph Objects, Accelerated Algorithms": [[270, "easy-path-use-networkx-graph-objects-accelerated-algorithms"]], "Differences in Algorithms": [[270, "differences-in-algorithms"]], "Algorithms that exactly match": [[270, "algorithms-that-exactly-match"]], "Algorithms that do not copy over additional attributes": [[270, "algorithms-that-do-not-copy-over-additional-attributes"]], "Algorithms not in NetworkX": [[270, "algorithms-not-in-networkx"]], "Algorithm where not all arguments are supported": [[270, "algorithm-where-not-all-arguments-are-supported"]], "Algorithms where the results are different": [[270, "algorithms-where-the-results-are-different"]], "Graph Building": [[270, "graph-building"]], "API": [[271, "api"]], "Developer Resources": [[272, "developer-resources"]], "cugraph_dgl": [[273, "cugraph-dgl"]], "Description": [[273, "description"]], "Conda": [[273, "conda"], [288, "conda"]], "Build from Source": [[273, "build-from-source"]], "Create the conda development environment": [[273, "create-the-conda-development-environment"]], "Install  in editable mode": [[273, "install-in-editable-mode"]], "Run tests": [[273, "run-tests"], [290, "run-tests"]], "Usage": [[273, "usage"]], "cugraph_pyg": [[274, "cugraph-pyg"]], "List of Supported and Planned Algorithms": [[275, "list-of-supported-and-planned-algorithms"]], "Supported Graph": [[275, "supported-graph"]], "Supported Algorithms": [[275, "supported-algorithms"]], "Compatibility": [[276, "compatibility"]], "CuGraph Service": [[277, "cugraph-service"]], "cugraphops Support": [[278, "cugraphops-support"]], "Data Stores": [[279, "data-stores"]], "Graph Neural Network Support": [[281, "graph-neural-network-support"]], "Graph Support": [[283, "graph-support"]], "Welcome to cuGraph\u2019s documentation!": [[287, "welcome-to-cugraph-s-documentation"]], "Contents:": [[287, null]], "Indices and tables": [[287, "indices-and-tables"]], "Getting cuGraph Packages": [[288, "getting-cugraph-packages"]], "Docker": [[288, "docker"]], "PIP": [[288, "pip"]], "Installation": [[289, "installation"]], "Building from Source": [[290, "building-from-source"]], "Prerequisites": [[290, "prerequisites"]], "Building cuGraph": [[290, "building-cugraph"]], "Clone Repo and Configure Conda Environment": [[290, "clone-repo-and-configure-conda-environment"]], "Build and Install Using the build.sh Script": [[290, "build-and-install-using-the-build-sh-script"]], "Building each section independently": [[290, "building-each-section-independently"]], "Build and Install the C++/CUDA libcugraph Library": [[290, "build-and-install-the-c-cuda-libcugraph-library"]], "Updating the RAFT branch": [[290, "updating-the-raft-branch"]], "Building and installing the Python package": [[290, "building-and-installing-the-python-package"]], "(OPTIONAL) Set environment variable on activation": [[290, "optional-set-environment-variable-on-activation"]], "Creating documentation": [[290, "creating-documentation"]], "Attribution": [[290, "attribution"]], "References": [[291, "references"], [293, "references"]], "Architecture": [[291, "architecture"]], "Other Papers": [[291, "other-papers"]], "Data Sets": [[291, "data-sets"]], "Releases": [[295, "releases"]], "Commmunity Resources": [[296, "commmunity-resources"]], "cuGraph Blogs and Presentations": [[297, "cugraph-blogs-and-presentations"]], "Blogs & Conferences": [[297, "blogs-conferences"]], "2022": [[297, "id1"]], "2021": [[297, "id2"]], "2020": [[297, "id3"]], "2019": [[297, "id4"]], "2018": [[297, "id5"]], "Media": [[297, "media"]], "Academic Papers": [[297, "academic-papers"]], "Other Blogs": [[297, "other-blogs"]], "RAPIDS Event Notebooks": [[297, "rapids-event-notebooks"]], "cuGraph Notebooks": [[298, "cugraph-notebooks"]], "Summary": [[298, "summary"]], "RAPIDS notebooks": [[298, "rapids-notebooks"]], "Requirements": [[298, "requirements"]], "Copyright": [[298, "copyright"]], "How To Guides": [[299, "how-to-guides"]], "Tutorials": [[300, "tutorials"]]}, "indexentries": {"cugraph_storage_from_heterograph() (in module cugraph_dgl.convert)": [[0, "cugraph_dgl.convert.cugraph_storage_from_heterograph"]], "cugraphstorage (class in cugraph_dgl.cugraph_storage)": [[1, "cugraph_dgl.cugraph_storage.CuGraphStorage"]], "__init__() (cugraph_dgl.cugraph_storage.cugraphstorage method)": [[1, "cugraph_dgl.cugraph_storage.CuGraphStorage.__init__"]], "experimental__cugraphstore (class in cugraph_pyg.data.cugraph_store)": [[2, "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore"]], "__init__() (cugraph_pyg.data.cugraph_store.experimental__cugraphstore method)": [[2, "cugraph_pyg.data.cugraph_store.EXPERIMENTAL__CuGraphStore.__init__"]], "experimental__cugraphsampler (class in cugraph_pyg.sampler.cugraph_sampler)": [[3, "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler"]], "__init__() (cugraph_pyg.sampler.cugraph_sampler.experimental__cugraphsampler method)": [[3, "cugraph_pyg.sampler.cugraph_sampler.EXPERIMENTAL__CuGraphSampler.__init__"]], "bipartitegraph (class in cugraph)": [[4, "cugraph.BiPartiteGraph"], [57, "cugraph.BiPartiteGraph"]], "__init__() (cugraph.bipartitegraph method)": [[4, "cugraph.BiPartiteGraph.__init__"], [57, "cugraph.BiPartiteGraph.__init__"]], "graph (class in cugraph)": [[5, "cugraph.Graph"], [58, "cugraph.Graph"]], "__init__() (cugraph.graph method)": [[5, "cugraph.Graph.__init__"], [58, "cugraph.Graph.__init__"]], "add_internal_vertex_id() (cugraph.graph method)": [[6, "cugraph.Graph.add_internal_vertex_id"], [59, "cugraph.Graph.add_internal_vertex_id"]], "add_nodes_from() (cugraph.graph method)": [[7, "cugraph.Graph.add_nodes_from"], [60, "cugraph.Graph.add_nodes_from"]], "clear() (cugraph.graph method)": [[8, "cugraph.Graph.clear"], [61, "cugraph.Graph.clear"]], "from_cudf_adjlist() (cugraph.graph method)": [[9, "cugraph.Graph.from_cudf_adjlist"], [62, "cugraph.Graph.from_cudf_adjlist"]], "from_cudf_edgelist() (cugraph.graph method)": [[10, "cugraph.Graph.from_cudf_edgelist"], [63, "cugraph.Graph.from_cudf_edgelist"]], "from_dask_cudf_edgelist() (cugraph.graph method)": [[11, "cugraph.Graph.from_dask_cudf_edgelist"], [64, "cugraph.Graph.from_dask_cudf_edgelist"]], "from_numpy_array() (cugraph.graph method)": [[12, "cugraph.Graph.from_numpy_array"], [65, "cugraph.Graph.from_numpy_array"]], "from_numpy_matrix() (cugraph.graph method)": [[13, "cugraph.Graph.from_numpy_matrix"], [66, "cugraph.Graph.from_numpy_matrix"]], "from_pandas_adjacency() (cugraph.graph method)": [[14, "cugraph.Graph.from_pandas_adjacency"], [67, "cugraph.Graph.from_pandas_adjacency"]], "from_pandas_edgelist() (cugraph.graph method)": [[15, "cugraph.Graph.from_pandas_edgelist"], [68, "cugraph.Graph.from_pandas_edgelist"]], "has_isolated_vertices() (cugraph.graph method)": [[16, "cugraph.Graph.has_isolated_vertices"], [69, "cugraph.Graph.has_isolated_vertices"]], "is_bipartite() (cugraph.graph method)": [[17, "cugraph.Graph.is_bipartite"], [70, "cugraph.Graph.is_bipartite"]], "is_directed() (cugraph.graph method)": [[18, "cugraph.Graph.is_directed"], [71, "cugraph.Graph.is_directed"]], "is_multigraph() (cugraph.graph method)": [[19, "cugraph.Graph.is_multigraph"], [72, "cugraph.Graph.is_multigraph"]], "is_multipartite() (cugraph.graph method)": [[20, "cugraph.Graph.is_multipartite"], [73, "cugraph.Graph.is_multipartite"]], "is_renumbered() (cugraph.graph method)": [[21, "cugraph.Graph.is_renumbered"], [74, "cugraph.Graph.is_renumbered"]], "is_weighted() (cugraph.graph method)": [[22, "cugraph.Graph.is_weighted"], [75, "cugraph.Graph.is_weighted"]], "lookup_internal_vertex_id() (cugraph.graph method)": [[23, "cugraph.Graph.lookup_internal_vertex_id"], [76, "cugraph.Graph.lookup_internal_vertex_id"]], "to_directed() (cugraph.graph method)": [[24, "cugraph.Graph.to_directed"], [77, "cugraph.Graph.to_directed"]], "to_undirected() (cugraph.graph method)": [[25, "cugraph.Graph.to_undirected"], [78, "cugraph.Graph.to_undirected"]], "unrenumber() (cugraph.graph method)": [[26, "cugraph.Graph.unrenumber"], [79, "cugraph.Graph.unrenumber"]], "multigraph (class in cugraph)": [[27, "cugraph.MultiGraph"], [80, "cugraph.MultiGraph"]], "__init__() (cugraph.multigraph method)": [[27, "cugraph.MultiGraph.__init__"], [80, "cugraph.MultiGraph.__init__"]], "from_adjlist() (in module cugraph)": [[28, "cugraph.from_adjlist"], [135, "cugraph.from_adjlist"]], "from_cudf_edgelist() (in module cugraph)": [[29, "cugraph.from_cudf_edgelist"], [136, "cugraph.from_cudf_edgelist"]], "from_edgelist() (in module cugraph)": [[30, "cugraph.from_edgelist"], [137, "cugraph.from_edgelist"]], "from_numpy_array() (in module cugraph)": [[31, "cugraph.from_numpy_array"], [138, "cugraph.from_numpy_array"]], "from_numpy_matrix() (in module cugraph)": [[32, "cugraph.from_numpy_matrix"], [139, "cugraph.from_numpy_matrix"]], "from_pandas_adjacency() (in module cugraph)": [[33, "cugraph.from_pandas_adjacency"], [140, "cugraph.from_pandas_adjacency"]], "from_pandas_edgelist() (in module cugraph)": [[34, "cugraph.from_pandas_edgelist"], [141, "cugraph.from_pandas_edgelist"]], "hypergraph() (in module cugraph)": [[35, "cugraph.hypergraph"], [145, "cugraph.hypergraph"]], "numbermap (class in cugraph.structure)": [[36, "cugraph.structure.NumberMap"], [170, "cugraph.structure.NumberMap"]], "__init__() (cugraph.structure.numbermap method)": [[36, "cugraph.structure.NumberMap.__init__"], [170, "cugraph.structure.NumberMap.__init__"]], "add_internal_vertex_id() (cugraph.structure.numbermap method)": [[39, "cugraph.structure.NumberMap.add_internal_vertex_id"], [173, "cugraph.structure.NumberMap.add_internal_vertex_id"]], "compute_vals() (cugraph.structure.numbermap static method)": [[40, "cugraph.structure.NumberMap.compute_vals"], [174, "cugraph.structure.NumberMap.compute_vals"]], "compute_vals_types() (cugraph.structure.numbermap static method)": [[41, "cugraph.structure.NumberMap.compute_vals_types"], [175, "cugraph.structure.NumberMap.compute_vals_types"]], "from_internal_vertex_id() (cugraph.structure.numbermap method)": [[42, "cugraph.structure.NumberMap.from_internal_vertex_id"], [176, "cugraph.structure.NumberMap.from_internal_vertex_id"]], "generate_unused_column_name() (cugraph.structure.numbermap static method)": [[43, "cugraph.structure.NumberMap.generate_unused_column_name"], [177, "cugraph.structure.NumberMap.generate_unused_column_name"]], "renumber() (cugraph.structure.numbermap static method)": [[44, "cugraph.structure.NumberMap.renumber"], [178, "cugraph.structure.NumberMap.renumber"]], "renumber_and_segment() (cugraph.structure.numbermap static method)": [[45, "cugraph.structure.NumberMap.renumber_and_segment"], [179, "cugraph.structure.NumberMap.renumber_and_segment"]], "set_renumbered_col_names() (cugraph.structure.numbermap method)": [[46, "cugraph.structure.NumberMap.set_renumbered_col_names"], [180, "cugraph.structure.NumberMap.set_renumbered_col_names"]], "to_internal_vertex_id() (cugraph.structure.numbermap method)": [[47, "cugraph.structure.NumberMap.to_internal_vertex_id"], [181, "cugraph.structure.NumberMap.to_internal_vertex_id"]], "unrenumber() (cugraph.structure.numbermap method)": [[48, "cugraph.structure.NumberMap.unrenumber"], [182, "cugraph.structure.NumberMap.unrenumber"]], "vertex_column_size() (cugraph.structure.numbermap method)": [[49, "cugraph.structure.NumberMap.vertex_column_size"], [183, "cugraph.structure.NumberMap.vertex_column_size"]], "symmetrize() (in module cugraph)": [[50, "cugraph.symmetrize"], [206, "cugraph.symmetrize"]], "symmetrize_ddf() (in module cugraph)": [[51, "cugraph.symmetrize_ddf"], [207, "cugraph.symmetrize_ddf"]], "symmetrize_df() (in module cugraph)": [[52, "cugraph.symmetrize_df"], [208, "cugraph.symmetrize_df"]], "to_numpy_array() (in module cugraph)": [[53, "cugraph.to_numpy_array"], [209, "cugraph.to_numpy_array"]], "to_numpy_matrix() (in module cugraph)": [[54, "cugraph.to_numpy_matrix"], [210, "cugraph.to_numpy_matrix"]], "to_pandas_adjacency() (in module cugraph)": [[55, "cugraph.to_pandas_adjacency"], [211, "cugraph.to_pandas_adjacency"]], "to_pandas_edgelist() (in module cugraph)": [[56, "cugraph.to_pandas_edgelist"], [212, "cugraph.to_pandas_edgelist"]], "analyzeclustering_edge_cut() (in module cugraph)": [[81, "cugraph.analyzeClustering_edge_cut"]], "analyzeclustering_modularity() (in module cugraph)": [[82, "cugraph.analyzeClustering_modularity"]], "analyzeclustering_ratio_cut() (in module cugraph)": [[83, "cugraph.analyzeClustering_ratio_cut"]], "batched_ego_graphs() (in module cugraph)": [[84, "cugraph.batched_ego_graphs"]], "betweenness_centrality() (in module cugraph)": [[85, "cugraph.betweenness_centrality"]], "bfs() (in module cugraph)": [[86, "cugraph.bfs"]], "bfs_edges() (in module cugraph)": [[87, "cugraph.bfs_edges"]], "eigenvector_centrality() (in module cugraph.centrality)": [[88, "cugraph.centrality.eigenvector_centrality"]], "connected_components() (in module cugraph)": [[89, "cugraph.connected_components"]], "core_number() (in module cugraph)": [[90, "cugraph.core_number"]], "eigenvector_centrality() (in module cugraph.dask.centrality.eigenvector_centrality)": [[91, "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality"]], "katz_centrality() (in module cugraph.dask.centrality.katz_centrality)": [[92, "cugraph.dask.centrality.katz_centrality.katz_centrality"]], "get_chunksize() (in module cugraph.dask.common.read_utils)": [[93, "cugraph.dask.common.read_utils.get_chunksize"]], "destroy() (in module cugraph.dask.comms.comms)": [[94, "cugraph.dask.comms.comms.destroy"]], "get_2d_partition() (in module cugraph.dask.comms.comms)": [[95, "cugraph.dask.comms.comms.get_2D_partition"]], "get_comms() (in module cugraph.dask.comms.comms)": [[96, "cugraph.dask.comms.comms.get_comms"]], "get_default_handle() (in module cugraph.dask.comms.comms)": [[97, "cugraph.dask.comms.comms.get_default_handle"]], "get_handle() (in module cugraph.dask.comms.comms)": [[98, "cugraph.dask.comms.comms.get_handle"]], "get_session_id() (in module cugraph.dask.comms.comms)": [[99, "cugraph.dask.comms.comms.get_session_id"]], "get_worker_id() (in module cugraph.dask.comms.comms)": [[100, "cugraph.dask.comms.comms.get_worker_id"]], "get_workers() (in module cugraph.dask.comms.comms)": [[101, "cugraph.dask.comms.comms.get_workers"]], "initialize() (in module cugraph.dask.comms.comms)": [[102, "cugraph.dask.comms.comms.initialize"]], "is_initialized() (in module cugraph.dask.comms.comms)": [[103, "cugraph.dask.comms.comms.is_initialized"]], "louvain() (in module cugraph.dask.community.louvain)": [[104, "cugraph.dask.community.louvain.louvain"]], "weakly_connected_components() (in module cugraph.dask.components.connectivity)": [[105, "cugraph.dask.components.connectivity.weakly_connected_components"]], "hits() (in module cugraph.dask.link_analysis.hits)": [[106, "cugraph.dask.link_analysis.hits.hits"]], "pagerank() (in module cugraph.dask.link_analysis.pagerank)": [[107, "cugraph.dask.link_analysis.pagerank.pagerank"]], "bfs() (in module cugraph.dask.traversal.bfs)": [[108, "cugraph.dask.traversal.bfs.bfs"]], "sssp() (in module cugraph.dask.traversal.sssp)": [[109, "cugraph.dask.traversal.sssp.sssp"]], "degree_centrality() (in module cugraph)": [[110, "cugraph.degree_centrality"]], "dense_hungarian() (in module cugraph)": [[111, "cugraph.dense_hungarian"]], "ecg() (in module cugraph)": [[112, "cugraph.ecg"]], "edge_betweenness_centrality() (in module cugraph)": [[113, "cugraph.edge_betweenness_centrality"]], "ego_graph() (in module cugraph)": [[114, "cugraph.ego_graph"]], "propertygraph (class in cugraph.experimental)": [[115, "cugraph.experimental.PropertyGraph"]], "__init__() (cugraph.experimental.propertygraph method)": [[115, "cugraph.experimental.PropertyGraph.__init__"]], "add_edge_data() (cugraph.experimental.propertygraph method)": [[116, "cugraph.experimental.PropertyGraph.add_edge_data"]], "add_vertex_data() (cugraph.experimental.propertygraph method)": [[117, "cugraph.experimental.PropertyGraph.add_vertex_data"]], "annotate_dataframe() (cugraph.experimental.propertygraph method)": [[118, "cugraph.experimental.PropertyGraph.annotate_dataframe"]], "edge_props_to_graph() (cugraph.experimental.propertygraph method)": [[119, "cugraph.experimental.PropertyGraph.edge_props_to_graph"]], "extract_subgraph() (cugraph.experimental.propertygraph method)": [[120, "cugraph.experimental.PropertyGraph.extract_subgraph"]], "get_edge_data() (cugraph.experimental.propertygraph method)": [[121, "cugraph.experimental.PropertyGraph.get_edge_data"]], "get_num_edges() (cugraph.experimental.propertygraph method)": [[122, "cugraph.experimental.PropertyGraph.get_num_edges"]], "get_num_vertices() (cugraph.experimental.propertygraph method)": [[123, "cugraph.experimental.PropertyGraph.get_num_vertices"]], "get_vertex_data() (cugraph.experimental.propertygraph method)": [[124, "cugraph.experimental.PropertyGraph.get_vertex_data"]], "get_vertices() (cugraph.experimental.propertygraph method)": [[125, "cugraph.experimental.PropertyGraph.get_vertices"]], "has_duplicate_edges() (cugraph.experimental.propertygraph class method)": [[126, "cugraph.experimental.PropertyGraph.has_duplicate_edges"]], "is_multigraph() (cugraph.experimental.propertygraph class method)": [[127, "cugraph.experimental.PropertyGraph.is_multigraph"]], "renumber_edges_by_type() (cugraph.experimental.propertygraph method)": [[128, "cugraph.experimental.PropertyGraph.renumber_edges_by_type"]], "renumber_vertices_by_type() (cugraph.experimental.propertygraph method)": [[129, "cugraph.experimental.PropertyGraph.renumber_vertices_by_type"]], "select_edges() (cugraph.experimental.propertygraph method)": [[130, "cugraph.experimental.PropertyGraph.select_edges"]], "select_vertices() (cugraph.experimental.propertygraph method)": [[131, "cugraph.experimental.PropertyGraph.select_vertices"]], "propertyselection (class in cugraph.experimental)": [[132, "cugraph.experimental.PropertySelection"]], "__init__() (cugraph.experimental.propertyselection method)": [[132, "cugraph.experimental.PropertySelection.__init__"]], "filter_unreachable() (in module cugraph)": [[133, "cugraph.filter_unreachable"]], "force_atlas2() (in module cugraph)": [[134, "cugraph.force_atlas2"]], "rmat() (in module cugraph.generators)": [[142, "cugraph.generators.rmat"]], "hits() (in module cugraph)": [[143, "cugraph.hits"]], "hungarian() (in module cugraph)": [[144, "cugraph.hungarian"]], "jaccard() (in module cugraph)": [[146, "cugraph.jaccard"]], "jaccard_coefficient() (in module cugraph)": [[147, "cugraph.jaccard_coefficient"]], "jaccard_w() (in module cugraph)": [[148, "cugraph.jaccard_w"]], "k_core() (in module cugraph)": [[149, "cugraph.k_core"]], "k_truss() (in module cugraph)": [[150, "cugraph.k_truss"]], "katz_centrality() (in module cugraph)": [[151, "cugraph.katz_centrality"]], "ktruss_subgraph() (in module cugraph)": [[152, "cugraph.ktruss_subgraph"]], "leiden() (in module cugraph)": [[153, "cugraph.leiden"]], "louvain() (in module cugraph)": [[154, "cugraph.louvain"]], "node2vec() (in module cugraph)": [[155, "cugraph.node2vec"]], "overlap() (in module cugraph)": [[156, "cugraph.overlap"]], "overlap_coefficient() (in module cugraph)": [[157, "cugraph.overlap_coefficient"]], "overlap_w() (in module cugraph)": [[158, "cugraph.overlap_w"]], "pagerank() (in module cugraph)": [[159, "cugraph.pagerank"]], "random_walks() (in module cugraph)": [[160, "cugraph.random_walks"]], "shortest_path() (in module cugraph)": [[161, "cugraph.shortest_path"]], "shortest_path_length() (in module cugraph)": [[162, "cugraph.shortest_path_length"]], "sorensen() (in module cugraph)": [[163, "cugraph.sorensen"]], "sorensen_coefficient() (in module cugraph)": [[164, "cugraph.sorensen_coefficient"]], "sorensen_w() (in module cugraph)": [[165, "cugraph.sorensen_w"]], "spectralbalancedcutclustering() (in module cugraph)": [[166, "cugraph.spectralBalancedCutClustering"]], "spectralmodularitymaximizationclustering() (in module cugraph)": [[167, "cugraph.spectralModularityMaximizationClustering"]], "sssp() (in module cugraph)": [[168, "cugraph.sssp"]], "strongly_connected_components() (in module cugraph)": [[169, "cugraph.strongly_connected_components"]], "degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[184, "cugraph.structure.graph_implementation.simpleGraphImpl.degree"]], "degrees() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[185, "cugraph.structure.graph_implementation.simpleGraphImpl.degrees"]], "delete_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[186, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list"]], "delete_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[187, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list"]], "edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[188, "cugraph.structure.graph_implementation.simpleGraphImpl.edges"]], "enable_batch() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[189, "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch"]], "get_two_hop_neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[190, "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors"]], "has_edge() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[191, "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge"]], "has_node() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[192, "cugraph.structure.graph_implementation.simpleGraphImpl.has_node"]], "has_self_loop() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[193, "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop"]], "in_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[194, "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree"]], "neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[195, "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors"]], "nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[196, "cugraph.structure.graph_implementation.simpleGraphImpl.nodes"]], "number_of_edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[197, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges"]], "number_of_nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[198, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes"]], "number_of_vertices() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[199, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices"]], "out_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[200, "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree"]], "vertex_column_size() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[201, "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size"]], "view_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[202, "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list"]], "view_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[203, "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list"]], "view_transposed_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[204, "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list"]], "subgraph() (in module cugraph)": [[205, "cugraph.subgraph"]], "maximum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[213, "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree"]], "minimum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[214, "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree"]], "triangle_count() (in module cugraph)": [[215, "cugraph.triangle_count"]], "uniform_neighbor_sample() (in module cugraph)": [[216, "cugraph.uniform_neighbor_sample"]], "weakly_connected_components() (in module cugraph)": [[217, "cugraph.weakly_connected_components"]], "bfs() (in module pylibcugraph)": [[218, "pylibcugraph.bfs"]], "eigenvector_centrality() (in module pylibcugraph)": [[219, "pylibcugraph.eigenvector_centrality"]], "hits() (in module pylibcugraph)": [[220, "pylibcugraph.hits"]], "katz_centrality() (in module pylibcugraph)": [[221, "pylibcugraph.katz_centrality"]], "node2vec() (in module pylibcugraph)": [[222, "pylibcugraph.node2vec"]], "pagerank() (in module pylibcugraph)": [[223, "pylibcugraph.pagerank"]], "sssp() (in module pylibcugraph)": [[224, "pylibcugraph.sssp"]], "strongly_connected_components() (in module pylibcugraph)": [[225, "pylibcugraph.strongly_connected_components"]], "weakly_connected_components() (in module pylibcugraph)": [[226, "pylibcugraph.weakly_connected_components"]], "cugraphserviceclient (class in cugraph_service_client.client)": [[227, "cugraph_service_client.client.CugraphServiceClient"]], "__init__() (cugraph_service_client.client.cugraphserviceclient method)": [[227, "cugraph_service_client.client.CugraphServiceClient.__init__"]], "devicearrayallocator (class in cugraph_service_client.client)": [[228, "cugraph_service_client.client.DeviceArrayAllocator"]], "__init__() (cugraph_service_client.client.devicearrayallocator method)": [[228, "cugraph_service_client.client.DeviceArrayAllocator.__init__"]], "runasynciothread (class in cugraph_service_client.client)": [[229, "cugraph_service_client.client.RunAsyncioThread"]], "__init__() (cugraph_service_client.client.runasynciothread method)": [[229, "cugraph_service_client.client.RunAsyncioThread.__init__"]], "run_async() (in module cugraph_service_client.client)": [[230, "cugraph_service_client.client.run_async"]], "remotegraph (class in cugraph_service_client.remote_graph)": [[231, "cugraph_service_client.remote_graph.RemoteGraph"]], "__init__() (cugraph_service_client.remote_graph.remotegraph method)": [[231, "cugraph_service_client.remote_graph.RemoteGraph.__init__"]], "cugraph_service_client.remote_graph_utils": [[232, "module-cugraph_service_client.remote_graph_utils"]], "module": [[232, "module-cugraph_service_client.remote_graph_utils"]], "graphvertexedgeidwrapper (class in cugraph_service_client.types)": [[233, "cugraph_service_client.types.GraphVertexEdgeIDWrapper"]], "__init__() (cugraph_service_client.types.graphvertexedgeidwrapper method)": [[233, "cugraph_service_client.types.GraphVertexEdgeIDWrapper.__init__"]], "unionwrapper (class in cugraph_service_client.types)": [[234, "cugraph_service_client.types.UnionWrapper"]], "__init__() (cugraph_service_client.types.unionwrapper method)": [[234, "cugraph_service_client.types.UnionWrapper.__init__"]], "valuewrapper (class in cugraph_service_client.types)": [[235, "cugraph_service_client.types.ValueWrapper"]], "__init__() (cugraph_service_client.types.valuewrapper method)": [[235, "cugraph_service_client.types.ValueWrapper.__init__"]], "cugraphhandler (class in cugraph_service_server.cugraph_handler)": [[236, "cugraph_service_server.cugraph_handler.CugraphHandler"]], "__init__() (cugraph_service_server.cugraph_handler.cugraphhandler method)": [[236, "cugraph_service_server.cugraph_handler.CugraphHandler.__init__"]], "extensionserverfacade (class in cugraph_service_server.cugraph_handler)": [[237, "cugraph_service_server.cugraph_handler.ExtensionServerFacade"]], "__init__() (cugraph_service_server.cugraph_handler.extensionserverfacade method)": [[237, "cugraph_service_server.cugraph_handler.ExtensionServerFacade.__init__"]], "call_algo() (in module cugraph_service_server.cugraph_handler)": [[238, "cugraph_service_server.cugraph_handler.call_algo"]]}})